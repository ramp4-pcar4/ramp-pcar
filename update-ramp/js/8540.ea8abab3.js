"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[8540],{48540:function(e,t,a){a.d(t,{applyEdits:function(){return l},r3:function(){return i},uploadAssets:function(){return S},zp:function(){return o}});var r=a(44444);function s(e){return null!=e?.applyEdits}function n(e){return"object"==typeof e&&null!=e&&"objectId"in e&&!!e.objectId}function i(e){return e.every(n)}function d(e){return"object"==typeof e&&null!=e&&"globalId"in e&&!!e.globalId}function o(e){return e.every(d)}async function l(e,t,a,s={}){let n;const i="gdbVersion"in e?e.gdbVersion:null,d=s.gdbVersion??i;if((0,r.V)(e)&&e.url)n=(0,r.W)(e.url,e.layerId,d,"original-and-current-features"===s.returnServiceEditsOption);else{n=(0,r.X)(),n.promise.then((t=>{(t.addedFeatures.length||t.updatedFeatures.length||t.deletedFeatures.length||t.addedAttachments.length||t.updatedAttachments.length||t.deletedAttachments.length)&&e.emit("edits",t)}));const t={result:n.promise};e.emit("apply-edits",t)}try{const{results:i,edits:d}=await u(e,t,a,s),o=e=>e.filter((e=>!e.error)).map(r.T),l={edits:d,addedFeatures:o(i.addFeatureResults),updatedFeatures:o(i.updateFeatureResults),deletedFeatures:o(i.deleteFeatureResults),addedAttachments:o(i.addAttachmentResults),updatedAttachments:o(i.updateAttachmentResults),deletedAttachments:o(i.deleteAttachmentResults),exceededTransferLimit:!1,historicMoment:i.editMoment?new Date(i.editMoment):null,globalIdToObjectId:s.globalIdToObjectId};return i.editedFeatureResults?.length&&(l.editedFeatures=i.editedFeatureResults),n.resolve(l),i}catch(o){throw n.reject(o),o}}async function u(e,t,a,n){if(await e.load(),!s(t))throw new r.s(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!(0,r.Y)(e))throw new r.s(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:i,options:d}=await p(e,a,n);return i.addFeatures?.length||i.updateFeatures?.length||i.deleteFeatures?.length||i.addAttachments?.length||i.updateAttachments?.length||i.deleteAttachments?.length?{edits:i,results:await t.applyEdits(i,d)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function p(e,t,a){const s=(0,r.Z)(e),n=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),i=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),d=null!=e.infoFor3D;if(v(t,s,a,!!n,!!i,`${e.type}-layer`),!s.data.isVersioned&&a?.gdbVersion)throw new r.s(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!s.editing.supportsRollbackOnFailure&&a?.rollbackOnFailureEnabled)throw new r.s(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");const o={...a};if(null!=o.rollbackOnFailureEnabled||s.editing.supportsRollbackOnFailure||(o.rollbackOnFailureEnabled=!0),o.rollbackOnFailureEnabled||"original-and-current-features"!==o.returnServiceEditsOption||(!1===o.rollbackOnFailureEnabled&&r.G.getLogger("esri.layers.graphics.editingSupport").warn(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwritten and set to true."),o.rollbackOnFailureEnabled=!0),!s.editing.supportsReturnServiceEditsInSourceSpatialReference&&o.returnServiceEditsInSourceSR)throw new r.s(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(o.returnServiceEditsInSourceSR&&"original-and-current-features"!==o.returnServiceEditsOption)throw new r.s(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const l=A(t,s,`${e.type}-layer`),u=a?.globalIdUsed||d,p=e.fields.filter((e=>"big-integer"===e.type||"oid"===e.type&&(e.length||0)>=8));if(u){const{globalIdField:t}=e;if(null==t)throw new r.s(`${e.type}-layer:invalid-parameter`,"Layer does not specify a global id field.");l.addFeatures.forEach((e=>b(e,t)))}return l.addFeatures.forEach((t=>f(t,e,u,p))),l.updateFeatures.forEach((t=>m(t,e,u,p))),l.deleteFeatures.forEach((t=>y(t,e,u,p))),l.addAttachments.forEach((t=>g(t,e))),l.updateAttachments.forEach((t=>g(t,e))),d&&await $(l,e),{edits:await w(l),options:o}}function c(e,t,a,s){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new r.s(`${t.type}-layer:invalid-parameter`,`Feature should have '${t.globalIdField}' when 'globalIdUsed' is true`);if(!("attributes"in e)&&!e.globalId)throw new r.s(`${t.type}-layer:invalid-parameter`,"`'globalId' of the feature should be passed when 'globalIdUsed' is true")}if(s.length&&"attributes"in e)for(const n of s){const a=e.attributes[n.name];if(void 0!==a&&!(0,r.a3)(n,a))throw new r.s(`${t.type}-layer:invalid-parameter`,`Big-integer field '${n.name}' of the feature must be less than ${Number.MAX_SAFE_INTEGER}`,{feature:e})}if("geometry"in e&&null!=e.geometry){if(e.geometry.hasZ&&!1===t.capabilities?.data.supportsZ)throw new r.s(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities?.data.supportsM)throw new r.s(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function h(e,t){if("geometry"in e&&"mesh"===e.geometry?.type&&null!=t.infoFor3D&&null!=t.spatialReference){const{geometry:a}=e,{spatialReference:s,vertexSpace:n}=a,i=t.spatialReference,d="local"===n.type,o=(0,r.a4)(i),l=(0,r.a5)(i,s),u=l||(0,r.a6)(i)&&((0,r.a6)(s)||(0,r.a7)(s));if(!(d&&o&&u||!d&&!o&&l))throw new r.s(`${t.type}-layer:mesh-unsupported`,`Uploading a mesh with a ${n.type} vertex space and a spatial reference wkid:${s.wkid} to a layer with a spatial reference wkid:${i.wkid} is not supported.`)}}function f(e,t,a,r){c(e,t,a,r),h(e,t)}function y(e,t,a,r){c(e,t,a,r)}function m(e,t,a,s){c(e,t,a,s),h(e,t);const n=(0,r.Z)(t);if("geometry"in e&&null!=e.geometry&&!n?.editing.supportsGeometryUpdate)throw new r.s(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function g(e,t){const{feature:a,attachment:s}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new r.s(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new r.s(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!s.globalId)throw new r.s(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!s.data&&!s.uploadId)throw new r.s(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(s.data instanceof File&&s.data.name)&&!s.name)throw new r.s(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities?.editing.supportsUploadWithItemId&&s.uploadId)throw new r.s(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof s.data){const e=(0,r._)(s.data);if(e&&!e.isBase64)throw new r.s(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function b(e,t){const{attributes:a}=e;null==a[t]&&(a[t]=(0,r.$)())}async function w(e){const t=e.addFeatures??[],a=e.updateFeatures??[],s=t.concat(a).map((e=>e.geometry)),n=await(0,r.a0)(s),i=t.length,d=a.length;return n.slice(0,i).forEach(((e,a)=>t[a].geometry=e)),n.slice(i,i+d).forEach(((e,t)=>a[t].geometry=e)),e}function F(e){return{addFeatures:Array.from(e?.addFeatures??[]),updateFeatures:Array.from(e?.updateFeatures??[]),deleteFeatures:e&&r.a8.isCollection(e.deleteFeatures)?e.deleteFeatures.toArray():e.deleteFeatures||[],addAttachments:e.addAttachments||[],updateAttachments:e.updateAttachments||[],deleteAttachments:e.deleteAttachments||[]}}function A(e,t,a){const s=F(e);if(s.addFeatures?.length&&!t.operations.supportsAdd)throw new r.s(`${a}:unsupported-operation`,"Layer does not support adding features.");if(s.updateFeatures?.length&&!t.operations.supportsUpdate)throw new r.s(`${a}:unsupported-operation`,"Layer does not support updating features.");if(s.deleteFeatures?.length&&!t.operations.supportsDelete)throw new r.s(`${a}:unsupported-operation`,"Layer does not support deleting features.");return s.addFeatures=s.addFeatures.map(I),s.updateFeatures=s.updateFeatures.map(I),s.addAssetFeatures=[],s}function v(e,t,a,s,n,i){if(!e||!s&&!n)throw new r.s(`${i}:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!t.editing.supportsGlobalId&&a?.globalIdUsed)throw new r.s(`${i}:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!t.editing.supportsGlobalId&&n)throw new r.s(`${i}:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!a?.globalIdUsed&&n)throw new r.s(`${i}:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true")}function I(e){const t=new r.a1;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function $(e,t){const{infoFor3D:a}=t;if(null==a)return;if(!(0,r.a2)(a))throw new r.s(`${t.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");e.addAssetFeatures??=[];const{addAssetFeatures:s}=e;for(const r of e.addFeatures??[])E(r)&&s.push(r);for(const r of e.updateFeatures??[])E(r)&&s.push(r)}function E(e){return"mesh"===e?.geometry?.type}function S(e,t,a,n){if(!s(t))throw new r.s(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!t.uploadAssets)throw new r.s(`${e.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:e});return t.uploadAssets(a,n)}}}]);
//# sourceMappingURL=8540.ea8abab3.js.map