"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[395],{10395:function(e,t,o){o.r(t),o.d(t,{default:function(){return u}});var r=o(44444);const i=["atom","xml"],s={base:r.ek,key:"type",typeMap:{"simple-line":r.el},errorContext:"symbol"},l={base:r.ek,key:"type",typeMap:{"picture-marker":r.em,"simple-marker":r.en},errorContext:"symbol"},n={base:r.ek,key:"type",typeMap:{"simple-fill":r.eo},errorContext:"symbol"};let a=class extends((0,r.ea)((0,r.eb)((0,r.ec)((0,r.ed)((0,r.ee)((0,r.ef)(r.ep))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline?.style.includes("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,r.r)(this.url,i)||"GeoRSS":e}set title(e){this._set("title",e)}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(r.B).then((()=>this._fetchService(t))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){const t=this.spatialReference,{data:o}=await(0,r.U)(r.cD.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:(0,r.a6)(t)?void 0:t.wkid??JSON.stringify(t)},signal:e});return o}_hasGeometry(e){return this.featureCollections?.some((t=>t.featureSet?.geometryType===e&&t.featureSet.features?.length>0))??!1}};(0,r.bt)([(0,r.bu)()],a.prototype,"description",void 0),(0,r.bt)([(0,r.bu)()],a.prototype,"featureCollections",void 0),(0,r.bt)([(0,r.eg)("service","featureCollections",["featureCollection.layers"])],a.prototype,"readFeatureCollections",null),(0,r.bt)([(0,r.bu)({type:r.bn,json:{name:"lookAtExtent"}})],a.prototype,"fullExtent",void 0),(0,r.bt)([(0,r.bu)(r.eh)],a.prototype,"id",void 0),(0,r.bt)([(0,r.bu)(r.ei)],a.prototype,"legendEnabled",void 0),(0,r.bt)([(0,r.bu)({types:s,json:{write:!0}})],a.prototype,"lineSymbol",void 0),(0,r.bt)([(0,r.bu)({type:["show","hide"]})],a.prototype,"listMode",void 0),(0,r.bt)([(0,r.bu)({types:l,json:{write:!0}})],a.prototype,"pointSymbol",void 0),(0,r.bt)([(0,r.bu)({types:n,json:{write:!0}})],a.prototype,"polygonSymbol",void 0),(0,r.bt)([(0,r.bu)({type:["GeoRSS"]})],a.prototype,"operationalLayerType",void 0),(0,r.bt)([(0,r.bu)(r.ej)],a.prototype,"url",void 0),(0,r.bt)([(0,r.bu)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],a.prototype,"title",null),(0,r.bt)([(0,r.bu)({readOnly:!0,json:{read:!1},value:"geo-rss"})],a.prototype,"type",void 0),a=(0,r.bt)([(0,r.bv)("esri.layers.GeoRSSLayer")],a);const u=a}}]);
//# sourceMappingURL=395.3c62ba20.js.map