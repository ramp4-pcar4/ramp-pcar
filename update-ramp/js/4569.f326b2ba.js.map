{"version":3,"file":"js/4569.f326b2ba.js","mappings":"0KAAwUA,E,gCAAE,IAAIC,EAAED,EAAE,cAAc,IAAE,WAAAE,GAAcC,SAASC,WAAWC,KAAKC,KAAK,UAAU,CAAC,KAAAC,GAAQ,OAAO,IAAIP,CAAC,IAAG,QAAE,EAAC,QAAE,CAACQ,cAAc,cAAcP,EAAEQ,UAAU,YAAO,GAAQR,EAAED,GAAE,QAAE,EAAC,QAAE,2DAA2DC,GAAG,MAAMS,EAAET,EAAEU,EAAE,CAACC,cAAc,IAAEJ,cAAcE,EAAEG,gBAAgB,KAAG,SAASC,EAAEC,GAAG,IAAIA,GAAGT,KAAK,OAAO,KAAK,MAAMU,EAAEL,EAAEI,GAAGT,MAAM,GAAGU,EAAE,CAAC,MAAMC,EAAE,IAAID,EAAE,OAAOC,EAAEC,KAAKH,GAAGE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAME,EAAE,sBAAAC,CAAuBJ,GAAG,MAAMC,EAAE,KAAEI,SAASL,EAAEM,YAAYC,GAAE,QAAEN,EAAED,EAAEV,MAAM,OAAOkB,QAAQC,QAAW,MAAHF,EAAQA,EAAEG,SAAS,KAAK,CAAC,2BAAAC,CAA4BX,GAAG,MAAMC,EAAE,KAAEI,SAASL,EAAEM,YAAYC,GAAE,QAAEN,GAAG,OAAOO,QAAQC,QAAQF,EAAE,CAAC,YAAMK,CAAOZ,GAAG,MAAMC,QAAQ,QAAED,EAAEa,KAAKb,EAAEc,SAAS,OAAOb,GAAGA,EAAES,QAAQ,CAAC,SAAAK,CAAUf,GAAGA,EAAEM,WAAW,KAAED,SAASL,EAAEM,YAAYN,EAAEgB,OAAOhB,EAAEgB,OAAO,KAAEX,SAASL,EAAEgB,QAAQ,KAAK,MAAMf,EAAEZ,KAAK4B,WAAWF,UAAUf,GAAG,OAAOQ,QAAQC,QAAW,MAAHR,EAAQA,EAAES,SAAS,KAAK,CAAC,sBAAMQ,CAAiBlB,GAAGX,KAAK4B,WAAW,KAAEZ,SAASL,EAAEmB,gBAAgBnB,EAAEoB,YAAiD,kBAArC/B,KAAK4B,YAAYI,aAAa/B,OAAyBD,KAAK4B,WAAWI,aAAaD,WAAWpB,EAAEoB,WAAW,CAAC,0BAAME,CAAqBtB,GAAGX,KAAKkC,gBAAe,IAAAC,GAAExB,EAAEyB,mBAAmB,CAAC,aAAMC,CAAQ1B,GAAG,MAAMC,EAAEZ,KAAKkC,eAAeG,QAAQ,CAACV,OAAO,KAAEX,SAASL,EAAEgB,QAAQW,mBAAmB3B,EAAE2B,mBAAmBC,KAAIrB,GAAM,MAAHA,EAAQ,KAAEF,SAASE,GAAG,OAAMsB,kBAAkB7B,EAAE6B,mBAAmBD,KAAIrB,GAAM,MAAHA,EAAQ,IAAEF,SAASE,GAAG,OAAMuB,iBAAiB9B,EAAE8B,mBAAmB,OAAU,MAAH7B,EAAQA,EAAES,SAAS,IAAI,CAAC,OAAAqB,CAAQ/B,GAAG,MAAMC,EAAEZ,KAAK4B,WAAWe,cAAc,KAAE3B,SAASL,EAAEiC,eAAejC,EAAEkC,eAAe,OAAO1B,QAAQC,QAAQR,GAAGS,SAAS,CAAC,4BAAAyB,CAA6BnC,GAAG,MAAMC,GAAE,QAAE,KAAEI,SAASL,EAAEiC,gBAAgB,OAAOzB,QAAQC,QAAQR,EAAE,CAAC,KAAAmC,CAAMpC,GAAG,MAAMC,GAAE,QAAE,KAAEI,SAASL,EAAEiC,eAAejC,EAAEqC,SAASrC,EAAEsC,qBAAqB,GAAkB,IAAhBtC,EAAEuC,aAAkB,OAAOtC,GAAGA,EAAEuC,SAAQ,CAACjC,EAAEkC,KAAKxC,EAAEyC,IAAID,EAAElC,GAAGG,SAAQ,IAAIF,QAAQC,QAAQR,EAAE,CAAC,QAAA0C,CAAS3C,GAAG,MAAMC,EAAE,KAAEI,SAASL,EAAEM,YAAYC,GAAE,QAAE,IAAIP,EAAEM,WAAWL,IAAI,OAAOO,QAAQC,QAAQF,GAAGG,SAAS,CAAC,wBAAMkC,CAAmB5C,GAAG,MAAMC,EAAED,EAAE6C,eAAejB,KAAIkB,GAAGA,EAAE,IAAI,KAAEA,GAAG,OAAMvC,GAAE,QAAEN,EAAED,EAAE+C,cAAc,CAACC,YAAYhD,EAAEgD,YAAYC,cAAcjD,EAAEiD,cAAcC,WAAWlD,EAAEkD,WAAWC,SAASnD,EAAEmD,WAAW,IAAIV,EAAEW,EAAE7C,EAAE,OAAOP,EAAEqD,QAAQD,GAAE,QAAE7C,EAAEP,EAAEsD,cAActD,EAAEqD,MAAMrD,EAAEuD,cAAcvD,EAAEwD,gBAAgBxD,EAAEyD,mBAAmBzD,EAAE0D,UAAUjB,GAAE,QAAEzC,EAAEsD,cAActD,EAAE0D,SAASN,GAAE,QAAEA,EAAEpD,EAAE2D,KAAK,YAAY,gBAAgBlB,IAAI,CAACnC,WAAW8C,GAAG1C,SAASkD,qBAAqBnB,EAAE,CAAC,oBAAMoB,CAAe7D,EAAEC,GAAG,MAAMM,EAAE,CAACM,KAAK,IAAIiD,aAAa9D,EAAE+D,SAASC,QAAQC,KAAK,IAAIC,WAAWlE,EAAE+D,SAASI,YAAYC,MAAMpE,EAAE+D,SAASK,MAAMC,OAAOrE,EAAE+D,SAASM,SAASC,WAAW7B,EAAE8B,UAAUnB,SAAS,QAAEpD,EAAEwE,SAASxE,EAAEyE,mBAAmBlE,EAAEN,EAAEyE,QAAQ,MAAM,CAACC,OAAO,CAACC,aAAanC,EAAEuB,OAAOa,YAAYzB,EAAEY,QAAQc,aAAa,CAACrC,EAAEuB,OAAOZ,EAAEY,QAAQ,CAAC,6BAAMe,CAAwB/E,GAAG,MAAMC,EAAE,KAAEI,SAASL,EAAEgF,iBAAiBzE,EAAE,KAAEF,SAASL,EAAEiF,iBAAiB,IAAIxC,EAAE,KAAKzC,EAAEkF,2BAA2BzC,EAAE,IAAI,KAAE,CAAC0C,MAAMnF,EAAEkF,6BAA6BlF,EAAEoF,iBAAgB,OAAEnF,EAAEoF,iBAAiB9E,EAAE8E,iBAAiB5C,WAAW,SAAI,MAAMW,EAAEpD,EAAEsF,gBAAgBxF,EAAEE,EAAEsF,iBAAiB,KAAK,OAAO,OAAE,IAAItF,EAAEgF,gBAAgB/E,EAAEgF,gBAAgB1E,EAAEgF,oBAAoB9C,EAAE6C,gBAAgBlC,GAAG,E","sources":["webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/RasterWorker-ZkCMSWCk.js"],"sourcesContent":["import{bt as f,e3 as u,bv as p,iH as o,iI as S,iJ as d,iK as y,bn as n,iL as x,D as O,iM as h,iN as N,iO as J,iP as P,iQ as b,iR as B,iS as v,iT as g,iU as k}from\"./main-DCIX61zy.js\";import{a as w,c as z,y as D,T}from\"./PolynomialTransform-C_RaF2be.js\";import{w as I,v as F,i as R}from\"./rasterProjectionHelper-CgVEist9.js\";var c;let l=c=class extends w{constructor(){super(...arguments),this.type=\"identity\"}clone(){return new c}};f([u({IdentityXform:\"identity\"})],l.prototype,\"type\",void 0),l=c=f([p(\"esri.layers.support.rasterTransforms.IdentityTransform\")],l);const E=l,G={GCSShiftXform:z,IdentityXform:E,PolynomialXform:D};function j(a){if(!a?.type)return null;const e=G[a?.type];if(e){const r=new e;return r.read(a),r}return null}class A{convertVectorFieldData(e){const r=o.fromJSON(e.pixelBlock),s=S(r,e.type);return Promise.resolve(s!=null?s.toJSON():null)}computeStatisticsHistograms(e){const r=o.fromJSON(e.pixelBlock),s=d(r);return Promise.resolve(s)}async decode(e){const r=await y(e.data,e.options);return r&&r.toJSON()}symbolize(e){e.pixelBlock=o.fromJSON(e.pixelBlock),e.extent=e.extent?n.fromJSON(e.extent):null;const r=this.symbolizer.symbolize(e);return Promise.resolve(r!=null?r.toJSON():null)}async updateSymbolizer(e){this.symbolizer=x.fromJSON(e.symbolizerJSON),e.histograms&&this.symbolizer?.rendererJSON.type===\"rasterStretch\"&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=T(e.rasterFunctionJSON)}async process(e){const r=this.rasterFunction.process({extent:n.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map(s=>s!=null?o.fromJSON(s):null),primaryPixelSizes:e.primaryPixelSizes?.map(s=>s!=null?O.fromJSON(s):null),primaryRasterIds:e.primaryRasterIds});return r!=null?r.toJSON():null}stretch(e){const r=this.symbolizer.simpleStretch(o.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r?.toJSON())}estimateStatisticsHistograms(e){const r=h(o.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=N(o.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,e.useBilinear===!1);return r&&r.forEach((s,t)=>{r.set(t,s?.toJSON())}),Promise.resolve(r)}clipTile(e){const r=o.fromJSON(e.pixelBlock),s=J({...e,pixelBlock:r});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(e){const r=e.srcPixelBlocks.map(m=>m?new o(m):null),s=P(r,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let t,i=s;return e.coefs&&(i=b(s,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(t=B(e.destDimension,e.gcsGrid),i=v(i,e.isUV?\"vector-uv\":\"vector-magdir\",t)),{pixelBlock:i?.toJSON(),localNorthDirections:t}}async createFlowMesh(e,r){const s={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:t,indexData:i}=await g(e.meshType,e.simulationSettings,s,r.signal);return{result:{vertexBuffer:t.buffer,indexBuffer:i.buffer},transferList:[t.buffer,i.buffer]}}async getProjectionOffsetGrid(e){const r=n.fromJSON(e.projectedExtent),s=n.fromJSON(e.srcBufferExtent);let t=null;e.datumTransformationSteps&&(t=new k({steps:e.datumTransformationSteps})),(e.includeGCSGrid||I(r.spatialReference,s.spatialReference,t))&&await F();const i=e.rasterTransform?j(e.rasterTransform):null;return R({...e,projectedExtent:r,srcBufferExtent:s,datumTransformation:t,rasterTransform:i})}}export{A as default};\n"],"names":["c","l","constructor","super","arguments","this","type","clone","IdentityXform","prototype","E","G","GCSShiftXform","PolynomialXform","j","a","e","r","read","A","convertVectorFieldData","fromJSON","pixelBlock","s","Promise","resolve","toJSON","computeStatisticsHistograms","decode","data","options","symbolize","extent","symbolizer","updateSymbolizer","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","T","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryPixelSizes","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","split","tileSize","maximumPyramidLevel","useBilinear","forEach","t","set","clipTile","mosaicAndTransform","srcPixelBlocks","m","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","i","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","rasterTransform","datumTransformation"],"sourceRoot":""}