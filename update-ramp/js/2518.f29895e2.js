"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[2518,7536],{2518:function(e,n,t){t.r(n),t.d(n,{buffer:function(){return Z},changeDefaultSpatialReferenceTolerance:function(){return j},clearDefaultSpatialReferenceTolerance:function(){return q},clip:function(){return o},contains:function(){return s},convexHull:function(){return R},crosses:function(){return d},cut:function(){return f},densify:function(){return C},difference:function(){return M},disjoint:function(){return A},distance:function(){return l},equals:function(){return p},extendedSpatialReferenceInfo:function(){return c},flipHorizontal:function(){return L},flipVertical:function(){return Y},generalize:function(){return k},geodesicArea:function(){return O},geodesicBuffer:function(){return _},geodesicDensify:function(){return H},geodesicLength:function(){return I},intersect:function(){return S},intersectLinesToPoints:function(){return X},intersects:function(){return h},isSimple:function(){return m},nearestCoordinate:function(){return D},nearestVertex:function(){return b},nearestVertices:function(){return T},offset:function(){return P},overlaps:function(){return g},planarArea:function(){return J},planarLength:function(){return N},relate:function(){return x},rotate:function(){return E},simplify:function(){return w},symmetricDifference:function(){return v},touches:function(){return y},union:function(){return V},within:function(){return G}});var r=t(44444),i=t(36239),u=t(7536);function a(e){const n=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return n?(0,r.aZ)(r.aY,n):r.aY.WGS84}function c(e){return i.G.extendedSpatialReferenceInfo(e)}function o(e,n){return i.G.clip(u.hydratedAdapter,a(e),e,n)}function f(e,n){return i.G.cut(u.hydratedAdapter,a(e),e,n)}function s(e,n){return i.G.contains(u.hydratedAdapter,a(e),e,n)}function d(e,n){return i.G.crosses(u.hydratedAdapter,a(e),e,n)}function l(e,n,t){return i.G.distance(u.hydratedAdapter,a(e),e,n,t)}function p(e,n){return i.G.equals(u.hydratedAdapter,a(e),e,n)}function h(e,n){return i.G.intersects(u.hydratedAdapter,a(e),e,n)}function y(e,n){return i.G.touches(u.hydratedAdapter,a(e),e,n)}function G(e,n){return i.G.within(u.hydratedAdapter,a(e),e,n)}function A(e,n){return i.G.disjoint(u.hydratedAdapter,a(e),e,n)}function g(e,n){return i.G.overlaps(u.hydratedAdapter,a(e),e,n)}function x(e,n,t){return i.G.relate(u.hydratedAdapter,a(e),e,n,t)}function m(e){return i.G.isSimple(u.hydratedAdapter,a(e),e)}function w(e){return i.G.simplify(u.hydratedAdapter,a(e),e)}function R(e,n=!1){return i.G.convexHull(u.hydratedAdapter,a(e),e,n)}function M(e,n){return i.G.difference(u.hydratedAdapter,a(e),e,n)}function v(e,n){return i.G.symmetricDifference(u.hydratedAdapter,a(e),e,n)}function S(e,n){return i.G.intersect(u.hydratedAdapter,a(e),e,n)}function V(e,n=null){return i.G.union(u.hydratedAdapter,a(e),e,n)}function P(e,n,t,r,c,o){return i.G.offset(u.hydratedAdapter,a(e),e,n,t,r,c,o)}function Z(e,n,t,r=!1){return i.G.buffer(u.hydratedAdapter,a(e),e,n,t,r)}function _(e,n,t,r,c,o){return i.G.geodesicBuffer(u.hydratedAdapter,a(e),e,n,t,r,c,o)}function D(e,n,t=!0){return i.G.nearestCoordinate(u.hydratedAdapter,a(e),e,n,t)}function b(e,n){return i.G.nearestVertex(u.hydratedAdapter,a(e),e,n)}function T(e,n,t,r){return i.G.nearestVertices(u.hydratedAdapter,a(e),e,n,t,r)}function z(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function E(e,n,t){if(null==e)throw new B;const r=e.spatialReference;if(null==(t=t??z(e)))throw new B;const u=e.constructor.fromJSON(i.G.rotate(e,n,t));return u.spatialReference=r,u}function L(e,n){if(null==e)throw new B;const t=e.spatialReference;if(null==(n=n??z(e)))throw new B;const r=e.constructor.fromJSON(i.G.flipHorizontal(e,n));return r.spatialReference=t,r}function Y(e,n){if(null==e)throw new B;const t=e.spatialReference;if(null==(n=n??z(e)))throw new B;const r=e.constructor.fromJSON(i.G.flipVertical(e,n));return r.spatialReference=t,r}function k(e,n,t,r){return i.G.generalize(u.hydratedAdapter,a(e),e,n,t,r)}function C(e,n,t){return i.G.densify(u.hydratedAdapter,a(e),e,n,t)}function H(e,n,t,r=0){return i.G.geodesicDensify(u.hydratedAdapter,a(e),e,n,t,r)}function J(e,n){return i.G.planarArea(u.hydratedAdapter,a(e),e,n)}function N(e,n){return i.G.planarLength(u.hydratedAdapter,a(e),e,n)}function O(e,n,t){return i.G.geodesicArea(u.hydratedAdapter,a(e),e,n,t)}function I(e,n,t){return i.G.geodesicLength(u.hydratedAdapter,a(e),e,n,t)}function X(e,n){return i.G.intersectLinesToPoints(u.hydratedAdapter,a(e),e,n)}function j(e,n){i.G.changeDefaultSpatialReferenceTolerance(e,n)}function q(e){i.G.clearDefaultSpatialReferenceTolerance(e)}class B extends Error{constructor(){super("Illegal Argument Exception")}}},7536:function(e,n,t){t.r(n),t.d(n,{hydratedAdapter:function(){return i}});var r=t(44444);const i={convertToGEGeometry:u,exportPoint:a,exportPolygon:c,exportPolyline:o,exportMultipoint:f,exportExtent:s};function u(e,n){if(null==n)return null;let t="cache"in n?n.cache._geVersion:void 0;return null==t&&(t=e.convertJSONToGeometry(n),"cache"in n&&(n.cache._geVersion=t)),t}function a(e,n,t){const i=e.hasZ(n),u=e.hasM(n),a=new r.D({x:e.getPointX(n),y:e.getPointY(n),spatialReference:t});return i&&(a.z=e.getPointZ(n)),u&&(a.m=e.getPointM(n)),a.cache._geVersion=n,a}function c(e,n,t){const i=new r.a$({rings:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return i.cache._geVersion=n,i}function o(e,n,t){const i=new r.a_({paths:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return i.cache._geVersion=n,i}function f(e,n,t){const i=new r.bU({hasZ:e.hasZ(n),hasM:e.hasM(n),points:e.exportPoints(n),spatialReference:t});return i.cache._geVersion=n,i}function s(e,n,t){const i=e.hasZ(n),u=e.hasM(n),a=new r.bn({xmin:e.getXMin(n),ymin:e.getYMin(n),xmax:e.getXMax(n),ymax:e.getYMax(n),spatialReference:t});if(i){const t=e.getZExtent(n);a.zmin=t.vmin,a.zmax=t.vmax}if(u){const t=e.getMExtent(n);a.mmin=t.vmin,a.mmax=t.vmax}return a.cache._geVersion=n,a}}}]);
//# sourceMappingURL=2518.f29895e2.js.map