{"version":3,"file":"js/8006.a348b4d6.js","mappings":"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","sources":["webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/LabelMetric-DpMX58iW.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/ProgramTemplate-B_NcbdFz.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/StyleDefinition-CovmM7Ch.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/VertexArrayObject-C4kjI814.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/VertexElementDescriptor-BAy1DPb3.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/WGLContainer-whJgsi2t.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/config-nuMERBvb.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/earcut-XDcq3zAf.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/vec3f32-BS0cezmI.js"],"sourcesContent":["import{s as g,cv as f,G as U,nj as Y,ct as L,cy as B,gC as P,nk as R,b1 as k,aC as c}from\"./main-DCIX61zy.js\";import\"./Program-1XjJitsM.js\";import{t as H}from\"./VertexElementDescriptor-BAy1DPb3.js\";let E=class m{constructor(t,e,s,i,r,a,o){this.instanceId=t,this.textureKey=e,this.indexStart=s,this.indexCount=i,this.vertexStart=r,this.vertexCount=a,this.overlaps=o}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new m(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,s,i,r,a,o,u){t.push(e),t.push(s),t.push(i),t.push(r),t.push(a),t.push(o),t.push(u)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const e=t.readInt32(),s=t.readInt32(),i=t.readInt32(),r=t.readInt32(),a=t.readInt32(),o=t.readInt32(),u=t.readInt32();return new m(e,s,i,r,a,o,u)}};E.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function I(n,t){if(t!==null){n.push(t.length);for(const e of t)e.serialize(n);return n}n.push(0)}function p(n,t,e){const s=n.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=t.deserialize(n,e);return i}let M=class _{constructor(t,e){this.id=t,this.sortKey=e,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),I(t,this.records),t}static deserialize(t){const e=t.readInt32(),s=t.readF32(),i=new _(e,s);return i.records=p(t,E)??[],i}};M.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+E.byteSizeHint;const S=()=>U.getLogger(\"esri.views.2d.engine.webgl.Utils\");function C(n){switch(n){case f.UNSIGNED_BYTE:return 1;case f.UNSIGNED_SHORT_4_4_4_4:return 2;case f.FLOAT:return 4;default:return void S().error(new g(\"webgl-utils\",`Unable to handle type ${n}`))}}function v(n){switch(n){case f.UNSIGNED_BYTE:return Uint8Array;case f.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case f.FLOAT:return Float32Array;default:return void S().error(new g(\"webgl-utils\",`Unable to handle type ${n}`))}}function z(n){const t=new Map;for(const e in n){const s=n[e];let i=0;t.set(e,s.map(r=>{const a=new H(r.name,r.count,r.type,i,0,r.normalized||!1);return i+=r.count*Y(r.type),a})),t.get(e).forEach(r=>r.stride=i)}return t}const O=n=>{const t=new Map;for(const e in n)for(const s of n[e])t.set(s.name,s.location);return t},G=n=>{const t={};return n.forEach((e,s)=>t[s]=e?.length?e[0].stride:0),t},y=new Map,D=(n,t)=>{if(!y.has(n)){const e=z(t),s={strides:G(e),bufferLayouts:e,attributes:O(t)};y.set(n,s)}return y.get(n)},W=n=>n.includes(\"data:image/svg+xml\");function X(n){const t=[];for(let e=0;e<n.length;e++)t.push(n.charCodeAt(e));return t}function $(n,t,e){const s=new L(t.width,t.height);return s.dataType=t.dataType,t.depth&&(s.depth=t.depth),t.flipped&&(s.flipped=t.flipped),t.hasMipmap&&(s.hasMipmap=t.hasMipmap),s.internalFormat=t.internalFormat,t.isImmutable&&(s.isImmutable=t.isImmutable),t.isOpaque&&(s.isOpaque=t.isOpaque),t.maxAnisotropy&&(s.maxAnisotropy=t.maxAnisotropy),s.pixelFormat=t.pixelFormat,t.preMultiplyAlpha&&(s.preMultiplyAlpha=t.preMultiplyAlpha),t.samplingMode&&(s.samplingMode=t.samplingMode),t.target&&(s.target=t.target),s.uniform=t.uniform,t.unpackAlignment&&(s.unpackAlignment=t.unpackAlignment),t.wrapMode&&(s.wrapMode=t.wrapMode),new B(n,s,e)}function K(n){return\"url\"in n&&\"urlHash\"in n?{...n,url:\"\"}:n}class l{constructor(t,e,s,i){this.transformedX=0,this.transformedY=0,this.center=P(t,e),this.centerT=R(),this.halfWidth=s/2,this.halfHeight=i/2,this.width=s,this.height=i}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new l(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(t,e=4){const s=Math.abs(t.centerT[0]-this.centerT[0]),i=Math.abs(t.centerT[1]-this.centerT[1]),r=(t.halfWidth+this.halfWidth+e)/s,a=(t.halfHeight+this.halfHeight+e)/i,o=Math.min(r,a);return Math.log2(o)}extend(t){const e=Math.min(this.xmin,t.xmin),s=Math.min(this.ymin,t.ymin),i=Math.max(this.xmax,t.xmax)-e,r=Math.max(this.ymax,t.ymax)-s,a=e+i/2,o=s+r/2;this.width=i,this.height=r,this.halfWidth=i/2,this.halfHeight=r/2,this.x=a,this.y=o}static deserialize(t){const e=t.readF32(),s=t.readF32(),i=t.readInt32(),r=t.readInt32();return new l(e,s,i,r)}}const x=new Float32Array(1),q=new Uint32Array(x.buffer);function j(n){return x[0]=n,q[0]}function V(n,t){return 65535&n|t<<16}function w(n){const t=j(n),e=t>>>31;let s=t>>>23&255,i=8388607&t;return s-=127,s>15?e<<15|31744:s<-25?0:(s<-14&&(i+=8388608,i/=2**(-14-s),s=-15),s+=15,i/=8192,i=J(i,1023),e<<15|s<<10|i)}function J(n,t){const e=Math.floor(n),s=n-e;return e<t&&(s>.5||s===.5&&e%2==1)?e+1:e}function F(n){let t=n>>>15,e=n>>10&31,s=1023&n;return t=t?-1:1,e-=15,s/=1024,e>-15?s+=1:e=-14,t*2**e*s}function Q(n){const t=n.map(({name:e,count:s,type:i})=>`${e}.${s}.${i}`).join(\",\");return k(t)}function h(n,t,e,s,i,r,a){if(n.primitiveName===t){let o=s?.readWithDefault(i,r,n[e]&&a);return n.type===\"text\"&&(o=o.toString()),void(n[e]=o)}if(\"type\"in n&&n.type!=null){if(n.effects)for(const o of n.effects)h(o,t,e,s,i,r,a);switch(n.type){case\"CIMPointSymbol\":case\"CIMLineSymbol\":case\"CIMPolygonSymbol\":if(n.symbolLayers)for(const o of n.symbolLayers)h(o,t,e,s,i,r,a);break;case\"CIMTextSymbol\":n.symbol&&h(n.symbol,t,e,s,i,r,a);break;case\"CIMHatchFill\":n.lineSymbol&&h(n.lineSymbol,t,e,s,i,r,a);break;case\"CIMPictureMarker\":case\"CIMCharacterMarker\":case\"CIMVectorMarker\":if(n.markerPlacement&&h(n.markerPlacement,t,e,s,i,r,a),n.type===\"CIMVectorMarker\"&&n.markerGraphics)for(const o of n.markerGraphics)h(o,t,e,s,i,r,a),h(o.symbol,t,e,s,i,r,a)}}}const Z=400;function tt(n){const t=n.width;return n.effects!=null?Z:Math.max(1.25*t,8)}function et(n,t,e,s){const i=e.packPrecisionFactor??1;switch(e.type){case c.BYTE:if(e.count===1)n.setInt8(s+e.offset,t*i);else for(let r=0;r<e.count;r++){const a=r*Int8Array.BYTES_PER_ELEMENT;n.setInt8(s+e.offset+a,t[r]*i)}break;case c.UNSIGNED_BYTE:if(e.count===1)n.setUint8(s+e.offset,t*i);else for(let r=0;r<e.count;r++){const a=r*Uint8Array.BYTES_PER_ELEMENT;n.setUint8(s+e.offset+a,t[r]*i)}break;case c.SHORT:if(e.count===1)n.setInt16(s+e.offset,t*i,!0);else for(let r=0;r<e.count;r++){const a=r*Int16Array.BYTES_PER_ELEMENT;n.setInt16(s+e.offset+a,t[r]*i,!0)}break;case c.UNSIGNED_SHORT:if(e.count===1)n.setUint16(s+e.offset,t*i,!0);else for(let r=0;r<e.count;r++){const a=r*Uint16Array.BYTES_PER_ELEMENT;n.setUint16(s+e.offset+a,t[r]*i,!0)}break;case c.INT:if(e.count===1)n.setInt32(s+e.offset,t*i,!0);else for(let r=0;r<e.count;r++){const a=r*Int32Array.BYTES_PER_ELEMENT;n.setInt32(s+e.offset+a,t[r]*i,!0)}break;case c.UNSIGNED_INT:if(e.count===1)n.setUint32(s+e.offset,t*i,!0);else for(let r=0;r<e.count;r++){const a=r*Uint32Array.BYTES_PER_ELEMENT;n.setUint32(s+e.offset+a,t[r]*i,!0)}break;case c.FLOAT:if(e.count===1)n.setFloat32(s+e.offset,t*i,!0);else for(let r=0;r<e.count;r++){const a=r*Float32Array.BYTES_PER_ELEMENT;n.setFloat32(s+e.offset+a,t[r]*i,!0)}break;case c.HALF_FLOAT:if(e.count===1)n.setUint16(s+e.offset,w(t*i),!0);else for(let r=0;r<e.count;r++){const a=r*Uint16Array.BYTES_PER_ELEMENT;n.setUint16(s+e.offset+a,w(t[r]*i),!0)}}}function st(n,t,e){switch(t.type){case c.BYTE:{if(t.count===1)return n.getInt8(e+t.offset);const s=[];for(let i=0;i<t.count;i++){const r=i*Int8Array.BYTES_PER_ELEMENT;s.push(n.getInt8(e+t.offset+r))}return s}case c.UNSIGNED_BYTE:{if(t.count===1)return n.getUint8(e+t.offset);const s=[];for(let i=0;i<t.count;i++){const r=i*Uint8Array.BYTES_PER_ELEMENT;s.push(n.getUint8(e+t.offset+r))}return s}case c.SHORT:{if(t.count===1)return n.getInt16(e+t.offset,!0);const s=[];for(let i=0;i<t.count;i++){const r=i*Int16Array.BYTES_PER_ELEMENT;s.push(n.getInt16(e+t.offset+r,!0))}return s}case c.UNSIGNED_SHORT:{if(t.count===1)return n.getUint16(e+t.offset,!0);const s=[];for(let i=0;i<t.count;i++){const r=i*Uint16Array.BYTES_PER_ELEMENT;s.push(n.getUint16(e+t.offset+r,!0))}return s}case c.INT:{if(t.count===1)return n.getInt32(e+t.offset,!0);const s=[];for(let i=0;i<t.count;i++){const r=i*Int32Array.BYTES_PER_ELEMENT;s.push(n.getInt32(e+t.offset+r,!0))}return s}case c.UNSIGNED_INT:{if(t.count===1)return n.getUint32(e+t.offset,!0);const s=[];for(let i=0;i<t.count;i++){const r=i*Uint32Array.BYTES_PER_ELEMENT;s.push(n.getUint32(e+t.offset+r,!0))}return s}case c.FLOAT:{if(t.count===1)return n.getFloat32(e+t.offset,!0);const s=[];for(let i=0;i<t.count;i++){const r=i*Float32Array.BYTES_PER_ELEMENT;s.push(n.getFloat32(e+t.offset+r,!0))}return s}case c.HALF_FLOAT:{if(t.count===1)return F(n.getUint16(e+t.offset,!0));const s=[];for(let i=0;i<t.count;i++){const r=i*Uint16Array.BYTES_PER_ELEMENT;s.push(F(n.getUint16(e+t.offset+r,!0)))}return s}}}class T{constructor(t,e,s,i,r,a,o,u,d=[]){this.entityTexel=t,this.anchorX=e,this.anchorY=s,this.directionX=i,this.directionY=r,this.maxScale=a,this.minScale=o,this.referenceBounds=u,this.bounds=d}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),I(t,this.bounds)}static deserialize(t){const e=t.readInt32(),s=t.readF32(),i=t.readF32(),r=t.readF32(),a=t.readF32(),o=t.readF32(),u=t.readF32(),d=t.readF32(),b=t.readF32(),A=t.readF32(),N=p(t,l)??[];return new T(e,s,i,r,a,o,u,{size:d,offsetX:b,offsetY:A},N)}}export{X as A,$ as T,E as a,D as b,C as c,v as d,Q as e,V as f,tt as g,st as h,l as i,K as j,p as n,et as o,T as r,M as s,h as t,W as y};\n","import{r as o}from\"./Program-1XjJitsM.js\";let c=class{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const l=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let s=l.exec(r);const i=[];for(;s!=null;)i.push({path:s[1],start:s.index,length:s[0].length}),s=l.exec(r);let h=0,n=\"\";return i.forEach(a=>{n+=r.slice(h,a.start),n+=t.has(a.path)?\"\":this._resolve(a.path,t),h=a.start+a.length}),n+=r.slice(h),t.set(e,n),n}_read(e){return this._readFile(e)}};function d(e,t,r=\"\"){return new o(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}export{d as a,c as e};\n","import{be as f,bf as y}from\"./main-DCIX61zy.js\";var p,a,u,n,m,l,o,i,r;(function(e){e[e.BACKGROUND=0]=\"BACKGROUND\",e[e.FILL=1]=\"FILL\",e[e.LINE=2]=\"LINE\",e[e.SYMBOL=3]=\"SYMBOL\",e[e.CIRCLE=4]=\"CIRCLE\"})(p||(p={})),function(e){e[e.VISIBLE=0]=\"VISIBLE\",e[e.NONE=1]=\"NONE\"}(a||(a={})),function(e){e[e.POINT=0]=\"POINT\",e[e.LINE=1]=\"LINE\",e[e.LINE_CENTER=2]=\"LINE_CENTER\"}(u||(u={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\",e[e.AUTO=2]=\"AUTO\"}(n||(n={})),function(e){e[e.AUTO=0]=\"AUTO\",e[e.LEFT=1]=\"LEFT\",e[e.CENTER=2]=\"CENTER\",e[e.RIGHT=3]=\"RIGHT\"}(m||(m={})),function(e){e[e.CENTER=0]=\"CENTER\",e[e.LEFT=1]=\"LEFT\",e[e.RIGHT=2]=\"RIGHT\",e[e.TOP=3]=\"TOP\",e[e.BOTTOM=4]=\"BOTTOM\",e[e.TOP_LEFT=5]=\"TOP_LEFT\",e[e.TOP_RIGHT=6]=\"TOP_RIGHT\",e[e.BOTTOM_LEFT=7]=\"BOTTOM_LEFT\",e[e.BOTTOM_RIGHT=8]=\"BOTTOM_RIGHT\"}(l||(l={})),function(e){e[e.NONE=0]=\"NONE\",e[e.UPPERCASE=1]=\"UPPERCASE\",e[e.LOWERCASE=2]=\"LOWERCASE\"}(o||(o={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\"}(i||(i={})),function(e){e[e.HORIZONTAL=0]=\"HORIZONTAL\",e[e.VERTICAL=1]=\"VERTICAL\"}(r||(r={}));class t{}t.backgroundLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE}},t.fillLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE}},t.lineLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE},\"line-cap\":{type:\"enum\",values:[\"butt\",\"round\",\"square\"],default:f.BUTT},\"line-join\":{type:\"enum\",values:[\"bevel\",\"round\",\"miter\"],default:y.MITER},\"line-miter-limit\":{type:\"number\",default:2},\"line-round-limit\":{type:\"number\",default:1.05}},t.symbolLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE},\"symbol-avoid-edges\":{type:\"boolean\",default:!1},\"symbol-placement\":{type:\"enum\",values:[\"point\",\"line\",\"line-center\"],default:u.POINT},\"symbol-sort-key\":{type:\"number\",default:-1},\"symbol-spacing\":{type:\"number\",minimum:1,default:250},\"icon-allow-overlap\":{type:\"boolean\",default:!1},\"icon-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:l.CENTER},\"icon-ignore-placement\":{type:\"boolean\",default:!1},\"icon-image\":{type:\"string\"},\"icon-keep-upright\":{type:\"boolean\",default:!1},\"icon-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-optional\":{type:\"boolean\",default:!1},\"icon-padding\":{type:\"number\",minimum:0,default:2},\"icon-rotate\":{type:\"number\",default:0},\"icon-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:n.AUTO},\"icon-size\":{type:\"number\",minimum:0,default:1},\"text-allow-overlap\":{type:\"boolean\",default:!1},\"text-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:l.CENTER},\"text-field\":{type:\"string\"},\"text-font\":{type:\"array\",value:\"string\",default:[\"Open Sans Regular\",\"Arial Unicode MS Regular\"]},\"text-ignore-placement\":{type:\"boolean\",default:!1},\"text-justify\":{type:\"enum\",values:[\"auto\",\"left\",\"center\",\"right\"],default:m.CENTER},\"text-keep-upright\":{type:\"boolean\",default:!0},\"text-letter-spacing\":{type:\"number\",default:0},\"text-line-height\":{type:\"number\",default:1.2},\"text-max-angle\":{type:\"number\",minimum:0,default:45},\"text-max-width\":{type:\"number\",minimum:0,default:10},\"text-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-optional\":{type:\"boolean\",default:!1},\"text-padding\":{type:\"number\",minimum:0,default:2},\"text-rotate\":{type:\"number\",default:0},\"text-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:n.AUTO},\"text-size\":{type:\"number\",minimum:0,default:16},\"text-transform\":{type:\"enum\",values:[\"none\",\"uppercase\",\"lowercase\"],default:o.NONE},\"text-writing-mode\":{type:\"array\",value:\"enum\",values:[\"horizontal\",\"vertical\"],default:[r.HORIZONTAL]}},t.circleLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE}},t.backgroundPaintDefinition={\"background-color\":{type:\"color\",default:[0,0,0,1]},\"background-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"background-pattern\":{type:\"string\"}},t.fillPaintDefinition={\"fill-antialias\":{type:\"boolean\",default:!0},\"fill-color\":{type:\"color\",default:[0,0,0,1]},\"fill-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"fill-outline-color\":{type:\"color\",default:[0,0,0,0]},\"fill-pattern\":{type:\"string\"},\"fill-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"fill-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP}},t.linePaintDefinition={\"line-blur\":{type:\"number\",minimum:0,default:0},\"line-color\":{type:\"color\",default:[0,0,0,1]},\"line-dasharray\":{type:\"array\",value:\"number\",default:[]},\"line-gap-width\":{type:\"number\",minimum:0,default:0},\"line-offset\":{type:\"number\",default:0},\"line-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"line-pattern\":{type:\"string\"},\"line-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"line-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP},\"line-width\":{type:\"number\",minimum:0,default:1}},t.symbolPaintDefinition={\"icon-color\":{type:\"color\",default:[0,0,0,1]},\"icon-halo-blur\":{type:\"number\",minimum:0,default:0},\"icon-halo-color\":{type:\"color\",default:[0,0,0,0]},\"icon-halo-width\":{type:\"number\",minimum:0,default:0},\"icon-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"icon-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP},\"text-color\":{type:\"color\",default:[0,0,0,1]},\"text-halo-blur\":{type:\"number\",minimum:0,default:0},\"text-halo-color\":{type:\"color\",default:[0,0,0,0]},\"text-halo-width\":{type:\"number\",minimum:0,default:0},\"text-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"text-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP}},t.rasterPaintDefinition={\"raster-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-hue-rotate\":{type:\"number\",default:0},\"raster-brightness-min\":{type:\"number\",minimum:0,maximum:1,default:0},\"raster-brightness-max\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-saturation\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-contrast\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-fade-duration\":{type:\"number\",minimum:0,default:300}},t.circlePaintDefinition={\"circle-blur\":{type:\"number\",minimum:0,default:0},\"circle-color\":{type:\"color\",default:[0,0,0,1]},\"circle-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-radius\":{type:\"number\",minimum:0,default:5},\"circle-stroke-color\":{type:\"color\",default:[0,0,0,1]},\"circle-stroke-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-stroke-width\":{type:\"number\",minimum:0,default:0},\"circle-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"circle-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP}};export{p as a,t as f,a as i,n as l,l as m,u as n,o,r as p,i as r,m as u};\n","import{aH as l,aI as u,aA as a,aJ as _,G as f}from\"./main-DCIX61zy.js\";const n=()=>f.getLogger(\"esri.views.webgl.VertexArrayObject\");let c=class{constructor(t,e,i,r,s=null){this._context=t,this._locations=e,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Array.from(this._buffers.values()).reduce((t,e)=>t+e.usedMemory,this._indexBuffer!=null?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*l}dispose(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this._indexBuffer=u(this._indexBuffer),this.disposeVAOOnly()):(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&n().warn(\"Leaked WebGL VAO\")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(a.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:t}=this._context,e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e,this._context.instanceCounter.increment(a.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:i}=this;t||n().error(\"Vertex buffer dictionary is empty!\");const r=this._context.gl;this._buffers.forEach((s,h)=>{const o=e.get(h);o?_(this._context,this._locations,s,o):n().error(\"Vertex element descriptor is empty!\")}),i!=null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}};export{c as o};\n","class n{constructor(t,s,i,h,o,e=!1,r=0){this.name=t,this.count=s,this.type=i,this.offset=h,this.stride=o,this.normalized=e,this.divisor=r}}export{n as t};\n","import{aC as A,az as Z,hW as P,cw as N,aQ as w,id as F,qJ as Oe,ie as Q,aR as gt,c8 as ht,gX as Ee,gF as de,gH as ee,ls as ne,qK as xt,nc as _e,qL as yt,o2 as St,dQ as Tt,gf as bt,hZ as ve,qM as Ae,qN as It,Q as j,jS as me,ch as Pe,qO as Ot,qP as Et,qQ as At,qR as Pt,G as pe,ct as Ct,cx as Dt,cy as Rt,qS as B,qT as Ce,bg as De,nk as Lt,gC as Mt,qU as Re,qV as zt,d9 as Le,s as ge,lN as Vt,gV as Nt,g_ as Me,cc as wt,qW as Ft,aK as te}from\"./main-DCIX61zy.js\";import{e as Bt,b as Ut,h as ze,f as R,n as se,s as ce,r as Gt}from\"./LabelMetric-DpMX58iW.js\";import{E as G}from\"./BufferObject-DqJSjWFs.js\";import{o as K}from\"./VertexArrayObject-C4kjI814.js\";import{t as ie}from\"./VertexElementDescriptor-BAy1DPb3.js\";import{e as Yt,a as ue}from\"./ProgramTemplate-B_NcbdFz.js\";import{n as kt}from\"./vec3f32-BS0cezmI.js\";import{e as Ve,n as Ht}from\"./Container-C-rqKhNk.js\";import{r as J,l as Y,n as Ne}from\"./StyleDefinition-CovmM7Ch.js\";import{e as we}from\"./config-nuMERBvb.js\";import{e as Wt}from\"./earcut-XDcq3zAf.js\";let Fe=class{constructor(i,e){this._rctx=i,this._attributes=[{name:\"position\",offset:0,type:A.SHORT,count:2}],this.layout={hash:Bt(this._attributes),attributes:this._attributes,stride:4},this._vertexBuffer=G.createVertex(i,Z.STATIC_DRAW,new Uint16Array(e)),this._vao=new K(i,new Map([[\"a_position\",0]]),new Map([[\"geometry\",[new ie(\"a_position\",2,A.SHORT,0,4)]]]),new Map([[\"geometry\",this._vertexBuffer]])),this._count=e.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(P.TRIANGLE_STRIP,0,this._count)}},k=class{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(i,e){}draw(i,e,t){}drawMany(i,e,t){for(const o of e)o.visible&&this.draw(i,o,t)}};const he={nearest:{defines:[],samplingMode:N.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:N.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:N.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:N.LINEAR_MIPMAP_LINEAR,mips:!0}},Zt=(i,e,t)=>{if(t.samplingMode===\"dynamic\"){const{state:o}=i,a=e.resolution/e.pixelRatio/o.resolution,r=Math.round(i.pixelRatio)!==i.pixelRatio,l=a>1.05||a<.95;return o.rotation||l||r||e.isSourceScaled||e.rotation?he.bilinear:he.nearest}return he[t.samplingMode]};let Kt=class extends k{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:i}){i.setBlendingEnabled(!0),i.setColorMask(!0,!0,!0,!0),i.setStencilWriteMask(0),i.setStencilTestEnabled(!0)}draw(i,e){const{context:t,renderingOptions:o,painter:a,requestRender:r,allowDelayedRender:l}=i;if(!e.source||!e.isReady)return;const n=Zt(i,e,o),s=a.materialManager.getProgram(this._desc,n.defines);if(l&&r!=null&&!s.compiled)return void r();i.timeline.begin(this.name),e.blendFunction===\"additive\"?t.setBlendFunctionSeparate(w.ONE,w.ONE,w.ONE,w.ONE):t.setBlendFunctionSeparate(w.ONE,w.ONE_MINUS_SRC_ALPHA,w.ONE,w.ONE_MINUS_SRC_ALPHA),t.setStencilFunction(F.EQUAL,e.stencilRef,255),this._quad||(this._quad=new Fe(t,[0,0,1,0,0,1,1,1]));const{coordScale:u,computedOpacity:c,transforms:f}=e;e.setSamplingProfile(n),e.bind(i.context,Oe),t.useProgram(s),s.setUniformMatrix3fv(\"u_dvsMat3\",f.displayViewScreenMat3),s.setUniform1i(\"u_texture\",Oe),s.setUniform2fv(\"u_coordScale\",u),s.setUniform1f(\"u_opacity\",c),this._quad.draw(),i.timeline.end(this.name)}};function Be(){return new Float32Array(4)}function qt(i){const e=new Float32Array(4);return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e}function H(i,e,t,o){const a=new Float32Array(4);return a[0]=i,a[1]=e,a[2]=t,a[3]=o,a}function jt(i,e){return new Float32Array(i,e,4)}function Ue(){return Be()}function Ge(){return H(1,1,1,1)}function Ye(){return H(1,0,0,0)}function ke(){return H(0,1,0,0)}function He(){return H(0,0,1,0)}function We(){return H(0,0,0,1)}const Xt=Ue(),$t=Ge(),Qt=Ye(),Jt=ke(),ei=He(),ti=We();Object.freeze(Object.defineProperty({__proto__:null,ONES:$t,UNIT_W:ti,UNIT_X:Qt,UNIT_Y:Jt,UNIT_Z:ei,ZEROS:Xt,clone:qt,create:Be,createView:jt,fromValues:H,ones:Ge,unitW:We,unitX:Ye,unitY:ke,unitZ:He,zeros:Ue},Symbol.toStringTag,{value:\"Module\"}));const ii={background:{\"background.frag\":`uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}`,\"background.vert\":`attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}`},bitBlit:{\"bitBlit.frag\":`uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color * u_opacity;\n}`,\"bitBlit.vert\":`attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos , 0.0, 1.0);\nv_uv = a_tex;\n}`},debug:{overlay:{\"overlay.frag\":`precision mediump float;\nvarying vec4 v_color;\nvoid main(void) {\ngl_FragColor = v_color;\n}`,\"overlay.vert\":`attribute vec3 a_PositionAndFlags;\nuniform mat3 u_dvsMat3;\nuniform vec4 u_colors[4];\nuniform float u_opacities[4];\nvarying vec4 v_color;\nvoid main(void) {\nvec2 position = a_PositionAndFlags.xy;\nfloat flags = a_PositionAndFlags.z;\nint colorIndex = int(mod(flags, 4.0));\nvec4 color;\nfor (int i = 0; i < 4; i++) {\ncolor = u_colors[i];\nif (i == colorIndex) {\nbreak;\n}\n}\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\nfloat opacity;\nfor (int i = 0; i < 4; i++) {\nopacity = u_opacities[i];\nif (i == opacityIndex) {\nbreak;\n}\n}\nv_color = color * opacity;\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\n}`}},dot:{dot:{\"dot.frag\":`precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}`,\"dot.vert\":`precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}`}},filtering:{\"bicubic.glsl\":`vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}`,\"bilinear.glsl\":`vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}`,\"epx.glsl\":`vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}`},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":`precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}`,\"heatmapResolve.vert\":`precision highp float;\nattribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\n}`}},highlight:{\"blur.frag\":`varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}`,\"highlight.frag\":`varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}`,\"textured.vert\":`attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}`},materials:{\"attributeData.glsl\":`uniform highp sampler2D filterFlags;\nuniform highp sampler2D animation;\nuniform highp sampler2D gpgpu;\nuniform highp sampler2D visualVariableData;\nuniform highp sampler2D dataDriven0;\nuniform highp sampler2D dataDriven1;\nuniform highp sampler2D dataDriven2;\nuniform float size;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(size));\n}\nhighp vec4 getFilterData(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(filterFlags, coords);\n}\nhighp vec4 getAnimation(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(animation, coords);\n}\nhighp vec4 getVisualVariableData(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(visualVariableData, coords);\n}\nhighp vec4 getDataDriven0(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(dataDriven0, coords);\n}\nhighp vec4 getDataDriven1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(dataDriven1, coords);\n}\nhighp vec4 getGPGPU(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(gpgpu, coords);\n}\nhighp vec4 getDataDriven2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(dataDriven2, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}`,\"barycentric.glsl\":`float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}`,\"constants.glsl\":`const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\nconst int BITSET_LINE_SCALE_DASH = 2;`,fill:{\"common.glsl\":`#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif`,\"fill.frag\":`precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}`,\"fill.vert\":`#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\nuniform vec2 u_maxIntNumOfCrossing;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\na_width *= INV_SCALE_COMPRESSION_FACTOR;\n}\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\na_height *= INV_SCALE_COMPRESSION_FACTOR;\n}\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 patternSize = vec2(a_width, a_height);\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\ntileOffset = mod(tileOffset, patternSize);\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\n#ifdef VV_COLOR\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\n#else\nv_sampleAlphaOnly = 0.0;\n#endif\n}\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}`,\"hittest.glsl\":`#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif`},hittest:{\"common.glsl\":`#ifdef HITTEST\nuniform float hittestDist;\nuniform highp vec2 hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif`},icon:{\"common.glsl\":`#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\n#ifdef HITTEST\nlowp vec4 fillPixelColor = vec4(1.0);\n#else\nlowp vec4 fillPixelColor = v_color;\n#endif\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif`,heatmapAccumulate:{\"common.glsl\":`varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;`,\"heatmapAccumulate.frag\":`precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}`,\"heatmapAccumulate.vert\":`precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}`},\"hittest.glsl\":`#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif`,\"icon.frag\":`precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}`,\"icon.vert\":`precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}`},label:{\"common.glsl\":`uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;`,\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":`precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_isBackground  = a_glyphData.w;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor = (isBackground + isText) * a_color;\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}`},line:{\"common.glsl\":`varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif`,\"hittest.glsl\":`#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif`,\"line.frag\":`precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif`,\"line.vert\":`precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}`},pie:{\"pie.common.glsl\":`uniform float outlineWidth;\nuniform mediump float sectorThreshold;\nvarying vec3  v_id;\nvarying vec3  v_pos;\nvarying vec2  v_offset;\nvarying vec4  v_color;\nvarying float v_size;\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nvarying vec2  v_filteredSectorToColorId[numberOfFields];\nvarying vec2  v_texCoords;\nvarying float v_outlineWidth;\nvarying float v_opacity;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};`,\"pie.frag\":`precision highp float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/pie/pie.common.glsl>\nuniform lowp vec4 colors[numberOfFields];\nuniform lowp vec4 defaultColor;\nuniform lowp vec4 othersColor;\nuniform lowp vec4 outlineColor;\nuniform float donutRatio;\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[numberOfFields]) {\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn colors[colorIndex];\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nfloat distanceSize = length(v_offset) * v_size;\nfloat donutSize = donutRatio * v_size;\nfloat alpha = step(donutSize, distanceSize) * (1.0 - step(v_size, distanceSize));\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || sectorThreshold > 0.0) ? othersColor : defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < numberOfFields; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef highlight\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}`,\"pie.vert\":`#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/barycentric.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/vv.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/pie/pie.common.glsl>\n#include <materials/hittest/common.glsl>\nattribute float a_bitSet;\nattribute vec2  a_offset;\nattribute vec2  a_texCoords;\nattribute vec2  a_size;\nattribute float a_referenceSize;\nattribute vec2  a_zoomRange;\nint filterValue(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[numberOfFields]) {\nif (sectorAngle > sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[numberOfFields],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[numberOfFields]) {\nfor (int index = 0; index < numberOfFields; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilterValue(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float a_referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = getSize(a_referenceSize, currentScale) / a_referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_size;\nvec2  a_offset = a_offset / 16.0;\nfloat outlineSize = outlineWidth;\nfloat a_bitSet = a_bitSet;\nfloat a_referenceSize = a_referenceSize;\nvec2 a_texCoords = a_texCoords / 4.0;\nvec2 markerSize = getMarkerSize(a_offset, a_size, outlineSize, a_referenceSize, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos / 10.0, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = displayViewScreenMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(markerSize.x, markerSize.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData3 = getDataDriven0(a_id);\nattributeData[0] = filterNaNValues(attributeData3.x);\nattributeData[1] = filterNaNValues(attributeData3.y);\nattributeData[2] = filterNaNValues(attributeData3.z);\nattributeData[3] = filterNaNValues(attributeData3.w);\n#if (numberOfFields > 4)\nvec4 attributeData4 = getDataDriven1(a_id);\nattributeData[4] = filterNaNValues(attributeData4.x);\nattributeData[5] = filterNaNValues(attributeData4.y);\nattributeData[6] = filterNaNValues(attributeData4.z);\nattributeData[7] = filterNaNValues(attributeData4.w);\n#endif\n#if (numberOfFields > 8)\nvec4 attributeData5 = getDataDriven2(a_id);\nattributeData[8] = filterNaNValues(attributeData5.x);\nattributeData[9] = filterNaNValues(attributeData5.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < numberOfFields; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[numberOfFields];\nfor (int i = 0; i < numberOfFields; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[numberOfFields];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\nv_filteredSectorToColorId = filteredSectorToColorId;\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, viewMat3 * tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}`},shared:{line:{\"common.glsl\":`#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};`,\"line.frag\":`uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}`,\"line.vert\":`float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}`}},\"symbologyTypeUtils.glsl\":`#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif`,text:{\"common.glsl\":`uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;`,\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":`precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}`,\"text.vert\":`precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_isBackground  = a_aux.y;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}`},\"utils.glsl\":`float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nconst int maxHighlightReasons = 6;\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + maxHighlightReasons);\n}\nfloat getHighlightBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}`,\"vcommon.glsl\":`#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 displayViewScreenMat3;\nuniform highp mat3 displayViewMat3;\nuniform highp mat3 displayMat3;\nuniform highp mat3 tileMat3;\nuniform highp mat3 viewMat3;\nuniform highp float pixelRatio;\nuniform mediump float zoomFactor;\nuniform mediump float antialiasing;\nuniform mediump float currentScale;\nuniform mediump float currentZoom;\nuniform mediump float metersPerSRUnit;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\ntarget.rgba = getVisualVariableData(a_id);\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size, in float currentScale) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE], currentScale);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getFilterData(a_id).x * 255.0);\n#else\nreturn getFilterData(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAnimation(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getFilterData(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * viewMat3 * tileMat3 + (1.0 - isMapAligned) * tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * displayViewMat3 + (1.0 - isMapAligned) * displayMat3;\n}\nfloat checkHighlightBit(float filterFlags, int index) {\nreturn getHighlightBit(filterFlags, index);\n}\nfloat checkHighlight(float filterFlags) {\nfloat result = checkHighlightBit(filterFlags, 0);\nfor (int i = 1; i < maxHighlightReasons; i++) {\nresult = result + checkHighlightBit(filterFlags, i);\n}\nreturn step(0.1, result);\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef inside\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(outside)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(highlight)\n#if !defined(highlight_all)\npos.z += 2.0 * (1.0 - checkHighlight(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, currentZoom) + (1.0 - step(minMaxZoom.x, currentZoom)));\nreturn pos;\n}`,\"vv.glsl\":`#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float colorValues[8];\nuniform vec4 colors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 minMaxValueAndSize;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float values[8];\nuniform float sizes[8];\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float values[8];\nuniform float sizes[8];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float unitMeterRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float opacityValues[8];\nuniform float opacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float rotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - minMaxValueAndSize.x) / (minMaxValueAndSize.y - minMaxValueAndSize.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn minMaxValueAndSize.z + interpolationRatio * (minMaxValueAndSize.w - minMaxValueAndSize.z);\n}\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nfloat getVVScaleStopsSize(float currentScale) {\nfloat outSize;\nif (currentScale <= values[0]) {\noutSize = sizes[0];\n} else {\nif (currentScale >= values[7]) {\noutSize = sizes[7];\n} else {\nint index;\nindex = -1;\nfor (int i = 0; i < 8; i++) {\nif (values[i] > currentScale) {\nindex = i;\nbreak;\n}\n}\nint prevIndex = index - 1;\nfloat a = currentScale - values[prevIndex];\nfloat b = values[index] - values[prevIndex];\noutSize = mix(sizes[prevIndex], sizes[index], a / b);\n}\n}\nreturn outSize;\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 8;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= values[0]) {\nreturn sizes[0];\n}\nif (sizeValue >= values[VV_SIZE_N - 1]) {\nreturn sizes[VV_SIZE_N - 1];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (values[i] >= sizeValue) {\nfloat f = (sizeValue - values[i-1]) / (values[i] - values[i-1]);\nreturn mix(sizes[i-1], sizes[i], f);\n}\n}\nreturn sizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn sizeValue * (metersPerSRUnit / unitMeterRatio);\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= opacityValues[0]) {\nreturn opacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (opacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - opacityValues[i-1]) / (opacityValues[i] - opacityValues[i-1]);\nreturn mix(opacities[i-1], opacities[i], f);\n}\n}\nreturn opacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (rotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (rotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= colorValues[0]) {\nreturn colors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (colorValues[i] >= colorValue) {\nfloat f = (colorValue - colorValues[i-1]) / (colorValues[i] - colorValues[i-1]);\nreturn mix(colors[i-1], colors[i], f);\n}\n}\nreturn colors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize, in float currentScale)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nfloat outSize = getVVScaleStopsSize(currentScale);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}`},\"post-processing\":{blit:{\"blit.frag\":`precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}`},bloom:{composite:{\"composite.frag\":`precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\nvec4 color = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\ngl_FragColor = clamp(color, 0.0, 1.0);\n}`},gaussianBlur:{\"gaussianBlur.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}`},luminosityHighPass:{\"luminosityHighPass.frag\":`precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}`}},blur:{gaussianBlur:{\"gaussianBlur.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}`},\"radial-blur\":{\"radial-blur.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}`}},dra:{\"dra.frag\":`precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}`,\"min-max\":{\"min-max.frag\":`#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}`}},\"drop-shadow\":{composite:{\"composite.frag\":`precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}`}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}`},sobel:{\"sobel.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}`}},\"edge-enhance\":{\"edge-enhance.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}`},filterEffect:{\"filterEffect.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}`},pp:{\"pp.vert\":`precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}`}},raster:{bitmap:{\"bitmap.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\n}`,\"bitmap.vert\":`precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}`},common:{\"common.glsl\":`uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}`,\"common.vert\":`precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}`,\"contrastBrightness.glsl\":`uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nvec3 rgb = clamp(v.rgb / 255.0, 0.0, 1.0);\nreturn vec4(rgb, currentPixel.a);\n}`,\"getSurfaceValues.glsl\":`#include <raster/common/mirror.glsl>\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\nvec2 onePixel = 1.0 / srcImageSize;\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\nvalues[0] = va.r;\nvalues[1] = vb.r;\nvalues[2] = vc.r;\nvalues[3] = vd.r;\nvalues[4] = ve.r;\nvalues[5] = vf.r;\nvalues[6] = vg.r;\nvalues[7] = vh.r;\nvalues[8] = vi.r;\nvalues[9] = alpha;\n}`,\"inverse.glsl\":`float invertValue(float value) {\nfloat s = sign(value);\nreturn (s * s) / (value + abs(s) - 1.0);\n}`,\"mirror.glsl\":`vec2 mirror(vec2 pos) {\nvec2 pos1 = abs(pos);\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\n}`,\"projection.glsl\":`uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}`},flow:{\"getFadeOpacity.glsl\":`uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}`,\"getFragmentColor.glsl\":`vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}`,imagery:{\"imagery.frag\":`precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}`,\"imagery.vert\":`attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}`},particles:{\"particles.frag\":`precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}`,\"particles.vert\":`attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}`},streamlines:{\"streamlines.frag\":`precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}`,\"streamlines.vert\":`attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}`},\"vv.glsl\":`#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}`},hillshade:{\"hillshade.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\nuniform float u_scaling;\n#include <raster/lut/colorize.glsl>\n#include <raster/common/getSurfaceValues.glsl>\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv) * u_scaling, 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nfloat pv[10];\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\n#ifdef APPLY_COLORMAP\nvec4 result = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\nhillshade *= u_scaling;\nvec4 result = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n#ifdef ROUND_OUTPUT\nresult = vec4(floor(result.xyz + 0.5), result.a);\n#endif\ngl_FragColor = result;\n}`},lut:{\"colorize.glsl\":`uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}\nvec4 colorizeNoClamp(vec4 currentPixel, float scaleFactor) {\nfloat value = currentPixel.r * scaleFactor - u_colormapOffset;\nvec4 result = colorize(currentPixel, scaleFactor);\nreturn result * step(0.0, value) * step(value, u_colormapMaxIndex);\n}`,\"lut.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorizeNoClamp(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}`},magdir:{\"magdir.frag\":`precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}`,\"magdir.vert\":`precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}`},reproject:{\"reproject.frag\":`precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}`,\"reproject.vert\":`precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}`},rfx:{aspect:{\"aspect.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nconst float pi = 3.14159265359;\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\nalpha *= sign(abs(dzx) + abs(dzy));\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\nfloat aspect = aspect_rad * 180.0 / pi;\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\n}`},bandarithmetic:{\"bandarithmetic.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nuniform float u_adjustments[3];\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index;\n#ifdef NDXI\nindex = (nir - red) * invertValue(nir + red);\n#elif defined(SR)\nindex = nir * invertValue(red);\n#elif defined(CI)\nindex = nir * invertValue(red) - 1.0;\n#elif defined(SAVI)\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\n#elif defined(TSAVI)\nfloat s = u_adjustments[0];\nfloat a = u_adjustments[1];\nfloat x = u_adjustments[2];\nfloat y = -a * s + x * (1.0 + s * s);\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\n#elif defined(MSAVI)\nfloat nir2 = 2.0 * nir + 1.0;\nindex = 0.5 * (nir2 - sqrt(nir2 * nir2 - 8.0 * (nir - red)));\n#elif defined(GEMI)\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\n#elif defined(PVI)\nfloat a = u_adjustments[0];\nfloat b = u_adjustments[1];\nfloat y = sqrt(1.0 + a * a);\nindex = (nir - a * red - b) * invertValue(y);\n#elif defined(VARI)\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\n#elif defined(MTVI)\nfloat green = pv2.b;\nfloat v = sqrt(pow((2.0 * nir + 1.0), 2.0) - (6.0 * nir - 5.0 * sqrt(red)) - 0.5);\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * invertValue(v);\n#elif defined(RTVICORE)\nfloat green = pv2.b;\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\n#elif defined(EVI)\nfloat blue = pv2.b;\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\nindex =  (2.5 * (nir - red)) * invertValue(denom);\n#elif defined(WNDWI)\nfloat g = pv2.r;\nfloat n = pv2.g;\nfloat s = pv2.b;\nfloat a = u_adjustments[0];\nfloat denom = g + a * n + (1.0 - a) * s;\nindex = (g - a * n - (1.0 - a) * s) * invertValue(denom);\n#elif defined(BAI)\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\n#else\ngl_FragColor = pv;\nreturn;\n#endif\n#ifdef ROUND_OUTPUT\nindex = floor(index + 0.5);\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}`},colormap2rgb:{\"colormap2rgb.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec4 result = colorizeNoClamp(vec4(pv.r, pv.r, pv.r, 1.0), 1.0);\ngl_FragColor = vec4(result.xyz * 255.0, 1.0) * result.a * pv.a;\n}`},compositeband:{\"compositeband.frag\":`precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\n#ifdef TWO_CONSTANT\nuniform float u_image2Const;\n#endif\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\nfloat alpha = pv0.a;\n#ifdef TWO_CONSTANT\nfloat b = u_image1Const;\nfloat c = u_image2Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#elif defined(ONE_CONSTANT)\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\nfloat c = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\nalpha *= pv1.a;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nvec4 pv2 = texture2D(u_image2, v_texcoord);\nfloat b = pv1.r;\nfloat c = pv2.r;\nalpha = alpha * pv1.a * pv2.a;\n#endif\ngl_FragColor = vec4(a, b, c, alpha);\n}`},computechange:{\"computechange.frag\":`precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nuniform vec2 u_domainRange;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\n#ifdef ONE_CONSTANT\nfloat b = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, 0);\na = abc.s;\nb = abc.t;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\n#endif\nfloat result = a;\nfloat alpha = pv0.a;\n#ifdef DIFFERENCE\nresult = a - b;\n#elif defined(RELATIVE)\nresult = (a - b) * invertValue(max(abs(a), abs(b)));\n#endif\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\nresult = isInvalid ? 0.0 : result;\nalpha *= float(!isInvalid);\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}`},contrast:{\"contrast.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#include <raster/common/contrastBrightness.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec4 result = adjustContrastBrightness(pv, false);\ngl_FragColor = vec4(floor(result.rgb * 255.0 + 0.5), result.a);\n}`},convolution:{\"convolution.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_srcImageSize;\n#define KERNEL_SIZE_ROWS ROWS\n#define KERNEL_SIZE_COLS COLS\nuniform vec2 u_clampRange;\nuniform float u_kernel[25];\n#include <raster/common/mirror.glsl>\nvoid main() {\nvec3 rgb = vec3(0.0, 0.0, 0.0);\nvec2 resolution = 1.0 / u_srcImageSize;\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\nfloat alpha = 1.0;\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\nfloat pos_row = rowOffset + float(row);\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\nvec4 pv = texture2D(u_image, mirror(pos));\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\nalpha *= pv.a;\n}\n}\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(rgb * alpha, alpha);\n}`},curvature:{\"curvature.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform float u_zlFactor;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\nfloat curvature = 0.0;\n#ifdef STANDARD\ncurvature = -u_zlFactor * (d + e);\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n#else\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\nfloat g = (-pv[3] + pv[5]) / 2.0;\nfloat h = (pv[1] - pv[7]) / 2.0;\nfloat g2 = g * g;\nfloat h2 = h * h;\n#ifdef PROFILE\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\n#else\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\n#endif\n#endif\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n}`},extractband:{\"extractband.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\ngl_FragColor = vec4(pv2, pv.a);\n}`},focalstatistics:{\"focalstatistics.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_srcImageSize;\n#define KERNEL_SIZE_ROWS ROWS\n#define KERNEL_SIZE_COLS COLS\nuniform vec2 u_clampRange;\n#include <raster/common/mirror.glsl>\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec2 resolution = 1.0 / u_srcImageSize;\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\nfloat count = 0.0;\n#ifdef STDDEV\nvec3 sum = vec3(0.0, 0.0, 0.0);\nvec3 sum2 = vec3(0.0, 0.0, 0.0);\n#endif\nvec4 currentPixel = texture2D(u_image, v_texcoord);\nvec3 rgb = currentPixel.rgb;\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\nfloat pos_row = rowOffset + float(row);\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\nvec4 pv = texture2D(u_image, mirror(pos));\ncount += pv.a;\n#ifdef MIN\nrgb = min(rgb, pv.rgb);\n#elif defined(MAX)\nrgb = max(rgb, pv.rgb);\n#elif defined(MEAN)\nrgb += pv.rgb;\n#elif defined(STDDEV)\nsum += pv.rgb;\nsum2 += (pv.rgb * pv.rgb);\n#endif\n}\n}\n#ifdef MEAN\nrgb *= invertValue(count);\n#elif defined(STDDEV)\nrgb = sqrt((sum2 - sum * sum * invertValue(count)) * invertValue(count));\n#endif\nfloat alpha = step(0.9999, count);\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\n#ifdef FILL\nrgb = (1.0 - currentPixel.a) * rgb + currentPixel.a * currentPixel.rgb;\n#endif\ngl_FragColor = vec4(rgb * alpha, alpha);\n}`},grayscale:{\"grayscale.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec3 u_weights;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat value = dot(u_weights, pv.rgb);\ngl_FragColor = vec4(value, value, value, pv.a);\n}`},local:{\"local.frag\":`precision highp float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\n#ifdef TWO_CONSTANT\nuniform float u_image2Const;\n#endif\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nuniform vec2 u_domainRange;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\n#ifdef TWO_IMAGES\n#ifdef ONE_CONSTANT\nfloat b = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, 0);\na = abc.s;\nb = abc.t;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\n#endif\n#elif defined(CONDITIONAL)\n#ifdef TWO_CONSTANT\nfloat b = u_image1Const;\nfloat c = u_image2Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#elif defined(ONE_CONSTANT)\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\nfloat c = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nvec4 pv2 = texture2D(u_image2, v_texcoord);\nfloat b = pv1.r;\nfloat c = pv2.r;\n#endif\n#endif\nfloat result = a;\nfloat alpha = pv0.a;\n#ifdef PLUS\nresult = a + b;\n#elif defined(MINUS)\nresult = a - b;\n#elif defined(TIMES)\nresult = a * b;\n#elif defined(DIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOATDIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOORDIVIDE)\nresult = floor(a * invertValue(b));\nalpha *= float(abs(sign(b)));\n#elif defined(SQUARE)\nresult = a * a;\n#elif defined(SQRT)\nresult = sqrt(a);\n#elif defined(POWER)\nresult = pow(a, b);\n#elif defined(LN)\nresult = a <= 0.0 ? 0.0: log(a);\nalpha *= float(a > 0.0);\n#elif defined(LOG_1_0)\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\nalpha *= float(a > 0.0);\n#elif defined(LOG_2)\nresult = a <= 0.0 ? 0.0: log2(a);\nalpha *= float(a > 0.0);\n#elif defined(EXP)\nresult = exp(a);\n#elif defined(EXP_1_0)\nresult = pow(10.0, a);\n#elif defined(EXP_2)\nresult = pow(2.0, a);\n#elif defined(ROUNDDOWN)\nresult = floor(a);\n#elif defined(ROUNDUP)\nresult = ceil(a);\n#elif defined(INT)\nresult = float(sign(a)) * floor(abs(a));\n#elif defined(MOD)\nresult = mod(a, b);\n#elif defined(NEGATE)\nresult = -a;\n#elif defined(ABS)\nresult = abs(a);\n#elif defined(ACOS)\nresult = abs(a) > 1.0 ? 0.0: acos(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ACOSH)\nresult = acosh(a);\n#elif defined(ASIN)\nresult = abs(a) > 1.0 ? 0.0: asin(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ASINH)\nresult = asinh(a);\n#elif defined(ATAN)\nresult = atan(a);\n#elif defined(ATANH)\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\nalpha *= step(abs(a), 1.0);\n#elif defined(ATAN_2)\nresult = atan(a, b);\n#elif defined(COS)\nresult = cos(a);\n#elif defined(COSH)\nresult = cosh(a);\n#elif defined(SIN)\nresult = sin(a);\n#elif defined(SINH)\nresult = sinh(a);\n#elif defined(TAN)\nresult = tan(a);\n#elif defined(TANH)\nresult = tanh(a);\n#elif defined(BITWISEAND)\nresult = float(int(a) & int(b));\n#elif defined(BITWISEOR)\nresult = float(int(a) | int(b));\n#elif defined(BITWISELEFTSHIFT)\nresult = float(int(a) << int(b));\n#elif defined(BITWISERIGHTSHIFT)\nresult = float(int(a) >> int(b));\n#elif defined(BITWISENOT)\nresult = float(~(int(a)));\n#elif defined(BITWISEXOR)\nresult = float(int(a) ^ int(b));\n#elif defined(BOOLEANAND)\nresult = float((a != 0.0) && (b != 0.0));\n#elif defined(BOOLEANNOT)\nresult = float(a == 0.0);\n#elif defined(BOOLEANOR)\nresult = float((a != 0.0) || (b != 0.0));\n#elif defined(BOOLEANXOR)\nresult = float((a != 0.0) ^^ (b != 0.0));\n#elif defined(GREATERTHAN)\nresult = float(a > b);\n#elif defined(GREATERTHANEQUAL)\nresult = float(a >= b);\n#elif defined(LESSTHAN)\nresult = float(a < b);\n#elif defined(LESSTHANEQUAL)\nresult = float(a <= b);\n#elif defined(EQUALTO)\nresult = float(a == b);\n#elif defined(NOTEQUAL)\nresult = float(a != b);\n#elif defined(ISNULL)\nresult = float(alpha == 0.0);\nalpha = 1.0;\n#elif defined(SETNULL)\nfloat maskValue = float(a == 0.0);\nresult = maskValue * b;\nalpha *= maskValue;\n#elif defined(CONDITIONAL)\nfloat weight = float(abs(sign(a)));\nresult = weight * b + (1.0 - weight) * c;\n#endif\nfloat rangeFactor = step(u_domainRange.s, result) * step(result, u_domainRange.t);\nresult *= rangeFactor;\nalpha *= rangeFactor;\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}`},mask:{\"mask.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_INCLUDED_RANGES 6\n#define LEN_NODATA_VALUES 6\nuniform highp float u_includedRanges[6];\nuniform highp float u_noDataValues[6];\nfloat maskFactor(float bandValue, float fromValue, float to) {\nfloat factor = 1.0;\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\nfactor *= float(u_noDataValues[i] != bandValue);\n}\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\nreturn factor;\n}\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\n#ifdef MULTI_BAND\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\nfloat maskFactor = redFactor * greenFactor * blueFactor;\ngl_FragColor = pv * maskFactor;\n#else\ngl_FragColor = pv * redFactor;\n#endif\n}`},ndvi:{\"ndvi.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index = (nir - red) * invertValue(nir + red);\n#ifdef SCALED\nindex = floor((index + 1.0) * 100.0 + 0.5);\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}`},remap:{\"remap.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_REMAP_RANGES 18\n#define LEN_NODATA_RANGES 12\nuniform highp float u_rangeMaps[18];\nuniform highp float u_noDataRanges[12];\nuniform highp float u_unmatchMask;\nuniform vec2 u_clampRange;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat factor = 1.0;\nfloat bandValue = pv.r;\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\nfactor *= inside;\n}\nfloat mapValue = 0.0;\nfloat includeMask = 0.0;\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\n}\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\n}`},slope:{\"slope.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform float u_zFactor;\nuniform vec2 u_srcImageSize;\nuniform float u_pixelSizePower;\nuniform float u_pixelSizeFactor;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\n#ifdef PERCENT_RISE\nfloat result = rise2run * 100.0;\n#else\nfloat result = atan(rise2run) * 57.2957795;\n#endif\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}`},stretch:{\"stretch.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying highp vec2 v_texcoord;\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\nval = clamp(val, minCutOff, maxCutOff);\nfloat stretchedVal;\n#ifdef USE_GAMMA\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\n#else\nstretchedVal = minOutput + (val - minCutOff) * factor;\n#endif\n#ifdef ROUND_OUTPUT\nstretchedVal = floor(stretchedVal + 0.5);\n#endif\nreturn stretchedVal;\n}\nvoid main() {\nvec4 currentPixel = texture2D(u_image, v_texcoord);\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\n#ifdef MULTI_BAND\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\n#else\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\n#endif\n}`},vs:{\"vs.vert\":`precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}`}},scalar:{\"scalar.frag\":`precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}`,\"scalar.vert\":`precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}`},stretch:{\"stretch.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\n#ifdef ROUND_OUTPUT\nstretchedVal = floor(stretchedVal + 0.5);\n#endif\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}`}},stencil:{\"stencil.frag\":`void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}`,\"stencil.vert\":`attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}`},test:{\"TestShader.common.glsl\":`#ifndef RETURN_RED\nvarying    vec4      v_color;\n#endif\nvarying    vec2      v_offset;`,\"TestShader.frag\":`precision highp float;\n#include <test/TestShader.common.glsl>\nvoid main() {\nif (v_offset.x > -.5 && v_offset.y > -.5 && v_offset.x < .5 && v_offset.y < .5) {\ndiscard;\n}\n#ifdef RETURN_RED\ngl_FragColor = vec4(1., 0., 0., 1.);\n#else\ngl_FragColor = v_color;\n#endif\n}`,\"TestShader.vert\":`const float POS_PRECISION_FACTOR = 10.;\nconst float OFFSET_PRECISION_FACTOR = 10.;\nconst float SIZE_PRECISION_FACTOR = 10.;\nattribute  vec2      a_pos_packed;\nattribute  vec2      a_offset_packed;\nattribute  float     a_size_packed;\n#ifdef DATA_DRIVEN_COLOR\nconst float u_dataDrivenColor_validValues[4] = float[4](0., 0., 1., 0.);\nuniform    vec4      u_dataDrivenColor_colorFallback;\nuniform    vec4      u_dataDrivenColor_color;\n#endif\nuniform    float     u_view_zoomLevel;\n#include <test/TestShader.common.glsl>\n#ifdef DATA_DRIVEN_COLOR\nvec4 getColor(float value) {\nint index = -1;\nfor (int i = 0; i < 4; i++) {\nif (u_dataDrivenColor_validValues[i] == value) {\nindex = i;\nbreak;\n}\n}\nif (index == -1) {\nreturn u_dataDrivenColor_colorFallback;\n}\nreturn u_dataDrivenColor_color;\n}\n#endif\nvoid main() {\nvec2  a_pos = a_pos_packed / POS_PRECISION_FACTOR;\nvec2  a_offset = a_offset_packed / OFFSET_PRECISION_FACTOR;\nfloat a_size = a_size_packed / SIZE_PRECISION_FACTOR;\nvec4 color = vec4(1., 0., 0., 1.);\n#ifdef DATA_DRIVEN_COLOR\ncolor = getColor(1.);\n#endif\nvec2 offsetScaled = a_offset * a_size;\nvec4 pos = vec4(a_pos.xy + offsetScaled, 0., 1.);\ngl_Position = pos;\n#ifndef RETURN_RED\nv_color = color;\n#endif\nv_offset = a_offset;\n}`},tileInfo:{\"tileInfo.frag\":`uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ncolor.rgb *= color.a;\ngl_FragColor = color;\n}`,\"tileInfo.vert\":`attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}`},util:{\"atan2.glsl\":`float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}`,\"encoding.glsl\":`const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}`}};function oi(i){return function(e){let t=i;return e.split(\"/\").forEach(o=>{t&&(t=t[o])}),t}}const ai=new Yt(oi(ii));function oe(i){return ai.resolveIncludes(i)}const ae={shaders:{vertexShader:oe(\"background/background.vert\"),fragmentShader:oe(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])},ri=()=>Ut(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:A.SHORT}]});let li=class extends k{constructor(){super(...arguments),this._color=H(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:i}){i.setStencilTestEnabled(!0),i.setBlendingEnabled(!1),i.setFaceCullingEnabled(!1),i.setColorMask(!1,!1,!1,!1),i.setStencilOp(Q.KEEP,Q.KEEP,Q.REPLACE),i.setStencilWriteMask(255),i.setStencilFunction(F.ALWAYS,0,255)}draw(i,e){const{context:t,state:o,requestRender:a,allowDelayedRender:r}=i,l=ri(),n=e.getVAO(t,o,l.attributes,l.bufferLayouts);n.indexBuffer!=null&&(this._program||(this._program=ue(t,ae)),!r||a==null||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(n),t.drawElements(P.TRIANGLES,n.indexBuffer.size,A.UNSIGNED_INT,0),t.bindVAO()):a())}};const xe=new Map([[\"geometry\",[new ie(\"a_pos\",2,A.BYTE,0,2)]]]),ni=new Map([[\"geometry\",[new ie(\"a_pos\",2,A.BYTE,0,4),new ie(\"a_tex\",2,A.BYTE,2,4)]]]),si=new Map([[\"geometry\",[new ie(\"a_pos\",2,A.UNSIGNED_SHORT,0,4)]]]);let Ze=class extends k{constructor(){super(...arguments),this._color=H(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:i}){i.setDepthWriteEnabled(!1),i.setDepthTestEnabled(!1),i.setStencilTestEnabled(!0),i.setBlendingEnabled(!1),i.setColorMask(!1,!1,!1,!1),i.setStencilOp(Q.KEEP,Q.KEEP,Q.REPLACE),i.setStencilWriteMask(255)}draw(i,e){const{context:t,requestRender:o,allowDelayedRender:a}=i;this._initialized||this._initialize(t),!a||o==null||this._solidProgram.compiled?(t.setStencilFunctionSeparate(gt.FRONT_AND_BACK,F.GREATER,e.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),this._solidProgram.setUniform2fv(\"u_coord_range\",[e.rangeX,e.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(P.TRIANGLE_STRIP,0,4),t.bindVAO()):o()}_initialize(i){if(this._initialized)return!0;const e=ue(i,ae);if(!e)return!1;const t=new Int8Array([0,0,1,0,0,1,1,1]),o=G.createVertex(i,Z.STATIC_DRAW,t),a=new K(i,ae.attributes,xe,new Map([[\"geometry\",o]]));return this._solidProgram=e,this._solidVertexArrayObject=a,this._initialized=!0,!0}},Ke=class extends Ve{constructor(i,e,t,o,a,r,l=a,n=r){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new ht(i),this.resolution=e,this.x=t,this.y=o,this.width=a,this.height=r,this.rangeX=l,this.rangeY=n}destroy(){this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let i=this;for(;i.parent!==this._stage;){if(!i.parent)return 0;i=i.parent}return this._stage.children.indexOf(i)}setTransform(i){const e=this.resolution/(i.resolution*i.pixelRatio),t=this.transforms.tileMat3,[o,a]=i.toScreenNoRotation([0,0],[this.x,this.y]),r=this.width/this.rangeX*e,l=this.height/this.rangeY*e;Ee(t,r,0,0,0,l,0,o,a,1),de(this.transforms.displayViewScreenMat3,i.displayViewMat3,t)}get destroyed(){return this._destroyed}};const qe=ee(),ye=kt();let ci=class extends Ke{constructor(i,e,t,o){super(i,e,t,o,ne,ne)}destroy(){super.destroy()}setTransform(i){const e=this.resolution/i.resolution,t=this.transforms.tileMat3,[o,a]=i.toScreenNoRotation([0,0],[this.x,this.y]),r=this.width/this.rangeX*e,l=this.height/this.rangeY*e;Ee(t,r,0,0,0,l,0,o,a,1),de(this.transforms.displayViewScreenMat3,i.displayViewMat3,t);const n=xt(_e(),r,0,0,l,o,a);yt(this.transforms.labelMat2d,i.viewMat2d,n)}_createTransforms(){return{labelMat2d:_e(),tileMat3:ee(),displayViewScreenMat3:ee()}}containsScreenPoint(i,e,t){const o=de(qe,i.viewMat3,this.transforms.tileMat3),a=St(qe,o);if(a==null)return!0;Tt(ye,...e,1);const r=bt(ye,ye,a),l=t*(this.resolution/i.resolution);return r[0]>=-l&&r[0]<this.width+l&&r[1]>=-l&&r[1]<this.height+l}},W=class ut{constructor(e){if(this.next=null,!Array.isArray(e))return void(this.data=e);this.data=e[0];let t=this;for(let o=1;o<e.length;o++)t.next=new ut([e[o]]),t=t.next}*values(){let e=this;for(;e;)yield e.data,e=e.next}forEach(e){let t=this;for(;t;)e(t.data),t=t.next}get last(){return this.next?this.next.last:this}},je=class{constructor(i){this._head=null,i!=null&&(this._head=new W(i))}get head(){return this._head}maxAvailableSpace(){if(this._head==null)return 0;let i=0;return this._head.forEach(e=>{const t=e.end-e.start;i=Math.max(i,t)}),i}firstFit(i){if(this._head==null)return null;let e=null,t=this._head;for(;t;){const o=t.data.end-t.data.start;if(o===i)return e?e.next=t.next:this._head=t.next,t.data.start;if(o>i){const a=t.data.start;return t.data.start+=i,a}e=t,t=t.next}return null}free(i,e){const t=i+e;if(this._head==null){const l=new W({start:i,end:t});return void(this._head=l)}if(t<=this._head.data.start){if(t===this._head.data.start)return void(this._head.data.start-=e);const l=new W({start:i,end:t});return l.next=this._head,void(this._head=l)}let o=this._head,a=o.next;for(;a;){if(a.data.start>=t){if(o.data.end===i){if(o.data.end+=e,o.data.end===a.data.start){const n=a.data.end-a.data.start;return o.data.end+=n,void(o.next=a.next)}return}if(a.data.start===t)return void(a.data.start-=e);const l=new W({start:i,end:t});return l.next=o.next,void(o.next=l)}o=a,a=a.next}if(i===o.data.end)return void(o.data.end+=e);const r=new W({start:i,end:t});o.next=r}clear(){this._head=null}};function ui(i,e){return i<<16|255&e}function fi(i){return 255&i}let re=class{constructor(i,e,t,o,a){this.instance=i,this.materialKey=e,this.target=t,this.start=o,this.count=a}get textureKey(){return fi(this.materialKey)}get indexEnd(){return this.start+this.count}extend(i){this.count+=i}render(i){this.instance.techniqueRef.render(i,this)}getStencilReference(){return this.target.stencilRef}getAttributePrecisionPackFactors(){const i=this.instance.instanceId;return this.target.getMesh(i).getAttributePrecisionPackFactors()}draw(i,e){It(i)?this.drawCompute(i.context,e):this.drawGeometry(i.context,e)}drawCompute(i,e){const t=this.instance.instanceId,o=this.target.getMesh(t).getComputeVAO(i,e),a=this.start*Uint32Array.BYTES_PER_ELEMENT/3;i.bindVAO(o),i.drawElements(P.POINTS,this.count/3,A.UNSIGNED_INT,a),i.bindVAO(null)}drawGeometry(i,e){const t=this.instance.instanceId,o=this.target.getMesh(t).getGeometryVAO(i,e),a=this.start*Uint32Array.BYTES_PER_ELEMENT;i.bindVAO(o),i.drawElements(P.TRIANGLES,this.count,A.UNSIGNED_INT,a),i.bindVAO(null)}},di=class ft{constructor(){this._length=0,this._minOrderedLength=0,this._materialKeys=new Set}static fromDisplayEntities(e,t,o,a){const r=new ft;for(const l of e.values())for(const n of l.records){const s=o.getInstance(n.instanceId),u=ui(s.instanceId,n.textureKey);r.addRecord(s,u,n.indexStart,n.indexCount,n.vertexStart,n.vertexCount,t,a)}return r}get length(){return this._length}get minOrderedLength(){return this._minOrderedLength}get minUnorderedLength(){return this._materialKeys.size}render(e,t){const{drawPhase:o}=e;for(const a of this.infos()){const r=a.instance.techniqueRef;r.drawPhase&o&&(t==null||r.type===t)&&a.render(e)}}addRecord(e,t,o,a,r,l,n,s){let u=o,c=a;if(c||(u=r,c=l),!c)return;if(this._head==null){const g=new re(e,t,n,u,c);return this._head=new W(g),this._tail=this._head,this._length++,void this._minOrderedLength++}if(s===ve.STRICT_ORDER)return this._insert(e,t,n,u,c,this._tail,null);let f=null,d=this._head;const _=e.instanceId,x=e.techniqueRef.symbologyPlane;if(s===ve.STRICT_MARKERS_AND_TEXT&&(x===Ae.MARKER||x===Ae.TEXT))return this._insert(e,t,n,u,c,this._tail,null);for(;d;){const g=d.data.instance,b=g.instanceId,E=g.techniqueRef.symbologyPlane,S=f?.data.instance.instanceId;if(x<E||_===S&&_!==b)return this._insert(e,t,n,u,c,f,d);f=d,d=d.next}this._insert(e,t,n,u,c,f,null)}*infos(){if(this._head!=null)for(const e of this._head.values())yield e}_insert(e,t,o,a,r,l,n){if(l==null&&n==null){const s=new re(e,t,o,a,r);return this._head=new W(s),this._tail=this._head,this._length++,void this._minOrderedLength++}return t!==this._tail.data.materialKey&&this._minOrderedLength++,this._materialKeys.add(t),l==null&&n!=null?this._insertAtHead(e,t,o,a,r,n):l!=null&&n==null?this._insertAtEnd(e,t,o,a,r,l):l!=null&&n!=null?this._insertAtMiddle(e,t,o,a,r,l,n):void 0}_insertAtHead(e,t,o,a,r,l){const n=a+r;if(t===l.data.materialKey&&o===l.data.target&&n===l.data.start)l.data.start=a,l.data.count+=r;else{const s=new re(e,t,o,a,r);this._head=new W(s),this._head.next=l,this._length++}}_insertAtEnd(e,t,o,a,r,l){if(l.data.materialKey===t&&l.data.indexEnd===a)l.data.count+=r;else{const n=new re(e,t,o,a,r);this._tail=new W(n),l.next=this._tail,this._length++}}_insertAtMiddle(e,t,o,a,r,l,n){const s=a+r;if(l.data.materialKey===t&&l.data.target===o&&l.data.indexEnd===a)l.data.count+=r,l.data.materialKey===n.data.materialKey&&l.data.target===n.data.target&&l.data.indexEnd===n.data.start&&(l.data.count+=n.data.count,l.next=n.next,this._length--);else if(t===n.data.materialKey&&o===n.data.target&&s===n.data.start)n.data.start=a,n.data.count+=r;else{const u=new re(e,t,o,a,r),c=new W(u);l.next=c,c.next=n,this._length++}}},_i=class{constructor(i){this._indexOnly=i,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(i){let e=0;this._indexOnly||(e=this.vertex.count-i.vertexStart,this.vertex.operations.push({srcFrom:i.vertexStart,dstFrom:this.vertex.count,count:i.vertexCount,mutate:0}),i.vertexStart=this.vertex.count,this.vertex.count+=i.vertexCount);let t=!1;if(this._indexOnly&&this.index.operations.length>=1){const o=this.index.operations[this.index.operations.length-1];o.srcFrom+o.count===i.indexStart&&(o.count+=i.indexCount,t=!0)}t||this.index.operations.push({srcFrom:i.indexStart,dstFrom:this.index.count,count:i.indexCount,mutate:e}),i.indexStart=this.index.count,this.index.count+=i.indexCount}};const Xe=j(\"esri-2d-log-allocations\");let $e=class dt{static create(e,t){const o=t.acquireUint32Array(e);return new dt(o,t)}constructor(e,t){this._array=e,this._pool=t}get array(){return this._array}get length(){return this._array.length}getUint32View(e,t){return new Uint32Array(this._array.buffer,e+this._array.byteOffset,t)}expand(e){if(e<=this._array.byteLength)return;const t=this._pool.acquireUint32Array(e);t.set(this._array),this._pool.releaseUint32Array(this._array),this._array=t}destroy(){this._pool.releaseUint32Array(this._array)}},Se=class _t{constructor(){this._data=new ArrayBuffer(_t.BYTE_LENGTH),this._freeList=new je({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(e){const t=this._freeList.firstFit(e);return t==null?null:new Uint32Array(this._data,t,e/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(e){this._freeList.free(e.byteOffset,e.byteLength)}};class vi{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*Se.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,Xe&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=Se.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const o of this._pages){const a=o.acquireUint32Array(e);if(a!=null)return a}const t=this._addPage().acquireUint32Array(e);return me(t,\"Expected to allocate page\"),t}releaseUint32Array(e){this._bytesAllocated-=e.byteLength,Xe&&console.log(`Freeing ${e.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const t=this._pagesByBuffer.get(e.buffer);t&&t.releaseUint32Array(e)}_addPage(){const e=new Se;return this._pages.push(e),this._pagesByBuffer.set(e.buffer,e),e}}const mi=1.25,Qe=32767,pi=Qe<<16|Qe;let Je=class{constructor(i,e,t,o){this._pool=o;const a=$e.create(e*t*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=e,this.strideInt=t,this.bufferType=i,this.dirty={start:1/0,end:0},this.memoryStats={bytesUsed:0,bytesReserved:e*t*Uint32Array.BYTES_PER_ELEMENT},this._gpu=null,this._cpu=a,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),this._gpu?.dispose(),this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose(),this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose(),this._gpuComputeTriangles?.dispose(),this._cpu?.destroy()}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new je({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(i){if(!(this.maxAvailableSpace()>=i)&&i*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const e=this._cpu.length/this.strideInt,t=Math.round((e+i)*mi),o=t*this.strideInt;this._cpu.expand(o*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(e,t-e),this.memoryStats.bytesReserved+=(t-e)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}set(i,e){this._cpu.array[i]!==e&&(this._cpu.array[i]=e,this.dirty.start=Math.min(i,this.dirty.start),this.dirty.end=Math.max(i+1,this.dirty.end))}getGPUBuffer(i,e=!1){if(!this.bufferSize)return null;if(e){if(this.bufferType!==\"index\")throw new Error(\"Tired to get triangle buffer, but target is not an index buffer\");return this._gpuComputeTriangles==null&&(this._gpuComputeTriangles=this._createComputeBuffer(i)),this._gpuComputeTriangles}return this._gpu==null&&(this._gpu=this._createBuffer(i)),this._gpu}getView(i,e){return this._cpu.getUint32View(i,e/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(i,e,t,o){const a=t*this.strideInt;if(!a)return 0;const r=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,l=new Uint32Array(i,r,a),n=this.freeList.firstFit(t);me(n,\"First fit region must be defined\");const s=n*this.strideInt,u=a;if(this._cpu.array.set(l,s),o!==0)for(let c=0;c<l.length;c++)this._cpu.array[c+s]+=o;return this.dirty.start=Math.min(this.dirty.start,s),this.dirty.end=Math.max(this.dirty.end,s+u),this.fillPointer=Math.max(this.fillPointer,s+u),this.memoryStats.bytesUsed+=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n}copyFrom(i,e,t,o,a){const r=t*this.strideInt;if(!r)return 0;const l=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n=i._cpu.getUint32View(l,r),s=this.freeList.firstFit(t);me(s,\"First fit region must be defined\");const u=s*this.strideInt,c=r;if(this._cpu.array.set(n,u),o!==0)for(let f=0;f<r;f++)this._cpu.array[u+f*this.strideInt+a]+=o;return this.dirty.start=Math.min(this.dirty.start,u),this.dirty.end=Math.max(this.dirty.end,u+c),this.fillPointer=Math.max(this.fillPointer,u+c),this.memoryStats.bytesUsed+=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,s}free(i,e,t){const o=i*this.strideInt,a=(i+e)*this.strideInt;if(t===!0)for(let r=i;r!==i+e;r++)this._cpu.array[r*this.strideInt]=pi;this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,a),this.freeList.free(i,e),this.memoryStats.bytesUsed-=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),this._gpu==null)return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}reshuffle(i,e){if(e.length===0)return;const t=this.byteSize,o=i*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=t>o,r=this._cpu,l=$e.create(o,this._pool);a||l.array.set(this._cpu.getUint32View(0,this.intSize));for(const n of e)if(a||n.srcFrom!==n.dstFrom||n.mutate!==0){this.dirty.start=Math.min(this.dirty.start,n.dstFrom*this.strideInt),this.dirty.end=Math.max(this.dirty.end,(n.dstFrom+n.count)*this.strideInt);for(let s=0;s<n.count;s++){const u=(n.dstFrom+s)*this.strideInt,c=(n.srcFrom+s)*this.strideInt;for(let f=0;f<this.strideInt;f++)l.array[u+f]=r.array[c+f]+n.mutate}}this._cpu.destroy(),this._cpu=l,a&&this.invalidate(),this.freeList.clear(),this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=o}_createBuffer(i){const e=Z.DYNAMIC_DRAW;return this.bufferType===\"index\"?G.createIndex(i,e,this._cpu.array):G.createVertex(i,e,this._cpu.array)}_createComputeBuffer(i){const e=Z.DYNAMIC_DRAW,t=new Uint32Array(this.fillPointer/3);for(let o=0;o<this.fillPointer;o+=3)t[o/3]=this._cpu.array[o];return G.createIndex(i,e,t)}};const et=1e3;function gi(i,e){const t=i.attributes.filter(o=>e.locations.has(o.name)).map(o=>({name:o.name,type:o.type,count:o.count,divisor:0,normalized:o.normalized??!1,offset:o.offset,stride:i.stride}));return new Map([[\"geometry\",t]])}function hi(i,e){const t=[],o=i.attributes.filter(a=>e.locations.has(a.name));for(const a of o){t.push({name:a.name,type:a.type,count:a.count,divisor:0,normalized:a.normalized??!1,offset:a.offset,stride:i.stride});const r=e.computeAttributeMap[a.name];r!=null&&r.length===2&&(t.push({name:r[0],count:a.count,divisor:0,type:a.type,normalized:a.normalized??!1,offset:a.offset+i.stride,stride:i.stride}),t.push({name:r[1],count:a.count,divisor:0,type:a.type,normalized:a.normalized??!1,offset:a.offset+2*i.stride,stride:i.stride}))}return new Map([[\"geometry\",t]])}let xi=class{constructor(i,e){if(this._bufferPool=i,this._layout=e,this._invalidatedGeometry=!1,this._invalidatedCompute=!1,this._position=this._layout.attributes.find(t=>t.name===\"pos\"||t.name===\"position\"),!this._position)throw new Error(\"InternalError: Unable to find position attribute\")}destroy(){this._indexBuffer=Pe(this._indexBuffer),this._vertexBuffer=Pe(this._vertexBuffer),this._computeVAO?.disposeVAOOnly(),this._geometryVAO?.disposeVAOOnly()}get layout(){return this._layout}getDrawArgs(i,e,t,o){return o?{primitive:P.POINTS,count:e/3,offset:t/3}:{primitive:i,count:e,offset:t}}getAttributePrecisionPackFactors(){const i={};for(const e of this.layout.attributes)e.packPrecisionFactor&&(i[e.name]=e.packPrecisionFactor);return i}getDebugVertexInfo(i=!1,e){if(!this._vertexBuffer)return null;const t=this._layout,o=t.stride,a=this._vertexBuffer.getView(0,this._vertexBuffer.byteSize),r=[];if(i)if(e==null)console.log(\"must provide location info to see compute attributes\");else for(const f of t.attributes){const d=e.computeAttributeMap[f.name];d!=null&&d.length===2&&(r.push({...f,name:d[0],offset:f.offset+o}),r.push({...f,name:d[1],offset:f.offset+2*o}))}const l=new DataView(a.slice().buffer);let n=a.byteLength/o;i&&(n=this._indexBuffer.fillPointer/3);const s=this._indexBuffer.getView(0,this._indexBuffer.byteSize);let u=0;const c=[];for(let f=0;f<n;f++){i&&(u=s[3*f]*o);const d={};for(const _ of[...t.attributes,...r]){let x=`${_.offset} ${_.name}`,g=ze(l,_,u);if(_.packPrecisionFactor)if(x+=` (precision: ${_.packPrecisionFactor})`,typeof g==\"number\")g/=_.packPrecisionFactor;else for(let b=0;b<g.length;b++)g[b]/=_.packPrecisionFactor;d[x]=g}u+=o,c.push(d)}return{vertices:c,layout:t}}_ensure(i,e){if(this._vertexBuffer&&this._indexBuffer)this._indexBuffer.ensure(Math.max(i,1e3)),this._vertexBuffer.ensure(Math.max(e,1e3));else{const t=this._layout.stride/Uint32Array.BYTES_PER_ELEMENT;this._indexBuffer=new Je(\"index\",Math.max(i,et),1,this._bufferPool),this._vertexBuffer=new Je(\"vertex\",Math.max(e,et),t,this._bufferPool)}}append(i){const e=i.layout.stride,t=i.indices.byteLength/Uint32Array.BYTES_PER_ELEMENT,o=i.vertices.byteLength/e;this._ensure(t,o);const{vertices:a,indices:r}=i,l=this._vertexBuffer.insert(a,0,a.byteLength/e,0);return{vertexFrom:l,indexFrom:this._indexBuffer.insert(r,0,r.byteLength/4,l)}}copyRecordFrom(i,e,t,o){const{indexStart:a,indexCount:r,vertexStart:l,vertexCount:n}=e;this._ensure(r,n);const s=i._position,u=t*(s.packPrecisionFactor??1),c=o*(s.packPrecisionFactor??1),f=s.offset,d=R(u,c),_=this._vertexBuffer.copyFrom(i._vertexBuffer,l,n,d,f),x=this._indexBuffer.copyFrom(i._indexBuffer,a,r,_-l,0),g=e.clone();return g.vertexStart=_,g.indexStart=x,g.overlaps=0,g}remove(i,e,t,o){this._indexBuffer.free(i,e),this._vertexBuffer.free(t,o)}upload(){this._invalidatedGeometry=!0,this._invalidatedCompute=!0}getGeometryVAO(i,e){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedGeometry){(this._vertexBuffer.invalidated||this._indexBuffer.invalidated)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._geometryVAO?.disposeVAOOnly(),this._geometryVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const t=this._indexBuffer.getGPUBuffer(i,!1),o=this._vertexBuffer.getGPUBuffer(i);this._geometryVAO||(this._geometryVAO=new K(i,e.locations,gi(this.layout,e),new Map([[\"geometry\",o]]),t)),this._invalidatedGeometry=!1}return this._geometryVAO}getComputeVAO(i,e){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedCompute){(this._vertexBuffer.invalidated||this._indexBuffer.invalidatedComputeBuffer)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._computeVAO?.disposeVAOOnly(),this._computeVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const t=this._indexBuffer.getGPUBuffer(i,!0),o=this._vertexBuffer.getGPUBuffer(i);this._computeVAO||(this._computeVAO=new K(i,e.locations,hi(this.layout,e),new Map([[\"geometry\",o]]),t),this._invalidatedCompute=!1)}return this._computeVAO}get memoryStats(){return{bytesUsed:this._vertexBuffer.memoryStats.bytesUsed+this._indexBuffer.memoryStats.bytesUsed,bytesReserved:this._vertexBuffer.memoryStats.bytesReserved+this._indexBuffer.memoryStats.bytesReserved,vertex:this._vertexBuffer.memoryStats,index:this._indexBuffer.memoryStats}}reshuffle(i){this._vertexBuffer&&this._vertexBuffer.reshuffle(i.vertex.count,i.vertex.operations),this._indexBuffer&&this._indexBuffer.reshuffle(i.index.count,i.index.operations)}},fe=class{constructor(i){this._pos=0,this._buffer=i,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}};function tt(i){return i?{entities:se(new fe(i.entities),ce),vertexData:i.data.map(yi)}:null}function yi(i){const e=i.layout.stride,t=new DataView(i.vertices),o=[],a=i.vertices.byteLength/e;let r=0;for(let l=0;l<a;l++){const n={};for(const s of i.layout.attributes){let u=`${s.offset} ${s.name}`,c=ze(t,s,r);if(s.packPrecisionFactor)if(u+=` (precision: ${s.packPrecisionFactor})`,typeof c==\"number\")c/=s.packPrecisionFactor;else for(let f=0;f<c.length;f++)c[f]/=s.packPrecisionFactor;n[u]=c}r+=e,o.push(n)}return{vertices:o,layout:i.layout}}const Si=()=>pe.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let Ti=0,it=class extends ci{constructor(i,e,t,o,a=!1){super(i,e,t,o),this._meshes=new Map,this._entities=[],this._invalidated=!1,this._nextUploadAllowed=!1,this.tileAge=Ti++,this._metrics=[],this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this._objectIdMap=null,this.visible=!0,this.transforms.labelMat2d=_e(),this.enableDeferredUploads=a}destroy(){super.destroy(),this.clear()}clear(){for(const i of this._meshes.values())i.destroy();this._meshes.clear(),this._entities=[],this._metrics=[],this._displayList=null,this._invalidated=!0,this._entityIds.clear(),this._nextUploadAllowed=!0}beforeRender(i){super.beforeRender(i),this._needsReshuffle&&i.reshuffleManager.schedule(this)}tryReady(i){const e=this._invalidated&&!this._uploadAllowed;return!(this.isReady||e||!this._encounteredEnd||!(i>=this._attributeEpoch))&&(j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${i}]`),this.ready(),this.requestRender(),!0)}get labelMetrics(){return this._metrics}get hasData(){return!!this._meshes.size}get hasAnimations(){return!!this._objectIdMap}get needsUpload(){return this._invalidated}get _uploadAllowed(){return!this.enableDeferredUploads||this._nextUploadAllowed}upload(){this._nextUploadAllowed=!0}getDisplayList(i,e){if(this._uploadAllowed&&this._invalidated){this._entities.sort((t,o)=>{const a=o.sortKey,r=t.sortKey;return r===a?t.id-o.id:r-a}),e===ve.BATCHING&&this.reshuffle(!0),this._displayList=di.fromDisplayEntities(this._entities,this,i,e);for(const t of this._meshes.values())t.upload();this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender(),this._invalidated=!1,this._nextUploadAllowed=!1}return this._displayList}getMesh(i){if(!this._meshes.has(i))throw new Error(`InternalError: Unable to find VAO for instance: ${i}`);return this._meshes.get(i)}getSortKeys(i){const e=new Map;for(const{id:t,sortKey:o}of this._entities)if(i.has(t)&&e.set(t,o),e.size===i.size)break;return e}onMessage(i){if(i.objectIdMap)for(const e in i.objectIdMap)this._objectIdMap||(this._objectIdMap={}),this._objectIdMap[e]=i.objectIdMap[e];switch(i.type){case\"append\":this._onAppendMessage(i);break;case\"update\":this._onUpdateMessage(i)}if(this._aggregateMemoryStats(),this.requestRender(),i.end){if(j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${i.attributeEpoch}]`),!i.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=i.attributeEpoch,this._encounteredEnd=!0}}_onAppendMessage(i){if(j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:tt(i?.append)}),i.clear&&this.clear(),!i.append)return;const e=se(new fe(i.append.entities),ce);this._insert(e,i.append.data,!1)}_onUpdateMessage(i){j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:i.isPixelBuffer,modify:tt(i.modify),remove:i.remove});const e=se(new fe(i.modify.entities),ce),t=e.map(r=>r.id),o=i.isPixelBuffer??!1,a=[...i.remove,...t];o?this._removeByIdsFromBuffer(a):this._removeByIds(a),this._insert(e,i.modify.data,o)}reshuffle(i=!1){if(this.destroyed)return;const e=new Map;for(const t of this._entities)for(const o of t.records){const a=this._meshes.get(o.instanceId);let r=e.get(a);r||(r=new _i(i),e.set(a,r)),r.copyRecord(o)}for(const[t,o]of e)t.reshuffle(o);this._invalidated=!0,this._aggregateMemoryStats(),j(\"esri-2d-update-debug\")&&Si().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(i,e,t,o){const a=t*ne,r=o*ne;for(const l of i._entities){let n=null;for(const s of l.records)if(s.overlaps&e){const u=i.getMesh(s.instanceId),c=this._ensureMesh(s.instanceId,u.layout).copyRecordFrom(u,s,a,r);n||(n=new ce(l.id,l.sortKey),this._entityIdsFromBuffer.add(l.id),this._entities.push(n)),n.records.push(c)}}this._invalidated=!0}_ensureMesh(i,e){return this._meshes.has(i)||this._meshes.set(i,new xi(this._stage.bufferPool,e)),this._meshes.get(i)}_insert(i,e,t){if(!i.length)return;this._removeDuplicatedBufferedEntites(i);const o=this._insertVertexData(e);for(const a of i){for(const r of a.records)r.updateBaseOffsets(o.get(r.instanceId));t?this._tryInsertBufferedEntity(a):this._insertEntity(a)}this._invalidated=!0}_insertVertexData(i){const e=new Map;for(const t of i){const{instanceId:o,layout:a}=t,r=this._ensureMesh(o,a).append(t);if(t.metrics){const l=se(new fe(t.metrics),Gt)??[];this._metrics.push(...l)}e.set(o,r)}return e}_insertEntity(i){j(\"esri-2d-update-debug\")&&this._entityIds.has(i.id)&&console.error(`Tile ${this.key.id} insertEnitty: Already have entityId ${i.id}`),this._entityIds.add(i.id),this._entities.push(i)}_tryInsertBufferedEntity(i){this._entityIds.has(i.id)?this._removeRecordsFromMesh(i.records):(this._entityIdsFromBuffer.add(i.id),this._entities.push(i))}_removeDuplicatedBufferedEntites(i){if(!this._entityIdsFromBuffer.size)return;const e=[];for(const t of i)this._entityIdsFromBuffer.has(t.id)&&e.push(t.id);this._removeByIds(e)}_removeByIdsFromBuffer(i){this._removeByIds(i.filter(e=>this._entityIdsFromBuffer.has(e)))}_removeByIds(i){if(i.length===0)return;const e=new Set(i),t=[];for(const o of this._entities)e.has(o.id)?this._remove(o):t.push(o);this._entities=t,this._invalidated=!0}_remove(i){this._removeRecordsFromMesh(i.records),this._entityIds.delete(i.id),this._entityIdsFromBuffer.delete(i.id);for(let e=this._metrics.length-1;e>=0;e--)this._metrics[e].entityTexel===i.id&&this._metrics.splice(e,1)}_removeRecordsFromMesh(i){for(const e of i){const{instanceId:t,indexStart:o,indexCount:a,vertexStart:r,vertexCount:l}=e;this._meshes.get(t)?.remove(o,a,r,l)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const i of this._meshes.values())this.debugInfo.memory.bytesUsed+=i.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=i.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:i,bytesReserved:e}=this.debugInfo.memory,t=i/e,{minOrderedLength:o,length:a}=this.debugInfo.display;return e>Ot&&t<Et||a>At&&o/a<Pt}get entityIds(){return this._objectIdMap?this._entities.map(({id:i})=>({objectId:this._objectIdMap[i],displayId:i})):[]}};const ot={shaders:{vertexShader:oe(\"tileInfo/tileInfo.vert\"),fragmentShader:oe(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])},at=512,Te=512,X=16,M=8,bi=(Te-2*M)/5;let rt=class extends k{constructor(){super(...arguments),this._color=H(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._ctx=null}prepareState({context:i}){i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(w.ONE,w.ONE_MINUS_SRC_ALPHA,w.ONE,w.ONE_MINUS_SRC_ALPHA),i.setColorMask(!0,!0,!0,!0),i.setStencilWriteMask(0),i.setStencilTestEnabled(!1)}draw(i,e){const{context:t,requestRender:o,allowDelayedRender:a}=i;if(!e.isReady&&e instanceof it&&e.hasData)return;if(this._loadWGLResources(t),a&&o!=null&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void o();t.bindVAO(this._outlineVertexArrayObject),t.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),this._outlineProgram.setUniform2f(\"u_coord_range\",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(P.LINE_STRIP,0,4);const r=this._getTexture(t,e);r&&(t.bindVAO(this._tileInfoVertexArrayObject),t.useProgram(this._tileInfoProgram),t.bindTexture(r,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f(\"u_delta\",0,0),this._tileInfoProgram.setUniform2f(\"u_dimensions\",r.descriptor.width,r.descriptor.height),t.drawArrays(P.TRIANGLE_STRIP,0,4)),t.bindVAO()}_loadWGLResources(i){if(this._outlineProgram&&this._tileInfoProgram)return;const e=ue(i,ae),t=ue(i,ot),o=new Int8Array([0,0,1,0,1,1,0,1]),a=G.createVertex(i,Z.STATIC_DRAW,o),r=new K(i,ae.attributes,xe,new Map([[\"geometry\",a]])),l=new Int8Array([0,0,1,0,0,1,1,1]),n=G.createVertex(i,Z.STATIC_DRAW,l),s=new K(i,ot.attributes,xe,new Map([[\"geometry\",n]]));this._outlineProgram=e,this._tileInfoProgram=t,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=s}_getTexture(i,e){if(!this._ctx){const n=document.createElement(\"canvas\");n.width=at,n.height=Te,this._ctx=n.getContext(\"2d\")}if(!e.tileDebugInfoTexture){const n=new Ct;n.wrapMode=Dt.CLAMP_TO_EDGE,n.samplingMode=N.LINEAR,n.isImmutable=!0,n.width=at,n.height=Te,e.tileDebugInfoTexture=new Rt(i,n)}const t=this._ctx;t.clearRect(0,0,t.canvas.width,t.canvas.height),t.textAlign=\"left\",t.textBaseline=\"top\",t.font=X-2+\"px sans-serif\",t.lineWidth=2,t.fillStyle=\"white\",t.strokeStyle=\"black\";const{debugSlot:o}=e;let a=M+bi*o;const r=`${o}) ${e.key.id} (${e.constructor.name})`;t.strokeText(r,M,a),t.fillText(r,M,a),a+=X;const{debugInfo:l}=e;if(l){const{length:n,minOrderedLength:s,minUnorderedLength:u,triangleCount:c}=l.display;if(n>0){const _=`Length: ${n}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}if(s){const _=`Min ordered length: ${s}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}if(u){const _=`Min unordered length: ${u}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}if(c>0){c>1e5&&(t.fillStyle=\"red\",t.strokeStyle=\"white\");const _=`Triangle count: ${c}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}const{bytesUsed:f,bytesReserved:d}=l.memory;if(t.fillStyle=\"white\",t.strokeStyle=\"black\",f>0||d>0){const _=`Memory usage: ${f} of ${d} bytes`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}}return e.tileDebugInfoTexture.setData(t.canvas),e.tileDebugInfoTexture}},Ii=class extends k{constructor(){super(...arguments),this._color=H(1,0,0,1),this._patternMatrix=ee(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(i,e){const{context:t,painter:o,requestRender:a,allowDelayedRender:r}=i;this._loadWGLResources(i);const l=i.displayLevel,n=i.styleLayer,s=n.backgroundMaterial,u=o.vectorTilesMaterialManager,c=n.getPaintValue(\"background-color\",l),f=n.getPaintValue(\"background-opacity\",l),d=n.getPaintValue(\"background-pattern\",l),_=d!==void 0,x=1|window.devicePixelRatio,g=i.spriteMosaic;let b,E;const S=x>Ce?2:1,T=this._programOptions;T.pattern=_;const m=u.getMaterialProgram(t,s,T);if(!r||a==null||m.compiled){if(t.bindVAO(this._vao),t.useProgram(m),_){const p=g.getMosaicItemPosition(d,!0);if(p!=null){const{tl:h,br:y,page:I}=p;b=y[0]-h[0],E=y[1]-h[1];const v=g.getPageSize(I);v!=null&&(g.bind(t,N.LINEAR,I,B),m.setUniform4f(\"u_tlbr\",h[0],h[1],y[0],y[1]),m.setUniform2fv(\"u_mosaicSize\",v),m.setUniform1i(\"u_texture\",B))}m.setUniform1f(\"u_opacity\",f)}else{const p=c[3]*f;this._color[0]=p*c[0],this._color[1]=p*c[1],this._color[2]=p*c[2],this._color[3]=p,m.setUniform4fv(\"u_color\",this._color)}m.setUniform1f(\"u_depth\",n.z||0);for(const p of e){if(m.setUniform1f(\"u_coord_range\",p.rangeX),m.setUniformMatrix3fv(\"u_dvsMat3\",p.transforms.displayViewScreenMat3),_){const h=Math.max(2**(Math.round(l)-p.key.level),1),y=S*p.width*h,I=y/De(b),v=y/De(E);this._patternMatrix[0]=I,this._patternMatrix[4]=v,m.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}t.setStencilFunction(F.EQUAL,0,255),t.drawArrays(P.TRIANGLE_STRIP,0,4)}}else a()}_loadWGLResources(i){if(this._vao)return;const{context:e,styleLayer:t}=i,o=t.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),r=G.createVertex(e,Z.STATIC_DRAW,a),l=new K(e,o.getAttributeLocations(),o.getLayoutInfo(),new Map([[\"geometry\",r]]));this._vao=l}},Oi=class extends k{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(i,e){const{context:t,displayLevel:o,requiredLevel:a,state:r,painter:l,spriteMosaic:n,styleLayerUID:s,requestRender:u,allowDelayedRender:c}=i;if(!e.some(m=>m.layerData.get(s)?.circleIndexCount??!1))return;const f=i.styleLayer,d=f.circleMaterial,_=l.vectorTilesMaterialManager,x=1.2,g=f.getPaintValue(\"circle-translate\",o),b=f.getPaintValue(\"circle-translate-anchor\",o),E=this._programOptions,S=_.getMaterialProgram(t,d,E);if(c&&u!=null&&!S.compiled)return void u();t.useProgram(S),S.setUniformMatrix3fv(\"u_displayMat3\",b===J.VIEWPORT?r.displayMat3:r.displayViewMat3),S.setUniform2fv(\"u_circleTranslation\",g),S.setUniform1f(\"u_depth\",f.z),S.setUniform1f(\"u_antialiasingWidth\",x);let T=-1;for(const m of e){if(!m.layerData.has(s))continue;m.key.level!==T&&(T=m.key.level,d.setDataUniforms(S,o,f,T,n));const p=m.layerData.get(s);if(!p.circleIndexCount)continue;p.prepareForRendering(t);const h=p.vao;h!=null&&(t.bindVAO(h),S.setUniformMatrix3fv(\"u_dvsMat3\",m.transforms.displayViewScreenMat3),a!==m.key.level?t.setStencilFunction(F.EQUAL,m.stencilRef,255):t.setStencilFunction(F.GREATER,255,255),t.drawElements(P.TRIANGLES,p.circleIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*p.circleIndexStart),m.triangleCount+=p.circleIndexCount/3)}}};const lt=1/65536;class Ei extends k{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(e,t){const{displayLevel:o,renderPass:a,spriteMosaic:r,styleLayerUID:l}=e;let n=!1;for(const T of t)if(T.layerData.has(l)){const m=T.layerData.get(l);if(m.fillIndexCount>0||m.outlineIndexCount>0){n=!0;break}}if(!n)return;const s=e.styleLayer,u=s.getPaintProperty(\"fill-pattern\"),c=u!==void 0,f=c&&u.isDataDriven;let d;if(c&&!f){const T=u.getValue(o);d=r.getMosaicItemPosition(T,!0)}const _=!c&&s.getPaintValue(\"fill-antialias\",o);let x=!0,g=1;if(!c){const T=s.getPaintProperty(\"fill-color\"),m=s.getPaintProperty(\"fill-opacity\");if(!T?.isDataDriven&&!m?.isDataDriven){const p=s.getPaintValue(\"fill-color\",o);g=s.getPaintValue(\"fill-opacity\",o)*p[3],g>=1&&(x=!1)}}if(x&&a===\"opaque\")return;const b=s.getPaintValue(\"fill-translate\",o),E=s.getPaintValue(\"fill-translate-anchor\",o);(x||a!==\"translucent\")&&this._drawFill(e,l,s,t,b,E,c,d,f);const S=!s.hasDataDrivenOutlineColor&&s.outlineUsesFillColor&&g<1;_&&a!==\"opaque\"&&!S&&this._drawOutline(e,l,s,t,b,E)}_drawFill(e,t,o,a,r,l,n,s,u){if(n&&!u&&s==null)return;const{context:c,displayLevel:f,state:d,painter:_,pixelRatio:x,spriteMosaic:g,requestRender:b,allowDelayedRender:E}=e,S=o.fillMaterial,T=_.vectorTilesMaterialManager,m=x>Ce?2:1,p=this._fillProgramOptions;p.pattern=n;const h=T.getMaterialProgram(c,S,p);if(E&&b!=null&&!h.compiled)return void b();if(c.useProgram(h),s!=null){const{page:I}=s,v=g.getPageSize(I);v!=null&&(g.bind(c,N.LINEAR,I,B),h.setUniform2fv(\"u_mosaicSize\",v),h.setUniform1i(\"u_texture\",B))}h.setUniformMatrix3fv(\"u_displayMat3\",l===J.VIEWPORT?d.displayMat3:d.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",r),h.setUniform1f(\"u_depth\",o.z+lt);let y=-1;for(const I of a){if(!I.layerData.has(t))continue;I.key.level!==y&&(y=I.key.level,S.setDataUniforms(h,f,o,y,g));const v=I.layerData.get(t);if(!v.fillIndexCount)continue;v.prepareForRendering(c);const V=v.fillVAO;if(V!=null){if(c.bindVAO(V),h.setUniformMatrix3fv(\"u_dvsMat3\",I.transforms.displayViewScreenMat3),c.setStencilFunction(F.EQUAL,I.stencilRef,255),n){const O=Math.max(2**(Math.round(f)-I.key.level),1),D=I.rangeX/(m*I.width*O);h.setUniform1f(\"u_patternFactor\",D)}if(u){const O=v.patternMap;if(!O)continue;for(const[D,L]of O){const q=g.getPageSize(D);q!=null&&(g.bind(c,N.LINEAR,D,B),h.setUniform2fv(\"u_mosaicSize\",q),h.setUniform1i(\"u_texture\",B),c.drawElements(P.TRIANGLES,L[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*L[0]))}}else c.drawElements(P.TRIANGLES,v.fillIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*v.fillIndexStart);I.triangleCount+=v.fillIndexCount/3}}}_drawOutline(e,t,o,a,r,l){const{context:n,displayLevel:s,state:u,painter:c,pixelRatio:f,spriteMosaic:d,requestRender:_,allowDelayedRender:x}=e,g=o.outlineMaterial,b=c.vectorTilesMaterialManager,E=.75/f,S=this._outlineProgramOptions,T=b.getMaterialProgram(n,g,S);if(x&&_!=null&&!T.compiled)return void _();n.useProgram(T),T.setUniformMatrix3fv(\"u_displayMat3\",l===J.VIEWPORT?u.displayMat3:u.displayViewMat3),T.setUniform2fv(\"u_fillTranslation\",r),T.setUniform1f(\"u_depth\",o.z+lt),T.setUniform1f(\"u_outline_width\",E);let m=-1;for(const p of a){if(!p.layerData.has(t))continue;p.key.level!==m&&(m=p.key.level,g.setDataUniforms(T,s,o,m,d));const h=p.layerData.get(t);if(h.prepareForRendering(n),!h.outlineIndexCount)continue;const y=h.outlineVAO;y!=null&&(n.bindVAO(y),T.setUniformMatrix3fv(\"u_dvsMat3\",p.transforms.displayViewScreenMat3),n.setStencilFunction(F.EQUAL,p.stencilRef,255),n.drawElements(P.TRIANGLES,h.outlineIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*h.outlineIndexStart),p.triangleCount+=h.outlineIndexCount/3)}}}class Ai extends k{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(e,t){const{context:o,displayLevel:a,state:r,painter:l,pixelRatio:n,spriteMosaic:s,styleLayerUID:u,requestRender:c,allowDelayedRender:f}=e;if(!t.some(O=>O.layerData.get(u)?.lineIndexCount??!1))return;const d=e.styleLayer,_=d.lineMaterial,x=l.vectorTilesMaterialManager,g=d.getPaintValue(\"line-translate\",a),b=d.getPaintValue(\"line-translate-anchor\",a),E=d.getPaintProperty(\"line-pattern\"),S=E!==void 0,T=S&&E.isDataDriven;let m,p;if(S&&!T){const O=E.getValue(a);m=s.getMosaicItemPosition(O)}let h=!1;if(!S){const O=d.getPaintProperty(\"line-dasharray\");if(p=O!==void 0,h=p&&O.isDataDriven,p&&!h){const D=O.getValue(a),L=d.getDashKey(D,d.getLayoutValue(\"line-cap\",a));m=s.getMosaicItemPosition(L)}}const y=1/n,I=this._programOptions;I.pattern=S,I.sdf=p;const v=x.getMaterialProgram(o,_,I);if(f&&c!=null&&!v.compiled)return void c();if(o.useProgram(v),v.setUniformMatrix3fv(\"u_displayViewMat3\",r.displayViewMat3),v.setUniformMatrix3fv(\"u_displayMat3\",b===J.VIEWPORT?r.displayMat3:r.displayViewMat3),v.setUniform2fv(\"u_lineTranslation\",g),v.setUniform1f(\"u_depth\",d.z),v.setUniform1f(\"u_antialiasing\",y),m&&m!=null){const{page:O}=m,D=s.getPageSize(O);D!=null&&(s.bind(o,N.LINEAR,O,B),v.setUniform2fv(\"u_mosaicSize\",D),v.setUniform1i(\"u_texture\",B))}let V=-1;for(const O of t){if(!O.layerData.has(u))continue;O.key.level!==V&&(V=O.key.level,_.setDataUniforms(v,a,d,V,s));const D=2**(a-V)/n;v.setUniform1f(\"u_zoomFactor\",D);const L=O.layerData.get(u);if(!L.lineIndexCount)continue;L.prepareForRendering(o);const q=L.vao;if(q!=null){if(o.bindVAO(q),v.setUniformMatrix3fv(\"u_dvsMat3\",O.transforms.displayViewScreenMat3),o.setStencilFunction(F.EQUAL,O.stencilRef,255),T||h){const le=L.patternMap;if(!le)continue;for(const[C,$]of le){const z=s.getPageSize(C);z!=null&&(s.bind(o,N.LINEAR,C,B),v.setUniform2fv(\"u_mosaicSize\",z),v.setUniform1i(\"u_texture\",B),o.drawElements(P.TRIANGLES,$[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*$[0]))}}else o.drawElements(P.TRIANGLES,L.lineIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*L.lineIndexStart);O.triangleCount+=L.lineIndexCount/3}}}}const Pi=256/360,Ci=1/Math.LN2;function Di(i,e){return(i%=e)>=0?i:i+e}function nt(i){return Di(i*Pi,256)}function Ri(i){return Math.log(i)*Ci}const Li=1/65536;class Mi extends k{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=Lt()}dispose(){}drawMany(e,t){const o=e.styleLayer;this._drawIcons(e,o,t),this._drawText(e,o,t)}_drawIcons(e,t,o){const{context:a,displayLevel:r,painter:l,spriteMosaic:n,state:s,styleLayerUID:u,requestRender:c,allowDelayedRender:f}=e,d=t.iconMaterial,_=l.vectorTilesMaterialManager;let x,g=!1;for(const v of o)if(v.layerData.has(u)&&(x=v.layerData.get(u),x.iconPerPageElementsMap.size>0)){g=!0;break}if(!g)return;const b=t.getPaintValue(\"icon-translate\",r),E=t.getPaintValue(\"icon-translate-anchor\",r);let S=t.getLayoutValue(\"icon-rotation-alignment\",r);S===Y.AUTO&&(S=t.getLayoutValue(\"symbol-placement\",r)===Ne.POINT?Y.VIEWPORT:Y.MAP);const T=S===Y.MAP,m=t.getLayoutValue(\"icon-keep-upright\",r)&&T,p=x.isIconSDF,h=this._iconProgramOptions;h.sdf=p;const y=_.getMaterialProgram(a,d,h);if(f&&c!=null&&!y.compiled)return void c();a.useProgram(y),y.setUniformMatrix3fv(\"u_displayViewMat3\",S===Y.MAP?s.displayViewMat3:s.displayMat3),y.setUniformMatrix3fv(\"u_displayMat3\",E===J.VIEWPORT?s.displayMat3:s.displayViewMat3),y.setUniform2fv(\"u_iconTranslation\",b),y.setUniform1f(\"u_depth\",t.z),y.setUniform1f(\"u_mapRotation\",nt(s.rotation)),y.setUniform1f(\"u_keepUpright\",m?1:0),y.setUniform1f(\"u_level\",10*r),y.setUniform1i(\"u_texture\",B),y.setUniform1f(\"u_fadeDuration\",we/1e3);let I=-1;for(const v of o){if(!v.layerData.has(u)||(v.key.level!==I&&(I=v.key.level,d.setDataUniforms(y,r,t,I,n)),x=v.layerData.get(u),x.iconPerPageElementsMap.size===0))continue;x.prepareForRendering(a),x.updateOpacityInfo();const V=x.iconVAO;if(V!=null){a.bindVAO(V),y.setUniformMatrix3fv(\"u_dvsMat3\",v.transforms.displayViewScreenMat3),y.setUniform1f(\"u_time\",(performance.now()-x.lastOpacityUpdate)/1e3);for(const[O,D]of x.iconPerPageElementsMap)this._renderIconRange(e,y,D,O,v)}}}_renderIconRange(e,t,o,a,r){const{context:l,spriteMosaic:n}=e;this._spritesTextureSize[0]=n.getWidth(a)/4,this._spritesTextureSize[1]=n.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),n.bind(l,N.LINEAR,a,B),this._setStencilState(e,r),l.drawElements(P.TRIANGLES,o[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*o[0]),r.triangleCount+=o[1]/3}_drawText(e,t,o){const{context:a,displayLevel:r,glyphMosaic:l,painter:n,pixelRatio:s,spriteMosaic:u,state:c,styleLayerUID:f,requestRender:d,allowDelayedRender:_}=e,x=t.textMaterial,g=n.vectorTilesMaterialManager;let b,E=!1;for(const z of o)if(z.layerData.has(f)&&(b=z.layerData.get(f),b.glyphPerPageElementsMap.size>0)){E=!0;break}if(!E)return;const S=t.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&S.getValue(r)===0)return;const T=t.getPaintProperty(\"text-color\"),m=!T||T.isDataDriven||T.getValue(r)[3]>0,p=t.getPaintProperty(\"text-halo-width\"),h=t.getPaintProperty(\"text-halo-color\"),y=(!p||p.isDataDriven||p.getValue(r)>0)&&(!h||h.isDataDriven||h.getValue(r)[3]>0);if(!m&&!y)return;const I=24/8;let v=t.getLayoutValue(\"text-rotation-alignment\",r);v===Y.AUTO&&(v=t.getLayoutValue(\"symbol-placement\",r)===Ne.POINT?Y.VIEWPORT:Y.MAP);const V=v===Y.MAP,O=t.getLayoutValue(\"text-keep-upright\",r)&&V,D=.8*I/s;this._glyphTextureSize||(this._glyphTextureSize=Mt(l.width/4,l.height/4));const L=t.getPaintValue(\"text-translate\",r),q=t.getPaintValue(\"text-translate-anchor\",r),le=this._sdfProgramOptions,C=g.getMaterialProgram(a,x,le);if(_&&d!=null&&!C.compiled)return void d();a.useProgram(C),C.setUniformMatrix3fv(\"u_displayViewMat3\",v===Y.MAP?c.displayViewMat3:c.displayMat3),C.setUniformMatrix3fv(\"u_displayMat3\",q===J.VIEWPORT?c.displayMat3:c.displayViewMat3),C.setUniform2fv(\"u_textTranslation\",L),C.setUniform1f(\"u_depth\",t.z+Li),C.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),C.setUniform1f(\"u_mapRotation\",nt(c.rotation)),C.setUniform1f(\"u_keepUpright\",O?1:0),C.setUniform1f(\"u_level\",10*r),C.setUniform1i(\"u_texture\",Re),C.setUniform1f(\"u_antialiasingWidth\",D),C.setUniform1f(\"u_fadeDuration\",we/1e3);let $=-1;for(const z of o){if(!z.layerData.has(f)||(z.key.level!==$&&($=z.key.level,x.setDataUniforms(C,r,t,$,u)),b=z.layerData.get(f),b.glyphPerPageElementsMap.size===0))continue;b.prepareForRendering(a),b.updateOpacityInfo();const Ie=b.textVAO;if(Ie==null)continue;a.bindVAO(Ie),C.setUniformMatrix3fv(\"u_dvsMat3\",z.transforms.displayViewScreenMat3),this._setStencilState(e,z);const vt=(performance.now()-b.lastOpacityUpdate)/1e3;C.setUniform1f(\"u_time\",vt),b.glyphPerPageElementsMap.forEach((mt,pt)=>{this._renderGlyphRange(a,mt,pt,l,C,y,m,z)})}}_renderGlyphRange(e,t,o,a,r,l,n,s){a.bind(e,N.LINEAR,o,Re),l&&(r.setUniform1f(\"u_halo\",1),e.drawElements(P.TRIANGLES,t[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3),n&&(r.setUniform1f(\"u_halo\",0),e.drawElements(P.TRIANGLES,t[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:o,is3D:a,stencilSymbols:r}=e;if(o.setStencilTestEnabled(!0),r)return o.setStencilWriteMask(255),void o.setStencilFunction(F.ALWAYS,t.stencilRef,255);o.setStencilWriteMask(0),a?o.setStencilFunction(F.EQUAL,t.stencilRef,255):o.setStencilFunction(F.GREATER,255,255)}}const st={clip:li,stencil:Ze,bitmap:Kt,tileDebugInfo:rt,vtlBackground:Ii,vtlFill:Ei,vtlLine:Ai,vtlCircle:Oi,vtlSymbol:Mi},zi=i=>{switch(i.BYTES_PER_ELEMENT){case 1:return A.UNSIGNED_BYTE;case 2:return A.UNSIGNED_SHORT;case 4:return A.UNSIGNED_INT;default:throw new ge(\"Cannot get DataType of array\")}},Vi=(i,e,t,o)=>{let a=0;for(let r=1;r<t;r++){const l=i[2*(e+r-1)],n=i[2*(e+r-1)+1];a+=(i[2*(e+r)]-l)*(i[2*(e+r)+1]+n)}return o?a>0:a<0},ct=({coords:i,lengths:e},t)=>{const o=[];for(let a=0,r=0;a<e.length;r+=e[a],a+=1){const l=r,n=[];for(;a<e.length-1&&Vi(i,r+e[a],e[a+1],t);a+=1,r+=e[a])n.push(r+e[a]-l);const s=i.slice(2*l,2*(r+e[a])),u=Wt(s,n,2);for(const c of u)o.push(c+l)}return o};class U{constructor(e,t,o,a=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=o,this.isMapSpace=a}static fromPath(e){const t=zt(new Le,e.path,!1,!1),o=t.coords,a=new Uint32Array(ct(t,!0)),r=new Uint32Array(o.length/2);for(let l=0;l<r.length;l++)r[l]=R(Math.floor(o[2*l]),Math.floor(o[2*l+1]));return new U({geometry:r},a,P.TRIANGLES)}static fromGeometry(e,t){const o=t.geometry?.type;switch(o){case\"polygon\":return U.fromPolygon(e,t.geometry);case\"extent\":return U.fromMapExtent(e,t.geometry);default:return pe.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new ge(\"mapview-bad-type\",`Unable to create a mesh from type ${o}`,t)),U.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}static fromPolygon(e,t){const o=Vt(new Le,t,!1,!1),a=o.coords,r=new Uint32Array(ct(o,!1)),l=new Uint32Array(a.length/2),n=Me(),s=Me();for(let u=0;u<l.length;u++)Nt(n,a[2*u],a[2*u+1]),e.toScreen(s,n),l[u]=R(Math.floor(s[0]),Math.floor(s[1]));return new U({geometry:l},r,P.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:o,ymax:a}){const r={geometry:new Uint32Array([R(e,o),R(t,o),R(e,a),R(e,a),R(t,o),R(t,a)])},l=new Uint32Array([0,1,2,3,4,5]);return new U(r,l,P.TRIANGLES)}static fromMapExtent(e,t){const[o,a]=e.toScreen([0,0],[t.xmin,t.ymin]),[r,l]=e.toScreen([0,0],[t.xmax,t.ymax]),n={geometry:new Uint32Array([R(o,a),R(r,a),R(o,l),R(o,l),R(r,a),R(r,l)])},s=new Uint32Array([0,1,2,3,4,5]);return new U(n,s,P.TRIANGLES)}destroy(){this._cache.indexBuffer!=null&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers?.forEach(e=>e?.dispose()),this._cache.indexBuffer=this._cache.vertexBuffers=null}get elementType(){return zi(this.indices)}getIndexBuffer(e,t=Z.STATIC_DRAW){return this._cache.indexBuffer??=G.createIndex(e,t,this.indices),this._cache.indexBuffer}getVertexBuffers(e,t=Z.STATIC_DRAW){return this._cache.vertexBuffers??=new Map(Object.keys(this.vertices).reduce((o,a)=>(o.push([a,G.createVertex(e,t,this.vertices[a])]),o),new Array)),this._cache.vertexBuffers}}class be extends Ve{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=wt(()=>t.version,()=>this._invalidate()),this.ready()}static fromClipArea(e,t){return new be(e,t)}_destroyGL(){this._cache.mesh!=null&&(this._cache.mesh.destroy(),this._cache.mesh=null),this._cache.vao!=null&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,o,a){const[r,l]=t.size;if(this._clip.type!==\"geometry\"&&this._lastWidth===r&&this._lastHeight===l||(this._lastWidth=r,this._lastHeight=l,this._destroyGL()),this._cache.vao==null){const n=this._createMesh(t,this._clip),s=n.getIndexBuffer(e),u=n.getVertexBuffers(e);this._cache.mesh=n,this._cache.vao=new K(e,o,a,u,s)}return this._cache.vao}_createTransforms(){return{displayViewScreenMat3:ee()}}_invalidate(){this._destroyGL(),this.requestRender()}_createMesh(e,t){switch(t.type){case\"rect\":return U.fromScreenExtent(Ft(t,e.size[0],e.size[1]));case\"path\":return U.fromPath(t);case\"geometry\":return U.fromGeometry(e,t);default:return pe.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new ge(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),U.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}}class Ni extends Ht{set clips(e){super.clips=e,this._updateClippingInfo(e)}renderChildren(e){e.painter.setPipelineState(null),this._renderPasses==null&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const t of this._renderPasses)try{t.render(e)}catch{}}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[st.clip],target:()=>this._clippingInfos,drawPhase:te.MAP|te.LABEL|te.LABEL_ALPHA|te.DEBUG|te.HIGHLIGHT})]}_updateClippingInfo(e){this._clippingInfos!=null&&(this._clippingInfos.forEach(t=>t.destroy()),this._clippingInfos=null),e!=null&&e.length&&(this._clippingInfos=e.items.map(t=>be.fromClipArea(this.stage,t))),this.requestRender()}}export{Ze as _,Fe as a,si as b,it as c,oe as d,k as e,ni as f,Ri as g,vi as i,Ni as n,Ke as r,st as t,rt as y};\n","const o=!0,t=32,c=1.5,e=200;export{c,e,o,t};\n","function m(e,n,x){x=x||2;var r,i,u,f,t,v,y,c=n&&n.length,o=c?n[0]*x:e.length,h=B(e,0,o,x,!0),a=[];if(!h||h.next===h.prev)return a;if(c&&(h=J(e,n,h,x)),e.length>80*x){r=u=e[0],i=f=e[1];for(var p=x;p<o;p+=x)(t=e[p])<r&&(r=t),(v=e[p+1])<i&&(i=v),t>u&&(u=t),v>f&&(f=v);y=(y=Math.max(u-r,f-i))!==0?1/y:0}return g(h,a,x,r,i,y),a}function B(e,n,x,r,i){var u,f;if(i===A(e,n,x,r)>0)for(u=n;u<x;u+=r)f=E(u,e[u],e[u+1],f);else for(u=x-r;u>=n;u-=r)f=E(u,e[u],e[u+1],f);if(f&&M(f,f.next)){var t=f.next;w(f),f=t}return f}function s(e,n){if(!e)return e;n||(n=e);var x,r=e;do if(x=!1,r.steiner||!M(r,r.next)&&l(r.prev,r,r.next)!==0)r=r.next;else{var i=r.prev;if(w(r),(r=n=i)===r.next)break;x=!0}while(x||r!==n);return n}function g(e,n,x,r,i,u,f){if(e){!f&&u&&P(e,r,i,u);for(var t,v,y=e;e.prev!==e.next;)if(t=e.prev,v=e.next,u?G(e,r,i,u):F(e))n.push(t.i/x),n.push(e.i/x),n.push(v.i/x),w(e),e=v.next,y=v.next;else if((e=v)===y){f?f===1?g(e=H(s(e),n,x),n,x,r,i,u,2):f===2&&I(e,n,x,r,i,u):g(s(e),n,x,r,i,u,1);break}}}function F(e){var n=e.prev,x=e,r=e.next;if(l(n,x,r)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(Z(n.x,n.y,x.x,x.y,r.x,r.y,i.x,i.y)&&l(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function G(e,n,x,r){var i=e.prev,u=e,f=e.next;if(l(i,u,f)>=0)return!1;for(var t=i.x<u.x?i.x<f.x?i.x:f.x:u.x<f.x?u.x:f.x,v=i.y<u.y?i.y<f.y?i.y:f.y:u.y<f.y?u.y:f.y,y=i.x>u.x?i.x>f.x?i.x:f.x:u.x>f.x?u.x:f.x,c=i.y>u.y?i.y>f.y?i.y:f.y:u.y>f.y?u.y:f.y,o=j(t,v,n,x,r),h=j(y,c,n,x,r),a=e.prevZ,p=e.nextZ;a&&a.z>=o&&p&&p.z<=h;){if(a!==e.prev&&a!==e.next&&Z(i.x,i.y,u.x,u.y,f.x,f.y,a.x,a.y)&&l(a.prev,a,a.next)>=0||(a=a.prevZ,p!==e.prev&&p!==e.next&&Z(i.x,i.y,u.x,u.y,f.x,f.y,p.x,p.y)&&l(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;a&&a.z>=o;){if(a!==e.prev&&a!==e.next&&Z(i.x,i.y,u.x,u.y,f.x,f.y,a.x,a.y)&&l(a.prev,a,a.next)>=0)return!1;a=a.prevZ}for(;p&&p.z<=h;){if(p!==e.prev&&p!==e.next&&Z(i.x,i.y,u.x,u.y,f.x,f.y,p.x,p.y)&&l(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function H(e,n,x){var r=e;do{var i=r.prev,u=r.next.next;!M(i,u)&&C(i,r,r.next,u)&&d(i,u)&&d(u,i)&&(n.push(i.i/x),n.push(r.i/x),n.push(u.i/x),w(r),w(r.next),r=e=u),r=r.next}while(r!==e);return s(r)}function I(e,n,x,r,i,u){var f=e;do{for(var t=f.next.next;t!==f.prev;){if(f.i!==t.i&&S(f,t)){var v=D(f,t);return f=s(f,f.next),v=s(v,v.next),g(f,n,x,r,i,u),void g(v,n,x,r,i,u)}t=t.next}f=f.next}while(f!==e)}function J(e,n,x,r){var i,u,f,t=[];for(i=0,u=n.length;i<u;i++)(f=B(e,n[i]*r,i<u-1?n[i+1]*r:e.length,r,!1))===f.next&&(f.steiner=!0),t.push(R(f));for(t.sort(K),i=0;i<t.length;i++)x=s(x=L(t[i],x),x.next);return x}function K(e,n){return e.x-n.x}function k(e){if(e.next.prev===e)return e;let n=e;for(;;){const x=n.next;if(x.prev===n||x===n||x===e)break;n=x}return n}function L(e,n){var x=N(e,n);if(!x)return n;var r=D(x,e),i=s(x,x.next);let u=k(r);return s(u,u.next),i=k(i),k(n===x?i:n)}function N(e,n){var x,r=n,i=e.x,u=e.y,f=-1/0;do{if(u<=r.y&&u>=r.next.y&&r.next.y!==r.y){var t=r.x+(u-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(t<=i&&t>f){if(f=t,t===i){if(u===r.y)return r;if(u===r.next.y)return r.next}x=r.x<r.next.x?r:r.next}}r=r.next}while(r!==n);if(!x)return null;if(i===f)return x;var v,y=x,c=x.x,o=x.y,h=1/0;r=x;do i>=r.x&&r.x>=c&&i!==r.x&&Z(u<o?i:f,u,c,o,u<o?f:i,u,r.x,r.y)&&(v=Math.abs(u-r.y)/(i-r.x),d(r,e)&&(v<h||v===h&&(r.x>x.x||r.x===x.x&&O(x,r)))&&(x=r,h=v)),r=r.next;while(r!==y);return x}function O(e,n){return l(e.prev,e,n.prev)<0&&l(n.next,e,e.next)<0}function P(e,n,x,r){var i=e;do i.z===null&&(i.z=j(i.x,i.y,n,x,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,Q(i)}function Q(e){var n,x,r,i,u,f,t,v,y=1;do{for(x=e,e=null,u=null,f=0;x;){for(f++,r=x,t=0,n=0;n<y&&(t++,r=r.nextZ);n++);for(v=y;t>0||v>0&&r;)t!==0&&(v===0||!r||x.z<=r.z)?(i=x,x=x.nextZ,t--):(i=r,r=r.nextZ,v--),u?u.nextZ=i:e=i,i.prevZ=u,u=i;x=r}u.nextZ=null,y*=2}while(f>1);return e}function j(e,n,x,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-x)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=32767*(n-r)*i)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function R(e){var n=e,x=e;do(n.x<x.x||n.x===x.x&&n.y<x.y)&&(x=n),n=n.next;while(n!==e);return x}function Z(e,n,x,r,i,u,f,t){return(i-f)*(n-t)-(e-f)*(u-t)>=0&&(e-f)*(r-t)-(x-f)*(n-t)>=0&&(x-f)*(u-t)-(i-f)*(r-t)>=0}function S(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!T(e,n)&&(d(e,n)&&d(n,e)&&U(e,n)&&(l(e.prev,e,n.prev)||l(e,n.prev,n))||M(e,n)&&l(e.prev,e,e.next)>0&&l(n.prev,n,n.next)>0)}function l(e,n,x){return(n.y-e.y)*(x.x-n.x)-(n.x-e.x)*(x.y-n.y)}function M(e,n){return e.x===n.x&&e.y===n.y}function C(e,n,x,r){var i=b(l(e,n,x)),u=b(l(e,n,r)),f=b(l(x,r,e)),t=b(l(x,r,n));return i!==u&&f!==t||!(i!==0||!z(e,x,n))||!(u!==0||!z(e,r,n))||!(f!==0||!z(x,e,r))||!(t!==0||!z(x,n,r))}function z(e,n,x){return n.x<=Math.max(e.x,x.x)&&n.x>=Math.min(e.x,x.x)&&n.y<=Math.max(e.y,x.y)&&n.y>=Math.min(e.y,x.y)}function b(e){return e>0?1:e<0?-1:0}function T(e,n){var x=e;do{if(x.i!==e.i&&x.next.i!==e.i&&x.i!==n.i&&x.next.i!==n.i&&C(x,x.next,e,n))return!0;x=x.next}while(x!==e);return!1}function d(e,n){return l(e.prev,e,e.next)<0?l(e,n,e.next)>=0&&l(e,e.prev,n)>=0:l(e,n,e.prev)<0||l(e,e.next,n)<0}function U(e,n){var x=e,r=!1,i=(e.x+n.x)/2,u=(e.y+n.y)/2;do x.y>u!=x.next.y>u&&x.next.y!==x.y&&i<(x.next.x-x.x)*(u-x.y)/(x.next.y-x.y)+x.x&&(r=!r),x=x.next;while(x!==e);return r}function D(e,n){var x=new q(e.i,e.x,e.y),r=new q(n.i,n.x,n.y),i=e.next,u=n.prev;return e.next=n,n.prev=e,x.next=i,i.prev=x,r.next=x,x.prev=r,u.next=r,r.prev=u,r}function E(e,n,x,r){var i=new q(e,n,x);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function w(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function q(e,n,x){this.i=e,this.x=n,this.y=x,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function A(e,n,x,r){for(var i=0,u=n,f=x-r;u<x;u+=r)i+=(e[f]-e[u])*(e[u+1]+e[f+1]),f=u;return i}m.deviation=function(e,n,x,r){var i=n&&n.length,u=i?n[0]*x:e.length,f=Math.abs(A(e,0,u,x));if(i)for(var t=0,v=n.length;t<v;t++){var y=n[t]*x,c=t<v-1?n[t+1]*x:e.length;f-=Math.abs(A(e,y,c,x))}var o=0;for(t=0;t<r.length;t+=3){var h=r[t]*x,a=r[t+1]*x,p=r[t+2]*x;o+=Math.abs((e[h]-e[p])*(e[a+1]-e[h+1])-(e[h]-e[a])*(e[p+1]-e[h+1]))}return f===0&&o===0?0:Math.abs((o-f)/f)},m.flatten=function(e){for(var n=e[0][0].length,x={vertices:[],holes:[],dimensions:n},r=0,i=0;i<e.length;i++){for(var u=0;u<e[i].length;u++)for(var f=0;f<n;f++)x.vertices.push(e[i][u][f]);i>0&&(r+=e[i-1].length,x.holes.push(r))}return x};export{m as e};\n","function o(){return new Float32Array(3)}function u(r){const n=new Float32Array(3);return n[0]=r[0],n[1]=r[1],n[2]=r[2],n}function t(r,n,s){const e=new Float32Array(3);return e[0]=r,e[1]=n,e[2]=s,e}function _(r,n){return new Float32Array(r,n,3)}function c(){return o()}function a(){return t(1,1,1)}function i(){return t(1,0,0)}function f(){return t(0,1,0)}function l(){return t(0,0,1)}const y=c(),w=a(),A=i(),F=f(),N=l();Object.freeze(Object.defineProperty({__proto__:null,ONES:w,UNIT_X:A,UNIT_Y:F,UNIT_Z:N,ZEROS:y,clone:u,create:o,createView:_,fromValues:t,ones:a,unitX:i,unitY:f,unitZ:l,zeros:c},Symbol.toStringTag,{value:\"Module\"}));export{o as n,t as r,u as t};\n"],"names":["E","m","constructor","t","e","s","i","r","a","o","this","instanceId","textureKey","indexStart","indexCount","vertexStart","vertexCount","overlaps","updateBaseOffsets","vertexFrom","indexFrom","clone","write","u","push","serialize","deserialize","readInt32","I","n","length","p","Array","byteSizeHint","Uint32Array","BYTES_PER_ELEMENT","M","_","id","sortKey","records","writeF32","readF32","S","getLogger","C","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","FLOAT","error","v","Uint8Array","Uint16Array","Float32Array","z","Map","set","map","name","count","type","normalized","get","forEach","stride","O","location","G","y","D","has","strides","bufferLayouts","attributes","W","includes","X","charCodeAt","$","width","height","dataType","depth","flipped","hasMipmap","internalFormat","isImmutable","isOpaque","maxAnisotropy","pixelFormat","preMultiplyAlpha","samplingMode","target","uniform","unpackAlignment","wrapMode","K","url","l","transformedX","transformedY","center","centerT","halfWidth","halfHeight","x","blX","blY","trX","trY","xmin","xmax","ymin","ymax","findCollisionDelta","Math","abs","min","log2","extend","max","q","buffer","j","V","w","J","floor","F","Q","join","h","primitiveName","readWithDefault","toString","effects","symbolLayers","symbol","lineSymbol","markerPlacement","markerGraphics","Z","tt","et","packPrecisionFactor","BYTE","setInt8","offset","Int8Array","setUint8","SHORT","setInt16","Int16Array","UNSIGNED_SHORT","setUint16","INT","setInt32","Int32Array","UNSIGNED_INT","setUint32","setFloat32","HALF_FLOAT","st","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","T","d","entityTexel","anchorX","anchorY","directionX","directionY","maxScale","minScale","referenceBounds","bounds","size","offsetX","offsetY","b","A","N","c","_readFile","resolveIncludes","_resolve","_read","Error","exec","path","start","index","slice","shaders","vertexShader","fragmentShader","BACKGROUND","FILL","LINE","SYMBOL","CIRCLE","VISIBLE","NONE","POINT","LINE_CENTER","MAP","VIEWPORT","AUTO","LEFT","CENTER","RIGHT","TOP","BOTTOM","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","UPPERCASE","LOWERCASE","HORIZONTAL","VERTICAL","backgroundLayoutDefinition","visibility","values","default","fillLayoutDefinition","lineLayoutDefinition","BUTT","MITER","symbolLayoutDefinition","minimum","value","circleLayoutDefinition","backgroundPaintDefinition","maximum","fillPaintDefinition","linePaintDefinition","symbolPaintDefinition","rasterPaintDefinition","circlePaintDefinition","_context","_locations","_layout","_buffers","_indexBuffer","_glName","_initialized","glName","context","vertexBuffers","indexBuffer","byteSize","from","reduce","usedMemory","layout","locations","Object","keys","dispose","getBoundVAO","bindVAO","clear","disposeVAOOnly","getOwnPropertyNames","warn","gl","deleteVertexArray","instanceCounter","decrement","VertexArrayObject","initialize","createVertexArray","bindVertexArray","_bindLayout","increment","bind","bindBuffer","ELEMENT_ARRAY_BUFFER","unbind","divisor","Fe","_rctx","_attributes","hash","_vertexBuffer","createVertex","STATIC_DRAW","_vao","_count","draw","drawArrays","TRIANGLE_STRIP","k","brushEffect","prepareState","drawMany","visible","he","nearest","defines","NEAREST","mips","bilinear","LINEAR","bicubic","trilinear","LINEAR_MIPMAP_LINEAR","Zt","state","resolution","pixelRatio","round","rotation","isSourceScaled","Kt","super","arguments","_desc","vsPath","fsPath","_quad","setBlendingEnabled","setColorMask","setStencilWriteMask","setStencilTestEnabled","renderingOptions","painter","requestRender","allowDelayedRender","source","isReady","materialManager","getProgram","compiled","timeline","begin","blendFunction","setBlendFunctionSeparate","ONE","ONE_MINUS_SRC_ALPHA","setStencilFunction","EQUAL","stencilRef","coordScale","computedOpacity","transforms","f","setSamplingProfile","useProgram","setUniformMatrix3fv","displayViewScreenMat3","setUniform1i","setUniform2fv","setUniform1f","end","Be","qt","H","jt","Ue","Ge","Ye","ke","He","We","Xt","$t","Qt","Jt","ei","ti","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","ii","background","bitBlit","debug","overlay","dot","filtering","heatmap","heatmapResolve","highlight","materials","fill","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","bitmap","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","colormap2rgb","compositeband","computechange","contrast","convolution","curvature","extractband","focalstatistics","grayscale","local","mask","ndvi","remap","slope","stretch","vs","scalar","stencil","test","tileInfo","util","oi","split","ai","oe","ae","ri","geometry","li","_color","_program","setFaceCullingEnabled","setStencilOp","KEEP","REPLACE","ALWAYS","getVAO","setUniform4fv","displayMat3","drawElements","TRIANGLES","xe","ni","si","Ze","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","FRONT_AND_BACK","GREATER","rangeX","rangeY","Ke","tileDebugInfoTexture","debugInfo","display","minOrderedLength","minUnorderedLength","triangleCount","memory","bytesUsed","bytesReserved","_destroyed","key","destroy","debugSlot","parent","_stage","children","indexOf","setTransform","tileMat3","toScreenNoRotation","displayViewMat3","destroyed","qe","ye","ci","labelMat2d","viewMat2d","_createTransforms","containsScreenPoint","viewMat3","ut","next","isArray","data","last","je","_head","head","maxAvailableSpace","firstFit","free","ui","fi","re","instance","materialKey","indexEnd","render","techniqueRef","getStencilReference","getAttributePrecisionPackFactors","getMesh","drawCompute","drawGeometry","getComputeVAO","POINTS","getGeometryVAO","di","ft","_length","_minOrderedLength","_materialKeys","Set","fromDisplayEntities","getInstance","addRecord","drawPhase","infos","g","_tail","STRICT_ORDER","_insert","symbologyPlane","STRICT_MARKERS_AND_TEXT","MARKER","TEXT","add","_insertAtHead","_insertAtEnd","_insertAtMiddle","_i","_indexOnly","vertex","operations","copyRecord","srcFrom","dstFrom","mutate","Xe","$e","dt","acquireUint32Array","_array","_pool","array","getUint32View","byteOffset","expand","byteLength","releaseUint32Array","Se","_t","_data","ArrayBuffer","BYTE_LENGTH","_freeList","vi","_pages","_pagesByBuffer","_bytesAllocated","_bytesTotal","console","log","_addPage","mi","Qe","pi","Je","strideInt","bufferType","dirty","memoryStats","_gpu","_cpu","elementSize","intSize","fillPointer","invalidated","bufferSize","invalidatedComputeBuffer","_gpuComputeTriangles","invalidate","_invalidateTriangleBuffer","freeList","ensure","getGPUBuffer","_createComputeBuffer","_createBuffer","getView","insert","copyFrom","upload","setSubData","reshuffle","DYNAMIC_DRAW","createIndex","gi","filter","hi","computeAttributeMap","xi","_bufferPool","_invalidatedGeometry","_invalidatedCompute","_position","find","_computeVAO","_geometryVAO","getDrawArgs","primitive","getDebugVertexInfo","DataView","vertices","_ensure","append","indices","copyRecordFrom","remove","fe","_pos","_buffer","_i32View","_f32View","entities","vertexData","yi","Si","Ti","it","_meshes","_entities","_invalidated","_nextUploadAllowed","tileAge","_metrics","_entityIds","_entityIdsFromBuffer","_attributeEpoch","_encounteredEnd","_objectIdMap","enableDeferredUploads","_displayList","beforeRender","_needsReshuffle","reshuffleManager","schedule","tryReady","_uploadAllowed","ready","labelMetrics","hasData","hasAnimations","needsUpload","getDisplayList","sort","BATCHING","getSortKeys","onMessage","objectIdMap","_onAppendMessage","_onUpdateMessage","_aggregateMemoryStats","attributeEpoch","isPixelBuffer","modify","_removeByIdsFromBuffer","_removeByIds","info","copyPixelBufferedEntitesFrom","_ensureMesh","bufferPool","_removeDuplicatedBufferedEntites","_insertVertexData","_tryInsertBufferedEntity","_insertEntity","metrics","_removeRecordsFromMesh","_remove","delete","splice","entityIds","objectId","displayId","ot","at","Te","bi","rt","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_ctx","_loadWGLResources","setUniform2f","LINE_STRIP","_getTexture","bindTexture","descriptor","document","createElement","getContext","CLAMP_TO_EDGE","clearRect","canvas","textAlign","textBaseline","font","lineWidth","fillStyle","strokeStyle","strokeText","fillText","setData","Ii","_patternMatrix","_programOptions","pattern","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","window","devicePixelRatio","spriteMosaic","getMaterialProgram","getMosaicItemPosition","tl","br","page","getPageSize","setUniform4f","level","getAttributeLocations","getLayoutInfo","Oi","requiredLevel","styleLayerUID","some","layerData","circleIndexCount","circleMaterial","setDataUniforms","prepareForRendering","vao","circleIndexStart","lt","Ei","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","fillVAO","patternMap","L","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","Ai","sdf","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","le","lineIndexStart","Pi","Ci","LN2","Di","nt","Ri","Li","Mi","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","isIconSDF","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","_setStencilState","glyphMosaic","textMaterial","glyphPerPageElementsMap","_glyphTextureSize","Ie","textVAO","vt","mt","pt","_renderGlyphRange","is3D","stencilSymbols","clip","tileDebugInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","zi","Vi","ct","coords","lengths","U","_cache","primitiveType","isMapSpace","fromPath","fromGeometry","fromPolygon","fromMapExtent","fromScreenExtent","toScreen","elementType","getIndexBuffer","getVertexBuffers","be","_clip","stage","_handle","version","_invalidate","fromClipArea","_destroyGL","mesh","_lastWidth","_lastHeight","_createMesh","Ni","clips","_updateClippingInfo","renderChildren","setPipelineState","_renderPasses","prepareRenderPasses","registerRenderPass","brushes","_clippingInfos","LABEL","LABEL_ALPHA","DEBUG","HIGHLIGHT","items","B","prev","steiner","P","prevZ","nextZ","R","deviation","flatten","holes","dimensions"],"sourceRoot":""}