"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[5209],{55209:function(t,e,n){n.d(e,{T:function(){return cr},a:function(){return Fr},c:function(){return kr},h:function(){return we},l:function(){return Re},w:function(){return lr},y:function(){return Br}});var s=n(44444),r=n(6255);let o=class extends s.bw{constructor(){super(...arguments),this.raster=void 0}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],o.prototype,"raster",void 0),o=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.BaseFunctionArguments")],o);const i=o;var a;let u=a=class extends i{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new a({raster:this.raster,raster2:this.raster2,operation:this.operation})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],u.prototype,"operation",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],u.prototype,"raster2",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],u.prototype,"rasters",null),u=a=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],u);const l=u,c=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let p=class extends s.bw{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const t=[];for(let e=0;e<s.length;e++){const{parameters:n}=s[e],r=n.rasters||n.raster&&[n.raster];r?.length&&t.push(...r)}s=t}for(let a=e.length-1;a>=0;a--)e[a].isNoopProcess&&e.splice(a,1);let r=!1;for(let a=0;a<e.length;a++){const t=e[a];t.id=e.length-a-1;const{rasters:n}=t.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>c.has(t.toLowerCase()))),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,n=-1){this.id=n+1;const s=this._getRasterValues();let r=!0;for(let o=0;o<s.length;o++){const n=s[o];if(null!=n&&this._isRasterFunctionValue(n)){const s=n.bind(t,e,this.id+o);if(!s.success)return this._bindingResult=s,s;r=r&&s.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const n=t.filter((t=>"ExtractBand"===t.functionName));return n.length&&n.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let n=0;n<t;n++)e.push(n)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some(((t,e)=>t!==e)),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:n}=this.functionArguments;if(n&&Array.isArray(n)&&n.length)n.forEach((e=>{if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}}));else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(0===e.length)return n;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&s.includes(t)?n[s.indexOf(t)]:"number"!=typeof t?n[0]:void 0)),o=r.find((t=>t))??n[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],n=[]){for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,n);else{const t=r,s=this._getPrimaryRasterId(t);if(null==s)continue;n.includes(s)||(this.mainPrimaryRasterId===s?(e.unshift(t),n.unshift(s)):(e.push(t),n.push(s)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(null==t||"$$"===t){const t=n[0];return null==t?null:t.clone()}if("string"==typeof t){const s=e.primaryRasterIds.indexOf(t);return-1===s?null:n[s]}if("number"==typeof t){const e=n[0];if(null==e)return null;const{width:r,height:o,pixelType:i}=e,a=new Float32Array(r*o);a.fill(t);const u=this.sourceRasterInfos[0].bandCount,l=new Array(u).fill(a);return new s.iH({width:r,height:o,pixelType:i,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,o=n.BandProperties;o&&o.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:"string"==typeof n.BAND_COUNT?String(e):e})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],p.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],p.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}}),(0,s.gb)((t=>t?.toLowerCase()))],p.prototype,"outputPixelType",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],p.prototype,"mainPrimaryRasterId",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"sourceRasters",void 0),(0,s.bt)([(0,s.bu)({type:[s.pi],json:{write:!0}})],p.prototype,"sourceRasterInfos",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],p.prototype,"rasterInfo",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],p.prototype,"readingBufferSize",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],p.prototype,"id",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"isNoopProcess",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"supportsGPU",null),(0,s.bt)([(0,s.bu)()],p.prototype,"rawInputBandIds",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"rawSourceRasterInfos",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"isInputBandIdsSwizzled",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"swizzledBandSelection",void 0),(0,s.bt)([(0,s.bu)()],p.prototype,"isBranch",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],p.prototype,"flatWebGLFunctionChain",null),(0,s.bt)([(0,s.bu)()],p.prototype,"_bindingResult",void 0),p=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.BaseRasterFunction")],p);const h=p,m={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},f={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},d={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},g={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},y={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},b={setNull:50,conditional:78},x={...f,...d,...g,...y,...b},w=new Map([[g.acos,{domain:[0,Math.PI],isInteger:!1}],[g.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[g.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[g.cos,{domain:[-1,1],isInteger:!1}],[g.sin,{domain:[-1,1],isInteger:!1}],[d.booleanAnd,{domain:[0,1],isInteger:!0}],[d.booleanNot,{domain:[0,1],isInteger:!0}],[d.booleanOr,{domain:[0,1],isInteger:!0}],[d.booleanXOr,{domain:[0,1],isInteger:!0}],[d.equalTo,{domain:[0,1],isInteger:!0}],[d.notEqual,{domain:[0,1],isInteger:!0}],[d.greaterThan,{domain:[0,1],isInteger:!0}],[d.greaterThanEqual,{domain:[0,1],isInteger:!0}],[d.lessThan,{domain:[0,1],isInteger:!0}],[d.lessThanEqual,{domain:[0,1],isInteger:!0}],[d.isNull,{domain:[0,1],isInteger:!0}]]);function v(t){return w.get(t)}const A=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function T(t,e=!1){const n=t.map((t=>t.mask)),s=n.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===s.length||e&&s.length!==n.length)return new Uint8Array(r).fill(255);const o=s[0],i=new Uint8Array(o);if(1===s.length)return i;if(!e){for(let t=1;t<s.length;t++){const e=s[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let a=1;a<s.length;a++){const t=s[a];for(let e=0;e<i.length;e++)0===i[e]&&(i[e]=t[e]?255:0)}return i}function P(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]+o[s]);return a}function R(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand("f32",o);return i.set(r),i}function F(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand(n,o);for(let s=0;s<o;s++)e&&!e[s]||(i[s]=r[s]*r[s]);return i}function N(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]-o[s]);return a}function C(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]*o[s]);return a}function k(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand(n,o);for(let s=0;s<o;s++)e&&!e[s]||(i[s]=Math.sign(r[s])*Math.floor(Math.abs(r[s])));return i}function S(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]/o[s]);return a}function I(t,e,n){return S(t,e,"f32")}function M(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=Math.floor(r[s]/o[s]));return a}function _(t,e,n,r){const o=t[0],i=o.length,a=s.iH.createEmptyBand(n,i);if(r===g.atanh){for(let t=0;t<i;t++)if(e[t]){const n=o[t];Math.abs(n)>=1?e[t]=0:a[t]=Math.atanh(n)}return a}const u=r===g.asin?Math.asin:Math.acos;for(let s=0;s<i;s++)if(e[s]){const t=o[s];Math.abs(t)>1?e[s]=0:a[s]=u(t)}return a}function j(t,e,n,r){const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r(o[s]));return a}function B(t,e,n,r){const[o,i]=t,a=o.length,u=s.iH.createEmptyBand(n,a);for(let s=0;s<a;s++)e&&!e[s]||(u[s]=r(o[s],i[s]));return u}function G(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]&o[s]);return a}function O(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]<<o[s]);return a}function E(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand(n,o);for(let s=0;s<o;s++)e&&!e[s]||(i[s]=~r[s]);return i}function z(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]|o[s]);return a}function D(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]>>o[s]);return a}function H(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]^o[s]);return a}function U(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]&&o[s]?1:0);return a}function V(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand(n,o);for(let s=0;s<o;s++)e&&!e[s]||(i[s]=r[s]?0:1);return i}function L(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]||o[s]?1:0);return a}function W(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=(r[s]?1:0)^(o[s]?1:0));return a}function q(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]===o[s]?1:0);return a}function J(t,e,n,r){const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i),u=r===Math.E;for(let s=0;s<i;s++)e&&!e[s]||(a[s]=u?Math.exp(o[s]):r**o[s]);return a}function $(t,e,n){return J(t,e,n,10)}function Y(t,e,n){return J(t,e,n,2)}function K(t,e,n){return J(t,e,n,Math.E)}function X(t,e,n,r){const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(o[s]<=0?e[s]=0:a[s]=r(o[s]));return a}function Z(t,e,n){return X(t,e,n,Math.log10)}function Q(t,e,n){return X(t,e,n,Math.log2)}function tt(t,e,n){return X(t,e,n,Math.log)}function et(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]>o[s]?1:0);return a}function nt(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]>=o[s]?1:0);return a}function st(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]<o[s]?1:0);return a}function rt(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]<=o[s]?1:0);return a}function ot(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand(n,o);if(!e)return i;for(let s=0;s<o;s++)i[s]=e[s]?0:1;return i}function it(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]%o[s]);return a}function at(t,e,n){const[r]=t,o=r.length,i=s.iH.createEmptyBand(n,o);for(let s=0;s<o;s++)e&&!e[s]||(i[s]=-r[s]);return i}function ut(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]===o[s]?0:1);return a}function lt(t,e,n){const[r,o]=t,i=r.length,a=s.iH.createEmptyBand(n,i),u=new Uint8Array(i);for(let s=0;s<i;s++)null!=e&&!e[s]||0!==r[s]||(a[s]=o[s],u[s]=255);return{band:a,mask:u}}function ct(t,e,n){const[r,o,i]=t,a=r.length,u=s.iH.createEmptyBand(n,a);for(let s=0;s<a;s++)e&&!e[s]||(u[s]=r[s]?o[s]:i[s]);return u}function pt(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=o[s];for(let n=1;n<r;n++){const r=t[n][s];e<r&&(e=r)}a[s]=e}return a}function ht(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=o[s];for(let n=1;n<r;n++){const r=t[n][s];e>r&&(e=r)}a[s]=e}return a}function mt(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=o[s],n=e;for(let o=1;o<r;o++){const r=t[o][s];n<r?n=r:e>r&&(e=r)}a[s]=n-e}return a}function ft(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)if(!e||e[s]){let e=0;for(let n=0;n<r;n++)e+=t[n][s];a[s]=e/r}return a}function dt(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)if(!e||e[s])for(let e=0;e<r;e++){const n=t[e];a[s]+=n[s]}return a}function gt(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)if(!e||e[s]){const e=new Float32Array(r);let n=0;for(let i=0;i<r;i++){const r=t[i];n+=r[s],e[i]=r[s]}n/=r;let o=0;for(let t=0;t<r;t++)o+=(e[t]-n)**2;a[s]=Math.sqrt(o/r)}return a}function yt(t,e,n){const r=t.length;if(r<2)return t[0];const o=Math.floor(r/2),[i]=t,a=i.length,u=s.iH.createEmptyBand(n,a),l=new Float32Array(r),c=r%2==1;for(let s=0;s<a;s++)if(!e||e[s]){for(let e=0;e<r;e++)l[e]=t[e][s];l.sort(),u[s]=c?l[o]:(l[o]+l[o-1])/2}return u}function bt(t,e,n){const[r,o]=t;if(null==o)return r;const i=r.length,a=s.iH.createEmptyBand(n,i);for(let s=0;s<i;s++)e&&!e[s]||(a[s]=r[s]<o[s]?r[s]:o[s]);return a}function xt(t,e,n){const r=t.length;if(r<=2)return bt(t,e,n);const o=t[0].length,i=s.iH.createEmptyBand(n,o),a=new Map;for(let s=0;s<o;s++)if(!e||e[s]){a.clear();for(let i=0;i<r;i++){const e=t[i][s];a.set(e,a.has(e)?a.get(e)+1:1)}let e=0,n=0;const o=[];for(const t of a.keys())e=a.get(t),e>n?(n=e,o.length=0,o.push(t)):e===n&&o.push(t);o.length>1&&o.sort(((t,e)=>t-e)),i[s]=o[0]}return i}function wt(t,e,n){const r=t.length;if(r<=2)return bt(t,e,n);const o=t[0].length,i=s.iH.createEmptyBand(n,o),a=new Map;for(let s=0;s<o;s++)if(!e||e[s]){a.clear();for(let i=0;i<r;i++){const e=t[i][s];a.set(e,a.has(e)?a.get(e)+1:1)}let e=0,n=t.length;const o=[];for(const t of a.keys())e=a.get(t),e<n?(n=e,o.length=0,o.push(t)):e===n&&o.push(t);o.length>1&&o.sort(((t,e)=>t-e)),i[s]=o[0]}return i}function vt(t,e,n){const r=t.length;if(r<2)return t[0];const[o]=t,i=o.length,a=s.iH.createEmptyBand(n,i),u=new Set;for(let s=0;s<i;s++)if(!e||e[s]){let e;u.clear();for(let n=0;n<r;n++)e=t[n][s],u.add(e);a[s]=u.size}return a}const At=new Map,Tt=new Map,Pt=new Map,Rt=new Map;function Ft(){At.size||(At.set(4,Math.sqrt),At.set(6,Math.acos),At.set(7,Math.asin),At.set(8,Math.atan),At.set(9,Math.atanh),At.set(10,Math.abs),At.set(21,Math.cos),At.set(22,Math.cosh),At.set(48,Math.floor),At.set(49,Math.ceil),At.set(51,Math.sin),At.set(52,Math.sinh),At.set(56,Math.tan),At.set(57,Math.tanh),At.set(59,Math.acosh),At.set(60,Math.asinh),At.set(65,Math.floor),Tt.set(5,Math.pow),Tt.set(61,Math.atan2),Pt.set(1,P),Pt.set(2,N),Pt.set(3,C),Pt.set(11,G),Pt.set(12,O),Pt.set(13,E),Pt.set(14,z),Pt.set(15,D),Pt.set(16,H),Pt.set(17,U),Pt.set(18,V),Pt.set(19,L),Pt.set(20,W),Pt.set(23,S),Pt.set(24,q),Pt.set(25,K),Pt.set(26,$),Pt.set(27,Y),Pt.set(28,et),Pt.set(29,nt),Pt.set(30,k),Pt.set(31,ot),Pt.set(32,R),Pt.set(33,st),Pt.set(34,rt),Pt.set(35,tt),Pt.set(36,Z),Pt.set(37,Q),Pt.set(44,it),Pt.set(45,at),Pt.set(46,ut),Pt.set(53,F),Pt.set(64,I),Pt.set(65,M),Pt.set(76,ct),Pt.set(78,ct),Rt.set(38,xt),Rt.set(39,pt),Rt.set(40,ft),Rt.set(41,yt),Rt.set(42,ht),Rt.set(43,wt),Rt.set(47,mt),Rt.set(54,gt),Rt.set(55,dt),Rt.set(58,vt),Rt.set(66,xt),Rt.set(67,pt),Rt.set(68,ft),Rt.set(69,yt),Rt.set(70,ht),Rt.set(71,wt),Rt.set(72,mt),Rt.set(73,gt),Rt.set(74,dt),Rt.set(75,vt))}function Nt(t,e,n={}){Ft();let r=T(t,e>=66&&e<=75);const{outputPixelType:o="f32"}=n,i=!Rt.has(e)||n.processAsMultiband,a=i?t[0].pixels.length:1,u=[];for(let c=0;c<a;c++){const n=Rt.has(e)&&!i?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[c]));let a,l=!0;if(e===b.setNull){const t=lt(n,r,o);a=t.band,r=t.mask,l=!1}else Pt.has(e)?a=Pt.get(e)(n,r,"f64"):At.has(e)?a=e===g.asin||e===g.acos||e===g.atanh?_(n,r,"f64",e):j(n,r,"f64",At.get(e)):Tt.has(e)?a=B(n,r,"f64",Tt.get(e)):Rt.has(e)?a=Rt.get(e)(n,r,"f64"):(a=n[0],l=!1);if(l&&e!==d.isNull&&!w.has(e)){const t=s.iH.createEmptyBand(o,a.length);r||(r=new Uint8Array(a.length).fill(255)),(0,s.sC)(a,r),(0,s.sD)(a,r,o,t),a=t}u.push(a)}const l=t[0];return new s.iH({width:l.width,height:l.height,pixelType:o,mask:e===d.isNull?null:r,pixels:u})}function Ct(t,e,n){return Nt(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:n})}let kt=class extends h{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:Ct(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],n=this.outputPixelType??"f32";let[r,o]=(0,s.sE)(n);const i=(0,s.sF)(n);return i&&(r-=1e-4,o+=1e-4),{imageCount:2,operationName:e,domainRange:[r,o],isOutputRounded:i}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],kt.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:l,json:{write:!0,name:"rasterFunctionArguments"}})],kt.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],kt.prototype,"rasterArgumentNames",void 0),kt=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ArithmeticFunction")],kt);const St=kt;var It;let Mt=It=class extends i{clone(){return new It({raster:this.raster})}};Mt=It=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Mt);const _t=Mt;let jt=class extends h{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:n,primaryPixelSizes:r}=t,o=r?.[0],i=o??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return(0,s.sG)(e,{resolution:i})}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:_t,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],jt.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],jt.prototype,"isGCS",void 0),jt=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.AspectFunction")],jt);const Bt=jt,Gt=new Set(["+","-","*","/","(",")"]);function Ot(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const n=t.split(""),s=[],r=[];let o="";for(let i=0;i<n.length;i++){const t=n[i];Gt.has(t)?(o.length&&r.push(Et(o,e)),s.push(t),o=""):o=o.concat(t)}return o.length&&r.push(Et(o,e)),{ops:s,nums:r}}function Et(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function zt(t,e,n,s){if("number"==typeof n&&"number"==typeof s)return n+s;let r,o,i;"number"==typeof n?(i=s,r=i.length,o=new Float32Array(r),o.fill(n)):(r=n.length,o=n,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Dt(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let e=0;e<t.length;e++)if("("===t[e])n=e;else if(")"===t[e]){s=e;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function Ht(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,n=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){n=i;break}const s=0===n?t:t.slice(e+1,n);let r=-1;for(let i=0;i<s.length;i++)if("*"===s[i]||"/"===s[i]){r=i;break}if(r>-1)n>0&&(r+=e+1);else{for(let t=0;t<s.length;t++)if("+"===s[t]||"-"===s[t]){r=t;break}n>0&&(r+=e+1)}let o=0;for(let i=0;i<r;i++)"("===t[i]&&o++;return{opIndex:r,numIndex:r-o}}function Ut(t,e,n){let s,{ops:r,nums:o}=Ot(n,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const n=new Float32Array(e[0].length);return"number"==typeof t?n.fill(t):n.set(t),[n]}for(;r.length>0;){const{numIndex:e,opIndex:n}=Ht(r);if(s=zt(t,r[n],o[e],o[e+1]),1===r.length)break;r=Dt(r,n),o.splice(e,2,s)}return[s]}const Vt=new s.fh({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Lt(t,e){if(!(0,s.sH)(t))return t;const{equation:n,method:r}=e,o=e.bandIndexes.map((t=>t-1)),{pixels:i,mask:a}=t;let u;switch(r){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":u=Jt(a,i[o[0]],i[o[1]]);break;case"ndwi":u=Jt(a,i[o[1]],i[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":u=$t(a,i[o[0]],i[o[1]]);break;case"ci-g":case"ci-re":u=Yt(a,i[o[0]],i[o[1]]);break;case"savi":u=Kt(a,i[o[0]],i[o[1]],o[2]+1);break;case"tsavi":u=Xt(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":u=Zt(a,i[o[0]],i[o[1]]);break;case"gemi":u=Qt(a,i[o[0]],i[o[1]]);break;case"pvi":u=te(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1);break;case"gvitm":u=ee(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"sultan":u=ne(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]]]);break;case"vari":u=se(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"mtvi2":u=re(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"rtvi-core":u=oe(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"evi":u=ie(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"wndwi":u=ae(a,[i[o[0]],i[o[1]],i[o[2]]],o[3]?o[3]+1:.5);break;case"bai":u=ue(a,i[o[0]],i[o[1]]);break;case"custom":u=Ut(a,i,n);break;default:return t}const{outputPixelType:l="f32"}=e,c=null!=l&&(0,s.sF)(l);let p;a?(p=new Uint8Array(t.width*t.height),p.set(a)):c&&(p=new Uint8Array(t.width*t.height).fill(255)),c&&(u=u.map((t=>{const e=s.iH.createEmptyBand(l,t.length);return(0,s.sD)(t,p,l,e),e})));const h=new s.iH({width:t.width,height:t.height,pixelType:l,pixels:u,mask:p});return h.updateStatistics(),h}function Wt(t,e,n,r){const{mask:o,pixels:i,width:a,height:u}=t,l=i[n],c=i[e],p=c.length,h=r?new Uint8Array(p):new Float32Array(p),m=r?100:1,f=r?100.5:0;for(let s=0;s<p;s++)if(null==o||o[s]){const t=l[s],e=c[s],n=t+e;n&&(h[s]=(t-e)/n*m+f)}const d=new s.iH({width:a,height:u,mask:o,pixelType:r?"u8":"f32",pixels:[h]});return d.updateStatistics(),d}function qt(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Jt(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o],i=t+s;i&&(r[o]=(t-s)/i)}return[r]}function $t(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s)}return[r]}function Yt(t,e,n){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s-1)}return[r]}function Kt(t,e,n,s){const r=n.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=n[i],r=e[i],a=r+t+s;a&&(o[i]=(r-t)/a*(1+s))}return[o]}function Xt(t,e,n,s,r,o){const i=n.length,a=new Float32Array(i),u=-r*s+o*(1+s*s);for(let l=0;l<i;l++)if(null==t||t[l]){const t=n[l],o=e[l],i=r*o+t+u;i&&(a[l]=s*(o-s*t-r)/i)}return[a]}function Zt(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o],i=2*s+1;r[o]=.5*(i-Math.sqrt(i*i-8*(s-t)))}return[r]}function Qt(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o];if(1!==t&&s+t+.5!==0){const e=(2*(s*s-t*t)+1.5*s+.5*t)/(s+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}function te(t,e,n,s,r){const o=n.length,i=new Float32Array(o),a=1/Math.sqrt(1+s*s);for(let u=0;u<o;u++)if(null==t||t[u]){const t=n[u],o=e[u];i[u]=(o-s*t-r)*a}return[i]}function ee(t,e){const[n,s,r,o,i,a]=e,u=n.length,l=new Float32Array(u);for(let c=0;c<u;c++)(null==t||t[c])&&(l[c]=-.2848*n[c]-.2435*s[c]-.5436*r[c]+.7243*o[c]+.084*i[c]-.18*a[c]);return[l]}function ne(t,e){const[n,s,r,o,i]=e,a=n.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let p=0;p<a;p++)(null==t||t[p])&&(u[p]=i[p]?o[p]/i[p]*100:0,l[p]=n[p]?o[p]/n[p]*100:0,c[p]=r[p]?s[p]/r[p]*(o[p]/r[p])*100:0);return[u,l,c]}function se(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=e+t-r[a];o&&(i[a]=(e-t)/o)}return[i]}function re(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a],u=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(e))-.5);if(u){const n=1.5*(1.2*(t-o)-2.5*(e-o));i[a]=n/u}}return[i]}function oe(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a];i[a]=100*(t-e)-10*(t-o)}return[i]}function ie(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=t+6*e-7.5*r[a]+1;o&&(i[a]=2.5*(t-e)/o)}return[i]}function ae(t,e,n=.5){const[s,r,o]=e,i=r.length,a=new Float32Array(i);for(let u=0;u<i;u++)if(null==t||t[u])for(u=0;u<i;u++){const t=s[u],e=r[u],i=o[u],l=t+n*e+(1-n)*i;l&&(a[u]=(t-n*e-(1-n)*i)/l)}return[a]}function ue(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o])for(o=0;o<s;o++){const t=(.1-e[o])**2+(.06-n[o])**2;t&&(r[o]=1/t)}return[r]}var le;let ce=le=class extends i{constructor(){super(...arguments),this.method="custom"}clone(){return new le({method:this.method,bandIndexes:this.bandIndexes,raster:(0,s.T)(this.raster)})}};(0,s.bt)([(0,s.bu)({json:{type:String,write:!0}})],ce.prototype,"bandIndexes",void 0),(0,s.bt)([(0,s.e3)(Vt)],ce.prototype,"method",void 0),ce=le=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ce);const pe=ce,he=new Set(["vari","mtvi2","rtvi-core","evi"]);let me=class extends h{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map((t=>parseFloat(t)));return Lt(e,{method:n,bandIndexes:r,equation:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,r;const o=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=qt([e[0],e[1],0]),r="ndxi";break;case"ndwi":n=qt([e[1],e[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=qt([e[0],e[1],0]),r="sr";break;case"ci-g":case"ci-re":n=qt([e[0],e[1],0]),r="ci";break;case"savi":n=qt([e[0],e[1],0]),r="savi",o[0]=t[2]+1;break;case"tsavi":n=qt([e[0],e[1],0]),r="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":n=qt([e[0],e[1],0]),r="msavi";break;case"gemi":n=qt([e[0],e[1],0]),r="gemi";break;case"pvi":n=qt([e[0],e[1],0]),r="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":n=qt([e[0],e[1],e[2]]),r="vari";break;case"mtvi2":n=qt([e[0],e[1],e[2]]),r="mtvi";break;case"rtvi-core":n=qt([e[0],e[1],e[2]]),r="rtvicore";break;case"evi":n=qt([e[0],e[1],e[2]]),r="evi";break;case"wndwi":n=qt([e[0],e[1],0]),r="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":n=qt([e[1],e[0],0]),r="bai";break;default:n=qt([0,1,2]),r="custom"}return{bandIndexMat3:n,indexType:r,adjustments:o,isOutputRounded:(0,s.sF)(this.outputPixelType)}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),n=t.length,s=e.map((t=>t>=n?n-1:t)),r=he.has(this.functionArguments.method)?3:2,o=s.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],me.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:pe,json:{write:!0,name:"rasterFunctionArguments"}})],me.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],me.prototype,"rasterArgumentNames",void 0),me=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],me);const fe=me;var de;const ge=new s.fh({1:"outside",2:"inside"},{useNumericKeys:!0});let ye=de=class extends i{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new de({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};(0,s.bt)([(0,s.bu)({types:s.lY,json:{read:s.f1,write:!0}})],ye.prototype,"clippingGeometry",void 0),(0,s.bt)([(0,s.bu)({json:{read:ge.read,write:ge.write}})],ye.prototype,"clippingType",void 0),ye=de=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ClipFunctionArguments")],ye);const be=ye;function xe(t,e){if(t.spatialReference.equals(e))return t;const n=(0,s.cm)(t.spatialReference),r=(0,s.cm)(e);if(n===r)return t;const o=n/r;return{x:t.x*o,y:t.y*o}}async function we(t,e,r){if("extent"===r.type)return Ae(t,e,r);const{width:o,height:i}=t,a=new Uint8Array(o*i),{contains:u,intersects:l}=await Promise.all([n.e(6239),n.e(2518)]).then(n.bind(n,2518));return l(e,r)?"polyline"===r.type?Te(t,e,r):u(r,e)?t:ve(t,e,r):new s.iH({pixelType:t.pixelType,width:o,height:i,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function ve(t,e,n){if(!t)return t;const{width:r,height:o}=t,i=e.width/r,a=e.height/o,{xmin:u,ymax:l}=e;let c;if("extent"===n.type){const t=(n.xmin-u)/i,e=(n.xmax-u)/i,s=(l-n.ymax)/a,r=(l-n.ymin)/a;c=[[[t,s],[t,r],[e,r],[e,s],[t,s]]]}else c=n.rings.map((t=>t.map((([t,e])=>[(t-u)/i,(l-e)/a]))));const p=document.createElement("canvas");p.width=r,p.height=o;const h=p.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach((t=>{h.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)h.lineTo(t[e][0],t[e][1]);h.closePath()})),h.fill();const m=h.getImageData(0,0,r,o).data,f=t.mask,d=r*o,g=new Uint8Array(d);for(let s=0;s<d;s++)f&&!f[s]||(g[s]=m[4*s+3]>127?255:0);return new s.iH({pixelType:t.pixelType,width:r,height:o,mask:g,maskIsAlpha:!1,pixels:[...t.pixels]})}function Ae(t,e,n){const{width:r,height:o}=t,i=new Uint8Array(r*o),a=e.width/r,u=e.height/o;if(n.width/a<.5||n.height/u<.5)return new s.iH({pixelType:t.pixelType,width:r,height:o,mask:i,pixels:[...t.pixels]});const{xmin:l,xmax:c,ymin:p,ymax:h}=e,{xmin:m,xmax:f,ymin:d,ymax:g}=n,y=Math.max(l,m),b=Math.min(c,f),x=Math.max(p,d),w=Math.min(h,g),v=.5*a,A=.5*u;if(b-y<v||w-x<A||b<l+v||y>c-v||x>h-A||w<p+A)return new s.iH({pixelType:t.pixelType,width:r,height:o,mask:i,pixels:[...t.pixels]});const T=Math.max(0,(y-l)/a),P=Math.min(r,Math.max(0,(b-l)/a)),R=Math.max(0,(h-w)/u),F=Math.min(o,Math.max(0,(h-x)/u)),N=Math.round(T),C=Math.round(P)-1,k=Math.round(R),S=Math.round(F)-1;if(N===C&&T%1>.5&&P%1<.5||k===S&&R%1>.5&&F%1<.5)return new s.iH({pixelType:t.pixelType,width:r,height:o,mask:i,pixels:[...t.pixels]});if(0===N&&0===k&&C===r&&S===o)return t;const I=t.mask;for(let s=k;s<=S;s++)for(let t=N;t<=C;t++){const e=s*r+t;i[e]=I?I[e]:255}return new s.iH({pixelType:t.pixelType,width:r,height:o,mask:i,pixels:[...t.pixels]})}function Te(t,e,n){const{width:r,height:o}=t,i=new Uint8Array(r*o),a=e.width/r,u=e.height/o,{xmin:l,ymax:c}=e,{paths:p}=n,h=t.mask;for(let s=0;s<p.length;s++){const t=p[s];for(let e=0;e<t.length-1;e++){const[n,s]=t[e],[p,m]=t[e+1];let f=Math.floor((c-s)/u),d=Math.floor((c-m)/u);if(d<f){const t=f;f=d,d=t}f=Math.max(0,f),d=Math.min(o-1,d);const g=(p-n)/(m-s);for(let t=f;t<=d;t++){const e=t===f?Math.max(s,m):(o+1-t)*u,c=t===d?Math.min(s,m):e-u;let y=Math.floor(m===s?(n-l)/a:(g*(e-s)+n-l)/a),b=Math.floor(m===s?(p-l)/a:(g*(c-s)+n-l)/a);if(b<y){const t=y;y=b,b=t}const x=t*r;y=Math.max(0,y),b=Math.min(r-1,b);for(let t=x+y;t<=x+b;t++)i[t]=h?h[t]:255}}}return new s.iH({pixelType:t.pixelType,width:r,height:o,mask:i,pixels:[...t.pixels]})}function Pe(t,e){const{extent:n}=Re(t,e,new s.D({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:r}=t.extent;if(n.xmax=Math.min(n.xmax,r.xmax),n.ymax=Math.min(n.ymax,r.ymax),n.xmin<n.xmax&&n.ymin<n.ymax){const{x:e,y:s}=t.pixelSize,r=Math.round(n.width/e),o=Math.round(n.height/s);t.extent=n,t.width=r,t.height=o}}function Re(t,e,n,r=!0){const{spatialReference:o}=t,{x:i,y:a}=xe(n,o);let u,l,c;const p="extent"===e.type?e:e.extent;let{xmin:h,xmax:m,ymax:f,ymin:d}=p;const{xmin:g,ymax:y}=t.extent;return r?(h=g+(h>g?i*Math.round((h-g)/i):0),f=y-(f<y?a*Math.round((y-f)/a):0),m=g+(m>g?i*Math.round((m-g)/i):0),d=y-(d<y?a*Math.round((y-d)/a):0),u=new s.bn({xmin:h,ymax:f,xmax:m,ymin:d,spatialReference:o}),l=Math.round(u.width/i),c=Math.round(u.height/a)):(l=Math.floor((m-h)/i+.8),c=Math.floor((f-d)/a+.8),h=g+(h>g?i*Math.floor((h-g)/i+.1):0),f=y-(f<y?a*Math.floor((y-f)/a+.1):0),m=h+l*i,d=f-c*a,u=new s.bn({xmin:h,ymax:f,xmax:m,ymin:d,spatialReference:o})),{extent:u,width:l,height:c}}let Fe=class extends h{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:n,clippingType:s}=e;if(!n)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if("outside"===s)try{const{spatialReference:e}=t,s="extent"===n.type?(0,r.K)(n,e):(0,r.D)(n,e).extent;s&&Pe(t,s)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Fe.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:be,json:{write:!0,name:"rasterFunctionArguments"}})],Fe.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Fe.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)()],Fe.prototype,"isNoopProcess",void 0),Fe=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ClipFunction")],Fe);const Ne=Fe;var Ce;let ke=Ce=class extends i{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return s.sK.includes(e)?e:null}readColorRamp(t){return(0,s.sL)(t)}readColorRampName(t,e){if(!t)return null;const n=s.sJ.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return n?s.sJ.fromJSON(n):null}clone(){return new Ce({colormap:(0,s.T)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,s.bt)([(0,s.bu)({type:[[Number]],json:{write:!0}})],ke.prototype,"colormap",void 0),(0,s.bt)([(0,s.bu)({type:String,json:{write:!0}})],ke.prototype,"colormapName",void 0),(0,s.bt)([(0,s.gb)("colormapName")],ke.prototype,"castColormapName",null),(0,s.bt)([(0,s.bu)({types:s.sI,json:{write:!0}})],ke.prototype,"colorRamp",void 0),(0,s.bt)([(0,s.eg)("colorRamp")],ke.prototype,"readColorRamp",null),(0,s.bt)([(0,s.bu)({type:s.sJ.apiValues,json:{type:s.sJ.jsonValues,write:s.sJ.write}})],ke.prototype,"colorRampName",void 0),(0,s.bt)([(0,s.eg)("colorRampName")],ke.prototype,"readColorRampName",null),ke=Ce=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],ke);const Se=ke,Ie=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Me=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function _e(t,e){const n=[],r=[];for(let s=0;s<t.length-1;s++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[s].slice(1),toColor:t[s+1].slice(1)}),r.push(t[s+1][0]-t[s][0]);const o=t[t.length-1][0];return(0,s.sM)({type:"multipart",colorRamps:n},{numColors:o,weights:e=e??r})}function je(){return _e([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function Be(){const t=_e([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function Ge(){return(0,s.sM)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Oe(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}function Ee(){return _e([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function ze(t){let e;switch(t){case"elevation":e=je();break;case"gray":e=Ge();break;case"hillshade":e=Ee();break;case"ndvi":e=Ie;break;case"ndvi2":e=Be();break;case"ndvi3":e=Me;break;case"random":e=Oe()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let De=class extends h{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:r,colorRampName:o}=this.functionArguments;if(!e?.length)if(r)this.colorRamp=r,e=(0,s.sN)(r,{interpolateAlpha:!0});else if(o){const t=(0,s.sO)(o);t&&(e=(0,s.sN)(t),this.colorRamp=(0,s.sL)(t))}else n&&(e=ze(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=e,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||(0,s.sF)(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],De.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Se,json:{write:!0,name:"rasterFunctionArguments"}})],De.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],De.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)()],De.prototype,"isNoopProcess",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],De.prototype,"indexedColormap",void 0),(0,s.bt)([(0,s.bu)()],De.prototype,"colorRamp",void 0),De=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ColormapFunction")],De);const He=De;var Ue;let Ve=Ue=class extends i{clone(){return new Ue({raster:this.raster})}};Ve=Ue=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],Ve);const Le=Ve;let We=class extends h{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const n=[...t.colormap].sort(((t,e)=>t[0]-e[0])),{indexedColormap:r,offset:o}=(0,s.sP)({colormap:n});return r?(this.lookup={indexedColormap:r,offset:o},{success:!0,supportsGPU:(0,s.sQ)(r)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const n=e.pixels[0],r=e.mask??new Uint8Array(n.length).fill(255),o=new Uint8Array(n.length),i=new Uint8Array(n.length),a=new Uint8Array(n.length),{indexedColormap:u,offset:l}=this.lookup,c=u.length;for(let s=0;s<n.length;s++)if(r[s]){let t=4*(n[s]-l);t<0||t>c-4?r[s]=0:(o[s]=u[t++],i[s]=u[t++],a[s]=u[t++])}return e.pixels=[o,i,a],e.statistics=[new s.sR(0,255),new s.sR(0,255),new s.sR(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],We.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Le,json:{write:!0,name:"rasterFunctionArguments"}})],We.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],We.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],We.prototype,"lookup",void 0),We=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],We);const qe=We;var Je;let $e=Je=class extends i{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Je({rasters:(0,s.T)(this.rasters)})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],$e.prototype,"rasters",void 0),(0,s.bt)([(0,s.eO)("rasters")],$e.prototype,"writeRasters",null),$e=Je=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],$e);const Ye=$e;let Ke=class extends h{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),n.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),n.histograms=e}n.multidimensionalInfo&&n.multidimensionalInfo.variables.forEach((e=>{const n=t.map((t=>t.multidimensionalInfo?.variables.find((({name:t})=>t===e.name)))),s=n.map((t=>t?.statistics?.length?t.statistics:null)),r=n.map((t=>t?.histograms?.length?t.histograms:null));e.statistics=s.every((t=>null!=t))?s.flat():null,e.histograms=r.every((t=>null!=t))?r.flat():null})),n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?null==e?.[0]?null:(0,s.sS)(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Ke.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Ye,json:{write:!0,name:"rasterFunctionArguments"}})],Ke.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Ke.prototype,"rasterArgumentNames",void 0),Ke=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.CompositeBandFunction")],Ke);const Xe=Ke,Ze=new s.fh({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Qe=new s.fh({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function tn(t,e,n,r){const[o,i]=t,a=(0,s.sF)(n)&&!(0,s.sF)(o.pixelType)&&!(0,s.sF)(i.pixelType),u=[o.mask,i.mask].filter((t=>t)),l=s.iH.combineBandMasks(u),c=t.map((t=>t.pixels[0])),{width:p,height:h}=o,m=s.iH.createEmptyBand(n,p*h);switch(e){case"difference":case"relative-difference":en({bands:c,mask:l,outBand:m,isRoundingNeeded:a,isRelative:"relative-difference"===e});break;case"categorical":nn({bands:c,mask:l,outBand:m,...r});break;case"euclidean-distance":sn({pixels:t.map((t=>t.pixels)),mask:l,outBand:m});break;case"angle-difference":rn({pixels:t.map((t=>t.pixels)),mask:l,outBand:m});break;case"band-with-most-change":on({pixels:t.map((t=>t.pixels)),mask:l,outBand:m})}const f=new s.iH({width:p,height:h,pixels:[m],pixelType:n,mask:l});return f.updateStatistics(),f}function en(t){const{bands:[e,n],mask:s,isRelative:r,isRoundingNeeded:o,outBand:i}=t,a=e.length;for(let u=0;u<a;u++)if(!s||s[u]){let t=e[u]-n[u];if(r){const s=Math.max(Math.abs(e[u])-Math.abs(n[u]));t=s>0?t/s:0}i[u]=o?Math.round(t):t}}function nn(t){const{bands:[e,n],categoryIndexLookups:[s,r],classNames:[o,i],mask:a,keepMethod:u,outBand:l}=t,c=e.length,p=o.length,h=i.length,m=p*h,f=m+1,d=m+2;for(let g=0;g<c;g++)if(!a||a[g]){const t=e[g],a=n[g],c=s[t],p=r[a],y=o[c],b=i[p];l[g]=null==c||null==p?m:"changed"===u&&y===b?f:"unchanged"===u&&y!==b?d:c*h+p}}function sn(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0;for(let s=0;s<i;s++){const r=e[s][a]-n[s][a];t+=r*r}r[a]=Math.sqrt(t)}}function rn(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0,s=0,o=0;for(let r=0;r<i;r++){const i=e[r][a],u=n[r][a];t+=i*u,s+=i*i,o+=u*u}const u=Math.sqrt(s*o);r[a]=u?Math.acos(t/u):1.5707963267948966}}function on(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0,s=0;for(let r=0;r<i;r++){const o=Math.abs(e[r][a]-n[r][a]);o>t&&(t=o,s=r)}r[a]=s}}var an;let un=an=class extends i{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new an({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};(0,s.bt)([(0,s.e3)(Ze)],un.prototype,"method",void 0),(0,s.bt)([(0,s.e3)(Qe)],un.prototype,"keepMethod",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],un.prototype,"raster2",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],un.prototype,"rasters",null),un=an=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],un);const ln=un;let cn=class extends h{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const t=this.sourceRasterInfos.map((t=>t.attributeTable)),n=this._getFieldNames(t,"value"),s=t.map((t=>this._getClassFieldName(t)));if(null==n[0]||null==n[1]||null==s[0]||null==s[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,s)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:n}=this.functionArguments;return tn(e,n,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,n]=(0,s.sE)(t);const r=(0,s.sF)(t);return r&&(e-=1e-4,n+=1e-4),{method:this.functionArguments.method,domainRange:[e,n],isOutputRounded:r}}_updateAttributeTable(t,e,n){const r=this.sourceRasterInfos.map((t=>t.attributeTable)),o=r.map(((t,n)=>t.features.map((t=>t.attributes[e[n]])))),i=r.map(((t,e)=>t.features.map((t=>t.attributes[n[e]])))),a=o.map((t=>{const e=[];return t.forEach(((t,n)=>e[t]=n)),e})),{keepMethod:u}=this.functionArguments;this._categoryConfig={categoryIndexLookups:a,classNames:i,keepMethod:u};const l=r[0].clone();l.fields=[new s.bl({name:"OID",type:"oid"}),new s.bl({name:"Value",type:"integer"}),new s.bl({name:"ClassName",type:"string"}),new s.bl({name:"Class_From",type:"string"}),new s.bl({name:"Class_To",type:"string"})];const c=this._getFieldNames(r,"red"),p=this._getFieldNames(r,"green"),h=this._getFieldNames(r,"blue"),m=[],f=2===c.length&&2===p.length&&2===h.length;f&&(m.push(...r.map(((t,e)=>t.features.map((t=>[t.attributes[c[e]],t.attributes[p[e]],t.attributes[h[e]]]))))),l.fields.push(new s.bl({name:"Red",type:"integer"}),new s.bl({name:"Green",type:"integer"}),new s.bl({name:"Blue",type:"integer"})));const d=l.features[0].clone();d.geometry=null;const g=[],[y,b]=o.map((t=>t.length));let x=1;for(let s=0;s<y;s++){const t=i[0][s];for(let e=0;e<b;e++){const n=i[1][e];if("changed"===u&&t===n||"unchanged"===u&&t!==n)continue;const r=d.clone();r.attributes={OID:x++,Value:s*b+e,ClassName:t===n?t:`${t} -> ${n}`,Class_From:t,Class_To:n},f&&(r.attributes.Red=m[0][s][0]+m[1][e][0]>>1,r.attributes.Green=m[0][s][1]+m[1][e][1]>>1,r.attributes.Blue=m[0][s][2]+m[1][e][2]>>1),g.push(r)}}if("changed"===u){const t=d.clone();t.attributes={OID:x++,Value:y*b+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},g.push(t)}else if("unchanged"===u){const t=d.clone();t.attributes={OID:x++,Value:y*b+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},g.push(t)}l.features=g,t.attributeTable=l}_getFieldNames(t,e){return t.map((({fields:t})=>t.find((t=>t.name.toLowerCase()===e))?.name)).filter((t=>t))}_getClassFieldName(t){return(t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().startsWith("class")))??t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name")))??t.fields.find((t=>"string"===t.type)))?.name}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],cn.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:ln,json:{write:!0,name:"rasterFunctionArguments"}})],cn.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],cn.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],cn.prototype,"_categoryConfig",void 0),cn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ComputeChangeFunction")],cn);const pn=cn;var hn;let mn=hn=class extends i{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new hn({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],mn.prototype,"contrastOffset",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],mn.prototype,"brightnessOffset",void 0),mn=hn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],mn);const fn=mn;let dn=class extends h{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),this.rasterInfo=n;const{contrastOffset:r,brightnessOffset:o}=this.functionArguments;return this.lookup=(0,s.sT)(r,o),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:(0,s.sU)(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],dn.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:fn,json:{write:!0,name:"rasterFunctionArguments"}})],dn.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],dn.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],dn.prototype,"lookup",void 0),dn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],dn);const gn=dn;function yn(t,e,n,s,r){const o=Math.floor(s/2);for(let a=0;a<o;a++)for(let s=0;s<e;s++)t[a*e+s]=t[(r-1-a)*e+s],t[(n-1-a)*e+s]=t[(n-r+a)*e+s];const i=Math.floor(r/2);for(let a=0;a<n;a++){const n=a*e;for(let s=0;s<i;s++)t[n+s]=t[n+r-1-s],t[n+e-s-1]=t[n+e+s-r]}}const bn=new Map;function xn(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let n=null;for(let s=0;s<e;s++){const o=t[s+r*e],i=t[s];if(null==n)if(0===i){if(o)return{separable:!1,row:null,col:null}}else n=o/i;else if(o/i!==n)return{separable:!1,row:null,col:null}}if(null==n)return{separable:!1,row:null,col:null};s.push(n)}return{separable:!0,row:n,col:s}}function wn(t,e,n,s,r,o,i){const a=new Float32Array(e*n),u=o.length,l=i?0:s,c=i?s:0,p=i?1:e;for(let h=l;h<n-l;h++){const n=h*e;for(let i=c;i<e-c;i++){if(r&&!r[n+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[n+i+(r-s)*p]*o[r];a[n+i]=e}}return a}function vn(t,e,n,s,r,o,i){const a=new Float32Array(e*n),u=Math.floor(s/2),l=Math.floor(r/2);for(let c=u;c<n-u;c++){const n=c*e;for(let c=l;c<e-l;c++){if(o&&!o[n+c])continue;let p=0;for(let o=0;o<s;o++)for(let s=0;s<r;s++)p+=t[n+c+(o-u)*e+s-l]*i[o*r+s];a[n+c]=p}}return a}function An(t,e,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,l=r.length,c=[],{kernel:p,rows:h,cols:m}=e;for(let s=0;s<l;s++){const t=vn(r[s],o,i,h,m,u,p);n&&yn(t,o,i,h,m),c.push(t)}return new s.iH({width:o,height:i,pixelType:a,pixels:c,mask:u})}function Tn(t,e,n,r=!0){const{pixels:o,width:i,height:a,pixelType:u,mask:l}=t,c=o.length,p=[],h=e.length,m=n.length,f=Math.floor(h/2),d=Math.floor(m/2);for(let s=0;s<c;s++){let t=wn(o[s],i,a,f,l,e,!0);t=wn(t,i,a,d,l,n,!1),r&&yn(t,i,a,h,m),p.push(t)}return new s.iH({width:i,height:a,pixelType:u,pixels:p,mask:l})}function Pn(t,e){const n=xn(e.kernel),s=!1!==e.mirrorEdges,r=n.separable?Tn(t,n.row,n.col,s):An(t,e,s),{outputPixelType:o}=e;return o&&r.clamp(o),r}var Rn;bn.set(m.none,[0,0,0,0,1,0,0,0,0]),bn.set(m.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),bn.set(m.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),bn.set(m.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),bn.set(m.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),bn.set(m.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),bn.set(m.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),bn.set(m.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),bn.set(m.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),bn.set(m.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),bn.set(m.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),bn.set(m.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),bn.set(m.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),bn.set(m.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),bn.set(m.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),bn.set(m.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),bn.set(m.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),bn.set(m.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),bn.set(m.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),bn.set(m.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),bn.set(m.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),bn.set(m.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),bn.set(m.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let Fn=Rn=class extends i{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=bn.get(t);if(!e||t===m.userDefined||t===m.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new Rn({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,s.T)(this.raster)})}};(0,s.bt)([(0,s.bu)({json:{type:Number,write:!0}})],Fn.prototype,"rows",void 0),(0,s.bt)([(0,s.bu)({json:{type:Number,write:!0}})],Fn.prototype,"cols",void 0),(0,s.bt)([(0,s.bu)({json:{name:"type",type:Number,write:!0}})],Fn.prototype,"convolutionType",null),(0,s.bt)([(0,s.bu)({json:{type:[Number],write:!0}})],Fn.prototype,"kernel",void 0),Fn=Rn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Fn);const Nn=Fn,Cn=25;let kn=class extends h{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,n=t.reduce(((t,e)=>t+e));return-1===e||0===n||1===n?t:t.map((t=>t/n))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(m).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==m.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[m.none,m.sharpen,m.sharpen2,m.sharpening3x3,m.sharpening5x5];return(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:s.length<=Cn}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===m.none)return e;const{rows:n,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;return Pn(e,{kernel:r,rows:n,cols:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(Cn);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:(0,s.sE)(this.outputPixelType)}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],kn.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Nn,json:{write:!0,name:"rasterFunctionArguments"}})],kn.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],kn.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)()],kn.prototype,"_normalizedKernel",null),kn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ConvolutionFunction")],kn);const Sn=kn;var In;const Mn=new s.fh({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let _n=In=class extends i{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Mn.fromJSON(e.type??e.curvatureType??0)}clone(){return new In({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,s.bt)([(0,s.bu)({json:{write:{target:"type"}}}),(0,s.e3)(Mn)],_n.prototype,"curvatureType",void 0),(0,s.bt)([(0,s.eg)("curvatureType",["type","curvatureType"])],_n.prototype,"readCurvatureType",null),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],_n.prototype,"zFactor",void 0),_n=In=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],_n);const jn=_n;let Bn=class extends h{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,curvatureType:r}=this.functionArguments,{extent:o,primaryPixelSizes:i}=t,a=i?.[0],u=a??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1}),l=this.isGCS&&n>=1?n*s.sV:n;return(0,s.sW)(e,{zFactor:l,curvatureType:r,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*s.sV:t}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Bn.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:jn,json:{write:!0,name:"rasterFunctionArguments"}})],Bn.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Bn.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Bn.prototype,"isGCS",void 0),Bn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.CurvatureFunction")],Bn);const Gn=Bn;var On;let En=On=class extends i{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=s.sX.bestMatch}clone(){return new On({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],En.prototype,"bandIds",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],En.prototype,"bandNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],En.prototype,"bandWavelengths",void 0),(0,s.bt)([(0,s.e3)({0:"name",1:"wavelength",2:"id"})],En.prototype,"method",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],En.prototype,"missingBandAction",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],En.prototype,"wavelengthMatchTolerance",void 0),En=On=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],En);const zn=En;let Dn=class extends h{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:r,bandNames:o,bandWavelengths:i,bandIds:a,missingBandAction:u}=t,l=o?.length&&("name"===r||"id"!==r&&!a?.length),c=i?.length&&("wavelength"===r||"id"!==r&&!a?.length),p=u===s.sX.fail,h=l?Un(n,o):c?Ln(n,i,this.functionArguments,p):Vn(n,a,p);if(null==h)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":c?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const m=n.clone();m.pixelType=this.outputPixelType,m.bandCount=h.length;const{statistics:f,histograms:d}=m;null!=f&&f.length&&(m.statistics=h.map((t=>f[t]||f[f.length-1]))),null!=d&&d.length&&(m.histograms=h.map((t=>d[t]||d[d.length-1]))),m.multidimensionalInfo&&m.multidimensionalInfo.variables.forEach((t=>{const{statistics:e,histograms:n}=t;null!=e&&e.length&&(t.statistics=h.map((t=>e[t]||e[e.length-1]))),null!=n&&n.length&&(t.histograms=h.map((t=>n[t]||n[n.length-1])))}));let g=m.keyProperties?.BandProperties;return g?.length&&(g=h.map((t=>t>=g.length?g[g.length-1]:g[t])),m.keyProperties={...m.keyProperties,BandProperties:g}),this.rasterInfo=m,{success:!0,supportsGPU:m.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:qt(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Dn.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:zn,json:{write:!0,name:"rasterFunctionArguments"}})],Dn.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Dn.prototype,"rasterArgumentNames",void 0),Dn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ExtractBandFunction")],Dn);const Hn=Dn;function Un(t,e){const n=t.bandInfos.map((({name:t})=>t.toLowerCase())),s=[];for(let r=0;r<e.length;r++){const t=e[r].toLowerCase();let o=n.indexOf(t);if(-1===o&&"nearinfrared"===t&&(o=n.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=n.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;s.push(o)}return s}function Vn(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some((t=>t<0||t>=s))?null:e}function Ln(t,e,{wavelengthMatchTolerance:n},s){const{bandInfos:r}=t,o=[];for(let a=0;a<r.length;a++){const{minWavelength:t,maxWavelength:e}=r[a];if(!t||!e)return null;o.push({minWavelength:t,maxWavelength:e})}const i=[];for(let a=0;a<e.length;a++){const t=e[a];let r=!1,u=-1,l=Number.MAX_VALUE;for(let e=0;e<o.length;e++){const n=o[e],s=t>=n.minWavelength&&t<=n.maxWavelength,i=Math.abs(t-(n.minWavelength+n.maxWavelength)/2);s?i<l&&(r=!0,u=e,l=i):!r&&i<l&&(u=e,l=i)}if(!r&&n&&l<n&&(r=!0),!r&&s)return null;i.push(u)}return i}function Wn(t,e,n){const{pixels:r,width:o,height:i,mask:a,bandMasks:u}=t,l=o*i,c=u?.length?s.iH.combineBandMasks(u):a,p=Math.min(e.length,r.length),h=n.startsWith("f"),m=!h&&n!==t.pixelType,[f,d]=(0,s.sE)(n),g=s.iH.createEmptyBand(n,l);for(let s=0;s<i;s++){let t=s*o;for(let n=0;n<o;n++,t++)if(!c||c[t]){let n=0;for(let s=0;s<p;s++)n+=e[s]*r[s][t];h||(n=Math.round(n),m&&(n=n>d?d:n<f?f:n)),g[t]=n}}const y=new s.iH({width:o,height:i,pixels:[g],pixelType:n,mask:c});return y.updateStatistics(),y}var qn;let Jn=qn=class extends i{clone(){return new qn({conversionParameters:[...this.conversionParameters],raster:this.raster})}};(0,s.bt)([(0,s.bu)({type:[Number],json:{write:!0}})],Jn.prototype,"conversionParameters",void 0),Jn=qn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Jn);const $n=Jn;let Yn=class extends h{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const n=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:n}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:Wn(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Yn.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:$n,json:{write:!0,name:"rasterFunctionArguments"}})],Yn.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Yn.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)()],Yn.prototype,"_normalizedWeights",null),Yn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.GrayscaleFunction")],Yn);const Kn=Yn;var Xn;const Zn=new s.fh({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),Qn=new s.fh({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let ts=Xn=class extends i{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Xn({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],ts.prototype,"altitude",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],ts.prototype,"azimuth",void 0),(0,s.bt)([(0,s.bu)(),(0,s.e3)(Zn)],ts.prototype,"hillshadeType",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0,name:"psPower"}})],ts.prototype,"pixelSizePower",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0,name:"psZFactor"}})],ts.prototype,"pixelSizeFactor",void 0),(0,s.bt)([(0,s.bu)(),(0,s.e3)(Qn)],ts.prototype,"slopeType",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],ts.prototype,"zFactor",void 0),(0,s.bt)([(0,s.bu)({type:Boolean,json:{write:!0}})],ts.prototype,"removeEdgeEffect",void 0),ts=Xn=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],ts);const es=ts;let ns=class extends h{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:n,primaryPixelSizes:r}=t,o=r?.[0],i=o??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}),a=(0,s.sY)(this.functionArguments,i,this.isGCS),u=(0,s.sZ)(e,a);return u.pixelType=this.outputPixelType,u}_getWebGLParameters(){const t=(0,s.sY)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,s.s_)(t),{slopeType:n,zFactor:r,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a="scaled"===n,u=(0,s.sF)(this.outputPixelType);return{...e,zFactor:r,gcsFactor:this.isGCS?s.sV:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,isOutputRounded:u}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],ns.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:es,json:{write:!0,name:"rasterFunctionArguments"}})],ns.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],ns.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ns.prototype,"isGCS",void 0),ns=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.HillshadeFunction")],ns);const ss=ns;var rs;let os=rs=class extends i{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new rs({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,s.T)(this.rasters)})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],os.prototype,"operation",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],os.prototype,"rasters",void 0),(0,s.bt)([(0,s.eO)("rasters")],os.prototype,"writeRasters",null),(0,s.bt)([(0,s.bu)({json:{write:!0}})],os.prototype,"processAsMultiband",void 0),os=rs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],os);const is=os;let as=class extends h{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some((t=>t.bandCount!==n)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=A[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();return a.bandCount=999!==i||s?n:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:Nt(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=A[t],n=Object.keys(x).find((e=>x[e]===t))?.toLowerCase()??"undefined",r=this.outputPixelType??"f32";let[o,i]=(0,s.sE)(r);const a=(0,s.sF)(r);return a&&(o-=1e-4,i+=1e-4),{imageCount:e,operationName:n,domainRange:[o,i],isOutputRounded:a}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,s=v(n)?.domain;if(s){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:s[0],max:s[1],avg:(s[0]+s[1])/2,stddev:(s[0]+s[1])/10}}else 45===n&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:n}=this.sourceRasterInfos[0],{operation:r}=this.functionArguments,{domain:o,isInteger:i}=v(r)??{domain:null,isInteger:!1};let a="f32";if(o&&i)a=(0,s.pg)(o[0],o[1]);else if(30===r){const t=e?.[0];a=t?(0,s.pg)(t.min,t.max):(0,s.sF)(n)?n:"s32"}else if(45===r&&(0,s.sF)(n)){const t=e?.map((({max:t})=>-t)),r=e?.map((({min:t})=>-t)),o=t?.length?Math.min(...t):null,i=r?.length?Math.min(...r):null;a=null!=o&&null!=i?(0,s.pg)(o,i):n.startsWith("s")?n.replace("s","u"):"u1"===n||"u2"===n||"u4"===n?"s8":"u8"===n?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],as.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:is,json:{write:!0,name:"rasterFunctionArguments"}})],as.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],as.prototype,"rasterArgumentNames",void 0),as=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.LocalFunction")],as);const us=as;var ls;let cs=ls=class extends i{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=s.s$.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const n=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||n.length>0,0===n.length?null:n}return null}));return e?n:null}clone(){return new ls({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],cs.prototype,"includedRanges",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],cs.prototype,"noDataValues",void 0),(0,s.bt)([(0,s.bu)()],cs.prototype,"normalizedNoDataValues",null),(0,s.bt)([(0,s.bu)({json:{write:!0}})],cs.prototype,"noDataInterpretation",void 0),cs=ls=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],cs);const ps=cs;let hs=class extends h{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:r}=this.functionArguments;if(!n?.length&&!r?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let a=0;a<t.bandCount;a++){const t=(0,s.t0)(e,n?.slice(2*a,2*a+2),r?.[a]);if(null==t){o=null;break}o.push(t)}this.lookups=o;const i=null!=r&&r.every((t=>t?.length===r[0]?.length));return{success:!0,supportsGPU:(!n||n.length<=2*s.t1)&&(!r||i&&r[0].length<=s.t1)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:n,lookups:r}=this,{includedRanges:o,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,u=i===s.s$.matchAll;return(0,s.t2)(e,{includedRanges:o,noDataValues:a,outputPixelType:n,matchAll:u,lookups:r})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array(s.t1);n.fill(s.t3),e?.[0]?.length&&n.set(e[0]);const r=new Float32Array(s.t1);for(let o=0;o<r.length;o+=2)r[o]=t?.[o]??-s.t3,r[o+1]=t?.[o+1]??s.t3;return t?.length&&r.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:r}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],hs.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:ps,json:{write:!0,name:"rasterFunctionArguments"}})],hs.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],hs.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],hs.prototype,"lookups",void 0),hs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.MaskFunction")],hs);const ms=hs;var fs;let ds=fs=class extends i{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new fs({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],ds.prototype,"visibleBandID",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ds.prototype,"infraredBandID",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ds.prototype,"scientificOutput",void 0),ds=fs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],ds);const gs=ds;let ys=class extends h{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=s.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return Wt(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments,s=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:qt(s),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map((e=>t[e]))}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],ys.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:gs,json:{write:!0,name:"rasterFunctionArguments"}})],ys.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],ys.prototype,"rasterArgumentNames",void 0),ys=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.NDVIFunction")],ys);const bs=ys;var xs;let ws=xs=class extends i{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new xs({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],ws.prototype,"inputRanges",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ws.prototype,"outputValues",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ws.prototype,"noDataRanges",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ws.prototype,"allowUnmatched",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],ws.prototype,"isLastInputRangeInclusive",void 0),ws=xs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],ws);const vs=ws;let As=class extends h{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:n}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:r,outputValues:o,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:u}=this.functionArguments;if(null!=n&&n.length&&o?.length)if(r){const e=Math.min.apply(null,[...o,n[0].min]),s=Math.max.apply(null,[...o,n[0].max]);t.statistics=[{...n[0],min:e,max:s}]}else{let e=o[0],s=e;for(let t=0;t<o.length;t++)e=e>o[t]?o[t]:e,s=s>o[t]?s:o[t];t.statistics=[{...n[0],min:e,max:s}]}return this.rasterInfo=t,this.lookup=r?null:(0,s.t4)({srcPixelType:e,inputRanges:i,outputValues:o,noDataRanges:a,allowUnmatched:r,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=s.t1)&&(!a||a.length<=s.t1)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:n,outputPixelType:r}=this;if(n){const t=(0,s.sU)(e,{lut:[n.lut],offset:n.offset,outputPixelType:r});return null!=t&&n.mask&&(t.mask=(0,s.t5)(e.pixels[0],e.mask,n.mask,n.offset,"u8")),t}const{inputRanges:o,outputValues:i,noDataRanges:a,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return(0,s.t6)(e,{inputRanges:o,outputValues:i,noDataRanges:a,outputPixelType:r,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,r=new Float32Array(3*s.t1),o=1e-5,i=this.functionArguments.inputRanges??[],a=this.functionArguments.outputValues??[],u=a.length;for(let c=0;c<s.t1;c++)r[3*c]=i[2*c]??s.t3-1,r[3*c+1]=i[2*c+1]??s.t3,r[3*c+2]=a[c]??0,c<u&&(c>0&&(r[3*c]-=o),(c<u-1||!n)&&(r[3*c+1]-=o));const l=new Float32Array(2*s.t1);return l.fill(s.t3),e?.length&&l.set(e),{allowUnmatched:t,rangeMaps:r,noDataRanges:l,clampRange:(0,s.sE)(this.outputPixelType)}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],As.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:vs,json:{write:!0,name:"rasterFunctionArguments"}})],As.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],As.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],As.prototype,"lookup",void 0),As=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.RemapFunction")],As);const Ts=As;var Ps;let Rs=Ps=class extends es{readColorRamp(t){if("string"==typeof t){const e=s.sJ.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return e?(0,s.sO)(s.sJ.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new Ps({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],Rs.prototype,"colorRamp",void 0),(0,s.bt)([(0,s.eg)("colorRamp")],Rs.prototype,"readColorRamp",null),(0,s.bt)([(0,s.bu)({type:[[Number]],json:{write:!0}})],Rs.prototype,"colormap",void 0),Rs=Ps=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Rs);const Fs=Rs;let Ns=class extends h{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:n}=this.functionArguments;if(!e&&!n?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const r=t.clone();this._removeStatsHistColormapVAT(r),r.pixelType=this.outputPixelType,r.bandCount=3,r.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=r,this.isGCS=r.spatialReference?.isGeographic??!1,n?.length||(n=(0,s.sN)(e,{interpolateAlpha:!0}));const{indexedColormap:o,offset:i}=(0,s.sP)({colormap:n});if(!o?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const a=(0,s.t7)(o);return this.lookup={indexedColormap:o,offset:i,hsvMap:a},{success:!0,supportsGPU:(0,s.sQ)(o)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let n=t.primaryPixelSizes?.[0];if(null==n){const{extent:s}=t;n=s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}}const r=(0,s.sY)(this.functionArguments,n,this.isGCS),o=(0,s.sZ)(e,r),i=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return(0,s.t8)(o,e,this.lookup.hsvMap,i),o.pixelType=this.outputPixelType,o}_getWebGLParameters(){const t=(0,s.sY)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,s.s_)(t),{slopeType:n,zFactor:r,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a="scaled"===n,{indexedColormap:u,offset:l}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],p=(0,s.sF)(this.outputPixelType);return{...e,indexedColormap:u,offset:l,zFactor:r,gcsFactor:this.isGCS?s.sV:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:p}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Ns.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Fs,json:{write:!0,name:"rasterFunctionArguments"}})],Ns.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Ns.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Ns.prototype,"isGCS",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Ns.prototype,"lookup",void 0),Ns=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.ShadedReliefFunction")],Ns);const Cs=Ns;var ks;const Ss=new s.fh({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let Is=ks=class extends i{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new ks({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,s.bt)([(0,s.e3)(Ss)],Is.prototype,"slopeType",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],Is.prototype,"zFactor",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{name:"psPower",write:!0}})],Is.prototype,"pixelSizePower",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{name:"psZFactor",write:!0}})],Is.prototype,"pixelSizeFactor",void 0),(0,s.bt)([(0,s.bu)({type:Boolean,json:{write:!0}})],Is.prototype,"removeEdgeEffect",void 0),Is=ks=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],Is);const Ms=Is;let _s=class extends h{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,slopeType:r,pixelSizePower:o,pixelSizeFactor:i}=this.functionArguments,{isGCS:a}=this,{extent:u,primaryPixelSizes:l}=t,c=l?.[0],p=c??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return(0,s.t9)(e,{zFactor:n,slopeType:r,pixelSizePower:o,pixelSizeFactor:i,isGCS:a,resolution:p})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:r}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*s.sV:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:r??0,isOutputRounded:(0,s.sF)(this.outputPixelType)}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],_s.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Ms,json:{write:!0,name:"rasterFunctionArguments"}})],_s.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],_s.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],_s.prototype,"isGCS",void 0),_s=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.SlopeFunction")],_s);const js=_s,Bs=new s.fh({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Gs(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{statisticsType:u,kernelRows:l,kernelCols:c}=e,p="stddev"===u,h=r*o,m=new Float64Array(h),f=new Float64Array(h),d=new Uint32Array(h);for(let A=0;A<o;A++){const t=A*r;let e=0,n=0,o=0;for(let r=0;r<c;r++)i&&!i[t+r]||(e+=s[t+r],p&&(n+=s[t+r]**2),o++);m[t]=e,f[t]=n,d[t]=o;for(let a=1;a<=r-c;a++){const r=t+a-1,u=r+c;i?(i[r]&&(o--,e-=s[r],p&&(n-=s[r]**2)),i[u]&&(o++,e+=s[u],p&&(n+=s[u]**2))):(e-=s[r],e+=s[u],p&&(n-=s[r]**2,n+=s[u]**2)),m[t+a]=e,d[t+a]=o,p&&(f[t+a]=n)}}const g=new Float64Array(h),y=new Float64Array(h),b=new Uint32Array(h),x=l*r;for(let A=0;A<=r-c;A++){let t=0,e=0,n=0;for(let s=0;s<l;s++){const o=s*r+A;t+=m[o],n+=d[o],p&&(e+=f[o])}g[A]=t,y[A]=e,b[A]=n;for(let s=1;s<=o-l;s++){const o=(s-1)*r+A,i=o+x;t-=m[o],t+=m[i],n-=d[o],n+=d[i],p&&(e-=f[o],e+=f[i]),g[s*r+A]=t,y[s*r+A]=e,b[s*r+A]=n}}const w=Math.floor(l/2),v=Math.floor(c/2);for(let A=w;A<o-w;A++){const t=A*r;for(let e=v;e<r-v;e++){const s=(A-w)*r+e-v,o=b[s];if(0===o||n&&(!i||i[t+e]))continue;const u=g[s]/o,l=p?Math.sqrt((y[s]-g[s]*u)/o):u;a[t+e]=l,i&&(i[t+e]=255)}}}function Os(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:u,kernelCols:l,statisticsType:c}=e,p=Math.floor(u/2),h=Math.floor(l/2),m="min"===c,f=a.slice(),d=new Uint32Array(r*o);for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++){let n=m?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let a=0;a<u;a++)for(let u=0;u<l;u++){const l=t+e+(a-p)*r+u-h;i&&!i[l]||(n=m?Math.min(n,s[l]):Math.max(n,s[l]),o++)}i?(f[t+e]=0===o?0:n,d[t+e]=o):a[t+e]=0===o?0:n}}if(i)for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++)if(d[t+e]){if(n&&i[t+e])continue;a[t+e]=f[t+e],i[t+e]=255}}}function Es(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h=a.slice(),m=new Uint32Array(r*o);for(let f=c;f<o-c;f++){const t=f*r;for(let e=p;e<r-p;e++){if(n&&i?.[t+e])continue;const o=[];for(let n=0;n<u;n++)for(let a=0;a<l;a++){const u=t+e+(n-c)*r+a-p;i&&!i[u]||o.push(s[u])}o.length&&(o.sort(((t,e)=>t-e)),i?(h[t+e]=o[Math.floor((o.length-1)/2)],m[t+e]=o.length):a[t+e]=o[Math.floor((o.length-1)/2)])}}if(i)for(let f=c;f<o-c;f++){const t=f*r;for(let e=p;e<r-p;e++)if(m[t+e]){if(n&&i[t+e])continue;a[t+e]=h[t+e],i[t+e]=255}}}function zs(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h="majority"===e.statisticsType,m=u*l,f=a.slice(),d=new Uint32Array(r*o);for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++){if(n&&i?.[t+e])continue;const o=new Map;for(let n=0;n<u;n++)for(let a=0;a<l;a++){const u=t+e+(n-c)*r+a-p;if(i&&!i[u])continue;const l=s[u];o.set(l,o.has(l)?o.get(l)+1:1)}if(0===o.size)continue;let g=0,y=0,b=h?0:m+1;for(const t of o.keys())y=o.get(t),h===y>b&&(b=y,g=t);i?(f[t+e]=g,d[t+e]=o.size):a[t+e]=g}}if(i)for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++)if(d[t+e]){if(n&&i[t+e])continue;a[t+e]=f[t+e],i[t+e]=255}}}function Ds(t,e){const{mask:n}=t,{fillNoDataOnly:r}=e;if(r&&!n)return t;const{pixels:o,width:i,height:a,bandMasks:u,pixelType:l}=t,c=o.length,p=i*a,h=[],{kernelRows:m,kernelCols:f,statisticsType:d,mirrorEdges:g}=e;if(r&&!n)return t;const y=e.outputPixelType??l,b=[];for(let v=0;v<c;v++){const t=o[v],l=s.iH.createEmptyBand(y,p);r&&l.set(t);const c=u?.[v]??n,x=c?.slice()??null,w={band:t,width:i,height:a,mask:x,outBand:l};switch(d){case"min":case"max":Os(w,e);break;case"mean":case"stddev":Gs(w,e);break;case"median":Es(w,e);break;case"majority":case"minority":zs(w,e)}g&&!r&&yn(l,i,a,m,f),h.push(l),x&&b.push(x)}let x=b[0]??n;b.length!==c&&(b.length=0),c>1&&u?.length&&(x=s.iH.combineBandMasks(u));const w=new s.iH({pixelType:y,width:i,height:a,pixels:h,bandMasks:u&&b.length?b:null,mask:x});return w.updateStatistics(),w}var Hs;let Us=Hs=class extends i{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Hs({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:(0,s.T)(this.raster)})}};(0,s.bt)([(0,s.bu)({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Us.prototype,"rows",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Us.prototype,"cols",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Us.prototype,"fillNoDataOnly",void 0),(0,s.bt)([(0,s.bu)({json:{read:{source:["statisticsType","type"],reader:(t,e)=>Bs.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),(0,s.e3)(Bs)],Us.prototype,"statisticsType",void 0),Us=Hs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Us);const Vs=Us;let Ls=class extends h{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();n.pixelType=this.outputPixelType;const{statisticsType:s}=this.functionArguments;return"stddev"===s&&this._removeStatsHistColormapVAT(n),this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:n,rows:s,cols:r,fillNoDataOnly:o}=this.functionArguments;return Ds(e,{kernelRows:s,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:n,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:n,fillNoDataOnly:r}=this.functionArguments;return{fillNoDataOnly:r,kernelRows:t,kernelCols:e,statisticsType:n,clampRange:(0,s.sE)(this.outputPixelType)}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Ls.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],Ls.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Ls.prototype,"rasterArgumentNames",void 0),Ls=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.StatisticsFunction")],Ls);const Ws=Ls;var qs;let Js=qs=class extends i{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};n.push(e)})),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,s.push(e)})),e[n]=s}clone(){return new qs({statistics:(0,s.T)(this.statistics),histograms:(0,s.T)(this.histograms)})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],Js.prototype,"statistics",void 0),(0,s.bt)([(0,s.eg)("statistics")],Js.prototype,"readStatistics",null),(0,s.bt)([(0,s.eO)("statistics")],Js.prototype,"writeStatistics",null),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Js.prototype,"histograms",void 0),Js=qs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Js);const $s=Js;let Ys=class extends h{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],Ys.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:$s,json:{write:!0,name:"rasterFunctionArguments"}})],Ys.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],Ys.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Ys.prototype,"indexedColormap",void 0),(0,s.bt)([(0,s.bu)()],Ys.prototype,"isNoopProcess",void 0),Ys=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],Ys);const Ks=Ys;var Xs;const Zs=new s.fh({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let Qs=Xs=class extends i{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[n]=t)}clone(){return new Xs({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,s.T)(this.statistics),gamma:(0,s.T)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,s.T)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,s.bt)([(0,s.bu)({type:Boolean,json:{write:!0}})],Qs.prototype,"computeGamma",void 0),(0,s.bt)([(0,s.bu)({type:Boolean,json:{name:"dra",write:!0}})],Qs.prototype,"dynamicRangeAdjustment",void 0),(0,s.bt)([(0,s.bu)({type:[Number],json:{write:!0}})],Qs.prototype,"gamma",void 0),(0,s.bt)([(0,s.bu)()],Qs.prototype,"histograms",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],Qs.prototype,"maxPercent",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],Qs.prototype,"minPercent",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],Qs.prototype,"numberOfStandardDeviations",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{name:"max",write:!0}})],Qs.prototype,"outputMax",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{name:"min",write:!0}})],Qs.prototype,"outputMin",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],Qs.prototype,"sigmoidStrengthLevel",void 0),(0,s.bt)([(0,s.bu)({json:{type:[[Number]],write:!0}})],Qs.prototype,"statistics",void 0),(0,s.bt)([(0,s.eO)("statistics")],Qs.prototype,"writeStatistics",null),(0,s.bt)([(0,s.e3)(Zs)],Qs.prototype,"stretchType",void 0),(0,s.bt)([(0,s.bu)({type:Boolean,json:{write:!0}})],Qs.prototype,"useGamma",void 0),Qs=Xs=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],Qs);const tr=Qs;let er=class extends h{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:r,gamma:o,useGamma:i}=n;if(!r&&["u8","u16","s8","s16"].includes(e)){const r=(0,s.ta)(n.toJSON(),{rasterInfo:t}),a=(0,s.sF)(this.outputPixelType)?"round":"float";this.lookup=(0,s.tb)({pixelType:e,...r,gamma:i?o:null,rounding:a}),this.cutOffs=r}else r||(this.cutOffs=(0,s.ta)(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const a=t.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),"u8"===this.outputPixelType&&(a.keyProperties.DataType="processed");const{outputMin:u=0,outputMax:l=255}=this.functionArguments;a.statistics=[];for(let s=0;s<a.bandCount;s++)a.statistics[s]={min:u,max:l};return this.rasterInfo=a,{success:!0,supportsGPU:!r}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:n}=this;if(n)return(0,s.sU)(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:r}=this,o=this.cutOffs||(0,s.ta)(r.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=r.useGamma?r.gamma:null;return(0,s.tc)(e,{...o,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:r}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,i=r&&n?.length?(0,s.td)(o,n):[1,1,1],{minCutOff:a,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===a.length&&(a[1]=a[2]=a[0],u[1]=u[2]=u[0]);const l=new Float32Array(o);let c;for(c=0;c<o;c++)l[c]=(e-t)/(u[c]-a[c]);const p=(0,s.sF)(this.outputPixelType);return{bandCount:o,outMin:t,outMax:e,minCutOff:a,maxCutOff:u,factor:l,useGamma:r,gamma:r&&n?n:[1,1,1],gammaCorrection:r&&i?i:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:p,type:"stretch"}}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],er.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:tr,json:{write:!0,name:"rasterFunctionArguments"}})],er.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],er.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],er.prototype,"lookup",void 0),(0,s.bt)([(0,s.bu)({json:{write:!0}})],er.prototype,"cutOffs",void 0),er=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.StretchFunction")],er);const nr=er;var sr;let rr=sr=class extends i{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new sr({attributeTableAsRecordSet:(0,s.T)(this.attributeTableAsRecordSet)})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],rr.prototype,"attributeTableAsRecordSet",void 0),rr=sr=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.TableFunctionArguments")],rr);const or=rr;let ir=class extends h{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,"thematic"!==n.dataType&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,s.bt)([(0,s.bu)({json:{write:!0,name:"rasterFunction"}})],ir.prototype,"functionName",void 0),(0,s.bt)([(0,s.bu)({type:or,json:{write:!0,name:"rasterFunctionArguments"}})],ir.prototype,"functionArguments",void 0),(0,s.bt)([(0,s.bu)()],ir.prototype,"rasterArgumentNames",void 0),(0,s.bt)([(0,s.bu)()],ir.prototype,"isNoopProcess",void 0),ir=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterFunctions.TableFunction")],ir);const ar=ir,ur=new Map;function lr(t,e){const{rasterFunctionArguments:n}=t;n&&(n.rasters||[n.raster,n.raster2]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&lr(t,e))}))}function cr(t,e){if(e=e??{},"function"in(t=(0,s.T)(t))&&"arguments"in t&&t.arguments){const n=br(t,new Map,e);if(wr(n),!n.renderingRule)throw new s.s("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return fr(t=mr(t),e);throw new s.s("raster-function-helper","unsupported raster function json.")}function pr(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function hr(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function mr(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let t=n[r];const e=r.toLowerCase();if("rasters"===e&&Array.isArray(t))s.rasters=t.map((t=>hr(t)?mr(t):t));else switch(hr(t)&&(t=mr(t)),e){case"dra":s.dra=t;break;case"pspower":s.psPower=t;break;case"pszfactor":s.psZFactor=t;break;case"bandids":s.bandIds=t;break;default:s[r[0].toLowerCase()+r.slice(1)]=t}}return"Local"!==e||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function fr(t,e){const{rasterFunction:n,rasterFunctionArguments:r}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!ur.has(n))throw new s.s("raster-function-helper",`unsupported raster function: ${n}`);const i=ur.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=pr(r,u),p="rasters"===u[0]||u.length>1,h=[];for(let s=0;s<c.length;s++){const t=c[s];let n;null==t||"string"==typeof t&&t.startsWith("$")?l.push(e?.raster):"string"==typeof t?e[t]&&l.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=fr(t,e),p||(a.functionArguments[u[s]]=n),l.push(n)),p&&h.push(n??t)}if(p&&("rasters"===u[0]?a.functionArguments.rasters=h:u.forEach(((t,e)=>{a.functionArguments[t]=h[e]}))),e){a.sourceRasters=l;const t=e.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function dr(t,e){if(t&&e)for(const n in t){const s=t[n];s&&"object"==typeof s&&"type"in s&&("RasterFunctionTemplate"===s.type?dr(s.arguments,e):"RasterFunctionVariable"===s.type&&null!=e[s.name]&&(s.value=e[s.name]))}}function gr(t,e){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?gr(t,e):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let r=n;switch(n.type){case"Scalar":r=n.value;break;case"AlgorithmicColorRamp":r=yr(n);break;case"MultiPartColorRamp":r={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(yr)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let r=0;r<n.elements.length;r++){const o=n.elements[r],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:n}=br(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}else{if("RasterFunctionVariable"!==i)throw new s.s("raster-function-helper","unsupported raster function json.");{const n=gr(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}}else t.push(o)}r=t}else r=n.elements}return null!=n._object_id&&e.set(n._object_id,r),r}function yr(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=t;if(!Array.isArray(n)){const{r:t,g:e,b:r}=(0,s.oE)({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:t,g:e,b:n}=(0,s.oE)({h:r.Hue,s:r.Saturation,v:r.Value});r=[t,e,n,r.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:r}}function br(t,e,n){n&&dr(t,n);const s={renderingRule:{},templates:e};return xr(t,s),s}function xr(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&s.set(i,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const a={};n.rasterFunctionArguments=a;for(const u in o){if("type"===u||"object_id"===u||"_object_ref_id"===u)continue;const t=o[u];t&&"object"==typeof t&&"type"in t&&("RasterFunctionTemplate"===t.type||"RasterFunctionVariable"===t.type)?("RasterFunctionVariable"===t.type?a[u]=gr(t,s):(n.rasterFunctionArguments[u]={},xr(t,{renderingRule:n.rasterFunctionArguments[u],templates:s})),null!=t._object_id&&s.set(t._object_id,a[u])):a[u]=t}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),n.rasterFunction){case"Stretch":vr(a);break;case"Colormap":Ar(a);break;case"Convolution":Tr(a);break;case"Mask":Pr(a)}}function wr(t){const{renderingRule:e,templates:n}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:r}=e;for(const o in r){const t=r[o],e="_object_ref_id"===o?t:t&&"object"==typeof t&&"_object_ref_id"in t?t._object_ref_id:null;if(null==e)t&&"object"==typeof t&&(t.rasterFunctionArguments&&wr({renderingRule:t,templates:n}),Array.isArray(t)&&t.forEach(((r,o)=>{if("object"==typeof r)if(null!=r._object_ref_id){if(!n.has(r._object_ref_id))throw new s.s("raster-function-helper",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const i=n.get(e);i&&"object"==typeof i?Object.assign(r,i):t[o]=i}else wr({renderingRule:r,templates:n})})));else{if(!n.has(e))throw new s.s("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const t=n.get(e);"_object_ref_id"!==o?r[o]=t:t&&"object"==typeof t&&Object.assign(r,t)}}}function vr(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Ar(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function Tr(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Pr(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}ur.set("Arithmetic",{desc:"Arithmetic Function",ctor:St,rasterArgumentNames:["rasters"]}),ur.set("Aspect",{desc:"Aspect Function",ctor:Bt,rasterArgumentNames:["raster"]}),ur.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:fe,rasterArgumentNames:["raster"]}),ur.set("Colormap",{desc:"Colormap Function",ctor:He,rasterArgumentNames:["raster"]}),ur.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:qe,rasterArgumentNames:["raster"]}),ur.set("CompositeBand",{desc:"CompositeBand Function",ctor:Xe,rasterArgumentNames:["rasters"]}),ur.set("ComputeChange",{desc:"ComputeChange Function",ctor:pn,rasterArgumentNames:["rasters"]}),ur.set("Convolution",{desc:"Convolution Function",ctor:Sn,rasterArgumentNames:["raster"]}),ur.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:gn,rasterArgumentNames:["raster"]}),ur.set("ExtractBand",{desc:"ExtractBand Function",ctor:Hn,rasterArgumentNames:["raster"]}),ur.set("Curvature",{desc:"Curvature Function",ctor:Gn,rasterArgumentNames:["raster"]}),ur.set("Hillshade",{desc:"Hillshade Function",ctor:ss,rasterArgumentNames:["raster"]}),ur.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:Cs,rasterArgumentNames:["raster"]}),ur.set("Grayscale",{desc:"Grayscale Function",ctor:Kn,rasterArgumentNames:["raster"]}),ur.set("Clip",{desc:"Clip Function",ctor:Ne,rasterArgumentNames:["raster"]}),ur.set("Local",{desc:"Local Function",ctor:us,rasterArgumentNames:["rasters"]}),ur.set("Mask",{desc:"Mask Function",ctor:ms,rasterArgumentNames:["raster"]}),ur.set("NDVI",{desc:"NDVI Function",ctor:bs,rasterArgumentNames:["raster"]}),ur.set("Remap",{desc:"Remap Function",ctor:Ts,rasterArgumentNames:["raster"]}),ur.set("Slope",{desc:"Slope Function",ctor:js,rasterArgumentNames:["raster"]}),ur.set("Statistics",{desc:"Focal Statistics Function",ctor:Ws,rasterArgumentNames:["raster"]}),ur.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Ks,rasterArgumentNames:["raster"]}),ur.set("Stretch",{desc:"Stretch Function",ctor:nr,rasterArgumentNames:["raster"]}),ur.set("Table",{desc:"Attribute Table Function",ctor:ar,rasterArgumentNames:["raster"]});let Rr=class extends s.bw{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};(0,s.bt)([(0,s.bu)()],Rr.prototype,"affectsPixelSize",null),(0,s.bt)([(0,s.bu)({json:{write:!0}})],Rr.prototype,"spatialReference",void 0),Rr=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterTransforms.BaseRasterTransform")],Rr);const Fr=Rr;var Nr;let Cr=Nr=class extends Fr{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Nr({tolerance:this.tolerance})}};(0,s.bt)([(0,s.e3)({GCSShiftXform:"gcs-shift"})],Cr.prototype,"type",void 0),(0,s.bt)([(0,s.bu)()],Cr.prototype,"tolerance",void 0),Cr=Nr=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterTransforms.GCSShiftTransform")],Cr);const kr=Cr;var Sr;function Ir(t,e,n){const{x:s,y:r}=e;if(n<2)return{x:t[0]+s*t[2]+r*t[4],y:t[1]+s*t[3]+r*t[5]};if(2===n){const e=s*s,n=r*r,o=s*r;return{x:t[0]+s*t[2]+r*t[4]+e*t[6]+o*t[8]+n*t[10],y:t[1]+s*t[3]+r*t[5]+e*t[7]+o*t[9]+n*t[11]}}const o=s*s,i=r*r,a=s*r,u=o*s,l=o*r,c=s*i,p=r*i;return{x:t[0]+s*t[2]+r*t[4]+o*t[6]+a*t[8]+i*t[10]+u*t[12]+l*t[14]+c*t[16]+p*t[18],y:t[1]+s*t[3]+r*t[5]+o*t[7]+a*t[9]+i*t[11]+u*t[13]+l*t[15]+c*t[17]+p*t[19]}}function Mr(t,e,n){const{xmin:r,ymin:o,xmax:i,ymax:a,spatialReference:u}=e;let l=[];if(n<2)l.push({x:r,y:a}),l.push({x:i,y:a}),l.push({x:r,y:o}),l.push({x:i,y:o});else{let t=10;for(let e=0;e<t;e++)l.push({x:r,y:o+(a-o)*e/(t-1)}),l.push({x:i,y:o+(a-o)*e/(t-1)});t=8;for(let e=1;e<=t;e++)l.push({x:r+(i-r)*e/t,y:o}),l.push({x:r+(i-r)*e/t,y:a})}l=l.map((e=>Ir(t,e,n)));const c=l.map((t=>t.x)),p=l.map((t=>t.y));return new s.bn({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:u})}function _r(t){const[e,n,s,r,o,i]=t,a=s*i-o*r,u=o*r-s*i;return[(o*n-e*i)/a,(s*n-e*r)/u,i/a,r/u,-o/a,-s/u]}let jr=Sr=class extends Fr{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(s[o]);return r}writeForwardCoefficients(t,e,n){const s=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?s.push(t[o]):r.push(t[o]);e.coeffX=s,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=_r(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(s[o]);return r}writeInverseCoefficients(t,e,n){const s=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?s.push(t[o]):r.push(t[o]);e.inverseCoeffX=s,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=Ir(this.forwardCoefficients,t,this.polynomialOrder);return new s.D({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Mr(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=Ir(this.inverseCoefficients,t,this.polynomialOrder);return new s.D({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Mr(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Sr({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,s.bt)([(0,s.bu)({json:{write:!0}})],jr.prototype,"polynomialOrder",void 0),(0,s.bt)([(0,s.bu)()],jr.prototype,"forwardCoefficients",void 0),(0,s.bt)([(0,s.eg)("forwardCoefficients",["coeffX","coeffY"])],jr.prototype,"readForwardCoefficients",null),(0,s.bt)([(0,s.eO)("forwardCoefficients")],jr.prototype,"writeForwardCoefficients",null),(0,s.bt)([(0,s.bu)({json:{write:!0}})],jr.prototype,"inverseCoefficients",null),(0,s.bt)([(0,s.eg)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],jr.prototype,"readInverseCoefficients",null),(0,s.bt)([(0,s.eO)("inverseCoefficients")],jr.prototype,"writeInverseCoefficients",null),(0,s.bt)([(0,s.bu)()],jr.prototype,"affectsPixelSize",null),(0,s.bt)([(0,s.e3)({PolynomialXform:"polynomial"})],jr.prototype,"type",void 0),jr=Sr=(0,s.bt)([(0,s.bv)("esri.layers.support.rasterTransforms.PolynomialTransform")],jr);const Br=jr},6255:function(t,e,n){n.d(e,{C:function(){return b},D:function(){return j},I:function(){return A},K:function(){return _},V:function(){return O},a:function(){return J},c:function(){return Y},e:function(){return D},f:function(){return K},i:function(){return V},j:function(){return y},l:function(){return $},t:function(){return H},v:function(){return g},w:function(){return o}});var s,r=n(44444);function o(t,e,n){return!(0,r.bD)(t,e,n)}function i(t,e,n){const s=o(t,e,n);if(s&&!(0,r.cj)())throw new r.s("rasterprojectionhelper-project","projection engine is not loaded");return s}(function(t){t[t.None=0]="None",t[t.North=1]="North",t[t.South=2]="South",t[t.Both=3]="Both"})(s||(s={}));const a=(t,e,n,s=0)=>{if(1===n[0])return[0,0];let r=1,o=-1,i=1,a=-1;for(let g=0;g<t.length;g+=2)isNaN(t[g])||(r=r>t[g]?t[g]:r,o=o>t[g]?o:t[g],i=i>t[g+1]?t[g+1]:i,a=a>t[g+1]?a:t[g+1]);const{cols:u,rows:l}=e,c=(o-r)/u/n[0],p=(a-i)/l/n[1],h=2*s;let m=0,f=!1,d=[0,0];for(let g=0;g<u-3;g++){for(let e=0;e<l-3;e++){const n=g*l*2+2*e,s=(t[n]+t[n+4]+t[n+4*l]+t[n+4*l+4])/4,r=(t[n+1]+t[n+5]+t[n+4*l+1]+t[n+4*l+5])/4,o=Math.abs((s-t[n+2*l+2])/c),i=Math.abs((r-t[n+2*l+3])/p);if(o+i>m&&(m=o+i,d=[o,i]),h&&m>h){f=!0;break}}if(f)break}return d},u={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},l=32,c=4,p=c,h=new Map,m=new Map,f=500;let d=null;async function g(){d&&(0,r.cj)()||((0,r.cj)()||await(0,r.ck)(),d=await Promise.all([n.e(6239),n.e(2518)]).then(n.bind(n,2518)))}function y(t,e,n){return i(t.spatialReference,e),n?(0,r.cs)(e,t.spatialReference,t):(0,r.cs)(t.spatialReference,e,t)}function b(t,e,n,s=null){const o=t.spatialReference;if(!o||!e||o.equals(e))return t;i(o,e,s);const a=n.center,u=new r.bn({xmin:a.x-t.x/2,xmax:a.x+t.x/2,ymin:a.y-t.y/2,ymax:a.y+t.y/2,spatialReference:o}),l=(0,r.cl)(u,e,s),c=O(e);return null==l||null!=c&&l.width>=c?x(t,o,e):{x:l.width,y:l.height}}function x(t,e,n){const s=(0,r.cm)(e)/(0,r.cm)(n);return{x:t.x*s,y:t.y*s}}function w(t,e,n){const{spatialReference:s}=n;if(!s||!e||s.equals(e))return t;if(s.isGeographic&&e.isGeographic)return x(t,s,e);if(i(s,e),!d)throw new r.s("raster-projection-helper:project-dataset-resolution","geometry engine is not loaded");let{x:o,y:a}=t;const u=(o+a)/2*(0,r.cm)(s);let l=1;u>30&&(l=30/u,o*=l,a*=l);const c=256,p=o*c/2,h=a*c/2,{x:m,y:f}=n.center,g=[];for(let r=0;r<=c;r++)g.push([m-p,f-h+r*a]);for(let r=1;r<=c;r++)g.push([m-p+r*o,f+h]);for(let r=1;r<=c;r++)g.push([m+p,f+h-r*a]);for(let r=1;r<c;r++)g.push([m+p-r*o,f-h]);g.push(g[0]);const y=new r.a$({rings:[g],spatialReference:s}),b=(0,r.cl)(y,e);if(!b)return x(t,s,e);const w=b.extent,v=O(e);if(null==w||null!=v&&w.width>=v)return x(t,s,e);const A=d.planarArea(b),T=o*a*c*c,P=Math.sqrt(A/T)/l,R={x:w.width/l/c,y:w.height/l/c},F={x:o*P,y:a*P},N=R.x*R.y;return Math.abs(N-F.x*F.y)/N<.1?R:F}function v(t,e=.01){return(0,r.cm)(t)?e/(0,r.cm)(t):0}function A(t,e,n=null,s=!0){const o=t.spatialReference;if(o.equals(e))return t;i(o,e,n);const a=(0,r.cl)(t,e,n);return s&&a&&T([t],[a],o,e),a}function T(t,e,n,s){const r=E(n,!0),o=E(s,!0),i=v(n,f),a=v(s,f);if(i&&null!=r&&null!=o)for(let u=0;u<t.length;u++){const n=e[u];if(!n)continue;const{x:s}=t[u],{x:l}=n;l>=o[1]-a&&Math.abs(s-r[0])<i?n.x-=o[1]-o[0]:l<=o[0]+a&&Math.abs(s-r[1])<i&&(n.x+=o[1]-o[0])}}function P(t){const{inSR:e,outSR:n,datumTransformation:s,preferPE:r}=t;if(e.equals(n)){const{points:e}=S(t,null);return e}return e.isWebMercator&&n.isWGS84||e.isWGS84&&n.isWebMercator?N(t):i(e,n,s)&&r&&(e.isGeographic||null!=C(e))?F(t):R(t)}function R(t){const{points:e}=S(t,null),{inSR:n,outSR:s,datumTransformation:o}=t,i=e.map((t=>new r.D(t[0],t[1],n))),a=(0,r.cl)(i,s,o);return o&&T(i,a,n,s),a.map((t=>t?[t.x,t.y]:[NaN,NaN]))}function F(t){const{inSR:e,outSR:n,datumTransformation:s}=t,o=C(e),{points:i,mask:a}=S(t,o);if(!e.isGeographic){const t=e.wkid?r.cn.coordsys(e.wkid):r.cn.fromString(e.isGeographic?r.co.PE_TYPE_GEOGCS:r.co.PE_TYPE_PROJCS,e.wkt2||e.wkt);r.cp.projToGeog(t,i.length,i)}if(null!=s&&s.steps.length){let t;if(n.isGeographic&&(t=i.map((([t])=>t>179.9955?1:t<-179.9955?-1:0))),s.steps.forEach((t=>{const e=t.wkid?r.cn.geogtran(t.wkid):r.cn.fromString(r.co.PE_TYPE_GEOGTRAN,t.wkt);r.cq.geogToGeog(e,i.length,i,null,t.isInverse?r.co.PE_TRANSFORM_2_TO_1:r.co.PE_TRANSFORM_1_TO_2)})),t)for(let e=0;e<i.length;e++){const n=t[e],s=i[e][0],r=s>179.9955?1:s<-179.9955?-1:0;n&&r&&n!==r&&(i[e][0]=n>0?s+360:s-360)}}if(!n.isGeographic){const t=C(n,!0),e=null!=t&&t.isEnvelope?[t.bbox[1],t.bbox[3]]:[-90,90];I(i,e);const s=n.wkid?r.cn.coordsys(n.wkid):r.cn.fromString(n.isGeographic?r.co.PE_TYPE_GEOGCS:r.co.PE_TYPE_PROJCS,n.wkt2||n.wkt);r.cp.geogToProj(s,i.length,i)}let u=i;if(a&&i.length!==a.length){u=[];for(let t=0,e=0;t<a.length;t++)a[t]?u.push(i[e++]):u.push([NaN,NaN])}return u}function N(t){const{cols:e,rows:n,xres:s,yres:o,usePixelCenter:i,inSR:a,outSR:u}=t;let{xmin:l,ymax:c}=t;i&&(l+=s/2,c-=o/2);const p=[],h=[],m=Math.max(e,n);for(let d=0;d<m;d++){const t=l+s*Math.min(e,d),i=c-o*Math.min(n,d),m=(0,r.cl)(new r.D({x:t,y:i,spatialReference:a}),u);d<=e&&p.push(m.x),d<=n&&h.push(m.y)}const f=[];for(let r=0;r<e;r++)for(let t=0;t<n;t++)f.push([p[r],h[t]]);return f}function C(t,e=!1){let n=t.wkid||t.wkt2||t.wkt;if(!n||t.isGeographic)return null;if(n=String(n),h.has(n)){const t=h.get(n);return e?t?.gcs:t?.pcs}const s=t.wkid?r.cn.coordsys(t.wkid):r.cn.fromString(t.isGeographic?r.co.PE_TYPE_GEOGCS:r.co.PE_TYPE_PROJCS,t.wkt2||t.wkt),o=k(s,v(t,1e-4)),i=k(s,0,!0);return h.set(n,{pcs:o,gcs:i}),e?i:o}function k(t,e=0,n=!1){const s=r.cr.generate(t),o=n?t.horizonGcsGenerate():t.horizonPcsGenerate();if(!s||!o?.length)return null;let i=!1,a=o.find((t=>1===t.getInclusive()&&1===t.getKind()));if(!a){if(a=o.find((t=>1===t.getInclusive()&&0===t.getKind())),!a)return null;i=!0}const u=n?0:(2===s.getNorthPoleLocation()?1:0)|(2===s.getSouthPoleLocation()?2:0),l=s.isPannableRectangle(),c=a.getCoord();if(i)return{isEnvelope:i,isPannable:l,vertices:c,coef:null,bbox:[c[0][0]-e,c[0][1]-e,c[1][0]+e,c[1][1]+e],poleLocation:u};let p=0;const h=[];let[m,f]=c[0],[d,g]=c[0];for(let r=0,y=c.length;r<y;r++){p++,p===y&&(p=0);const[t,e]=c[r],[n,s]=c[p];if(s===e)h.push([t,n,e,s,2]);else{const r=(n-t)/(s-e||1e-4),o=t-r*e;e<s?h.push([r,o,e,s,0]):h.push([r,o,s,e,1])}m=m<t?m:t,f=f<e?f:e,d=d>t?d:t,g=g>e?g:e}return{isEnvelope:!1,isPannable:l,vertices:c,coef:h,bbox:[m,f,d,g],poleLocation:u}}function S(t,e){const n=[],{cols:s,rows:r,xres:o,yres:i,usePixelCenter:a}=t;let{xmin:u,ymax:l}=t;if(a&&(u+=o/2,l-=i/2),null==e){for(let t=0;t<s;t++)for(let e=0;e<r;e++)n.push([u+o*t,l-i*e]);return{points:n}}const c=new Uint8Array(s*r);if(e.isEnvelope){const{bbox:[t,a,p,h]}=e;for(let m=0,f=0;m<s;m++){const s=u+o*m,d=e.isPannable||s>=t&&s<=p;for(let t=0;t<r;t++,f++){const e=l-i*t;d&&e>=a&&e<=h&&(n.push([s,e]),c[f]=1)}}return{points:n,mask:c}}const p=e.coef,h=[];for(let m=0;m<r;m++){const t=l-i*m,e=[],n=[];for(let r=0;r<p.length;r++){const[s,o,i,a,u]=p[r];if(t===i&&i===a)e.push(s),e.push(o),n.push(2),n.push(2);else if(t>=i&&t<=a){const r=s*t+o;e.push(r),n.push(u)}}let s=e;if(e.length>2){let t=2===n[0]?0:n[0],r=e[0];s=[];for(let o=1;o<n.length;o++)2===n[o]&&o!==n.length-1||(n[o]!==t&&(s.push(0===t?Math.min(r,e[o-1]):Math.max(r,e[o-1])),t=n[o],r=e[o]),o===n.length-1&&s.push(0===n[o]?Math.min(r,e[o]):Math.max(r,e[o])));s.sort(((t,e)=>t-e))}else e[0]>e[1]&&(s=[e[1],e[0]]);h.push(s)}for(let m=0,f=0;m<s;m++){const t=u+o*m;for(let e=0;e<r;e++,f++){const s=l-i*e,r=h[e];if(2===r.length)t>=r[0]&&t<=r[1]&&(n.push([t,s]),c[f]=1);else if(r.length>2){let e=!1;for(let n=0;n<r.length;n+=2)if(t>=r[n]&&t<=r[n+1]){e=!0;break}e&&(n.push([t,s]),c[f]=1)}}}return{points:n,mask:c}}function I(t,e){const[n,s]=e;for(let r=0;r<t.length;r++){const e=t[r][1];(e<n||e>s)&&(t[r]=[NaN,NaN])}}function M(t,e){const n=O(t[0].spatialReference);if(t.length<2||null==n||(e=e??v(t[0].spatialReference),1===(t=t.filter((t=>t.width>e))).length))return t[0];let{xmin:s,xmax:o,ymin:i,ymax:a}=t[0];for(let r=1;r<t.length;r++){const e=t[r];o=e.xmax+n*r,i=Math.min(i,e.ymin),a=Math.max(a,e.ymax)}return new r.bn({xmin:s,xmax:o,ymin:i,ymax:a,spatialReference:t[0].spatialReference})}function _(t,e,n=null,o=!0){const i=t.spatialReference;if(i.equals(e))return t;const a=D(t),u=O(i,!0),l=O(e);if(0===a||null==u||null==l){const a=G(t,e,n,o);if(null==u&&null!=l&&Math.abs(a.width-l)<v(e)&&(0,r.cj)()){const n=C(i);if(null!=n&&n.poleLocation===s.None&&t.width<(n.bbox[2]-n.bbox[0])/2)return B(t,e)||a}return a}const c=t.clone().normalize();if(1===c.length&&t.xmax<u&&t.xmax-u/2>v(i)){const{xmin:e,xmax:n}=t;for(let s=0;s<=a;s++){const o=0===s?e:-u/2,l=s===a?n-u*s:u/2;c[s]=new r.bn({xmin:o,xmax:l,ymin:t.ymin,ymax:t.ymax,spatialReference:i})}}return M(c.map((t=>G(t,e,n,o))).filter(r.ci))}function j(t,e,n){if("extent"===t.type){const{xmin:e,ymin:n,xmax:s,ymax:o,spatialReference:i}=t;t=new r.a$({rings:[[[e,o],[s,o],[s,n],[e,n],[e,o]]],spatialReference:i})}return t.spatialReference.equals(e)?t:(i(t.spatialReference,e,n),(0,r.cl)(t,e,n))}function B(t,e){const n=O(e);if(null==n)return null;let{xmin:s,ymin:o,xmax:i,ymax:a}=t;const u=t.spatialReference,l=new r.a$({spatialReference:u,rings:[[[s,o],[i,o],[i,a],[s,a],[s,o]]]}),c=(0,r.cl)(l,e);if(2!==c.rings.length||!c.rings[0].length||!c.rings[1].length)return null;const{rings:p}=c,h=v(u),m=new r.bn({spatialReference:e});for(let r=0;r<2;r++){s=i=p[r][0][0],o=a=p[r][0][1];for(let t=0;t<p[r].length;t++)s=s>p[r][t][0]?p[r][t][0]:s,i=i<p[r][t][0]?p[r][t][0]:i,o=o>p[r][t][1]?p[r][t][1]:o,a=a<p[r][t][1]?p[r][t][1]:a;if(0===r)m.ymin=o,m.ymax=a,m.xmin=s,m.xmax=i;else if(m.ymin=Math.min(m.ymin,o),m.ymax=Math.max(m.ymax,a),Math.abs(i-n/2)<h)m.xmin=s,m.xmax=m.xmax+n;else{if(!(Math.abs(s+n/2)<h))return null;m.xmax=i+n}}return m}function G(t,e,n=null,s=!0,o=!0){const a=t.spatialReference;if(a.equals(e)||!e)return t;i(a,e,n);const u=(0,r.cl)(t,e,n);if(o&&e.isWebMercator&&u&&(u.ymax=Math.min(20037508.342787,u.ymax),u.ymin=Math.max(-20037508.342787,u.ymin),u.ymin>=u.ymax))return null;if(!s||!u)return u;const l=E(a,!0),c=E(e,!0);if(null==l||null==c)return u;const p=v(a,.001),h=v(a,f),m=v(e,.001);if(Math.abs(u.xmin-c[0])<m&&Math.abs(u.xmax-c[1])<m){const s=Math.abs(t.xmin-l[0]),o=Math.abs(l[1]-t.xmax);if(s<p&&o>h){u.xmin=c[0];const s=[];s.push(new r.D(t.xmax,t.ymin,a)),s.push(new r.D(t.xmax,(t.ymin+t.ymax)/2,a)),s.push(new r.D(t.xmax,t.ymax,a));const o=s.map((t=>A(t,e,n))).filter((t=>!isNaN(t?.x))).map((t=>t.x));u.xmax=Math.max.apply(null,o)}if(o<p&&s>h){u.xmax=c[1];const s=[];s.push(new r.D(t.xmin,t.ymin,a)),s.push(new r.D(t.xmin,(t.ymin+t.ymax)/2,a)),s.push(new r.D(t.xmin,t.ymax,a));const o=s.map((t=>A(t,e,n))).filter((t=>!isNaN(t?.x))).map((t=>t.x));u.xmin=Math.min.apply(null,o)}}else{const t=v(e,.001);Math.abs(u.xmin-c[0])<t&&(u.xmin=c[0]),Math.abs(u.xmax-c[1])<t&&(u.xmax=c[1])}return u}function O(t,e=!1){if(!t)return null;const n=e?20037508.342787:20037508.342788905;return t.isWebMercator?2*n:t.wkid&&t.isGeographic?360:2*u[t.wkid]||null}function E(t,e=!1){if(t.isGeographic)return[-180,180];const n=O(t,e);return null!=n?[-n/2,n/2]:null}function z(t,e,n,s){let r=(t-e)/n;return r-Math.floor(r)!=0?r=Math.floor(r):s&&(r-=1),r}function D(t,e=!1){const n=O(t.spatialReference);if(null==n)return 0;const s=e?0:-n/2,r=v(t.spatialReference),o=!e&&Math.abs(t.xmax-n/2)<r?n/2:t.xmax,i=!e&&Math.abs(t.xmin+n/2)<r?-n/2:t.xmin;return z(o,s,n,!0)-z(i,s,n,!1)}function H(t){const e=t.storageInfo.origin.x,n=O(t.spatialReference,!0);if(null==n)return{originX:e,halfWorldWidth:null,pyramidsInfo:null};const s=n/2,{nativePixelSize:r,storageInfo:o,extent:i}=t,{maximumPyramidLevel:a,blockWidth:u,pyramidScalingFactor:l}=o;let c=r.x;const p=[],h=null!=t.transform&&"gcs-shift"===t.transform.type,m=e+(h?0:s),f=h?n-e:s-e;for(let d=0;d<=a;d++){const t=(i.xmax-e)/c/u,n=t-Math.floor(t)==0?t:Math.ceil(t),s=f/c/u,r=s-Math.floor(s)==0?s:Math.ceil(s),o=Math.floor(m/c/u),a=Math.round(m/c)%u,h=(u-Math.round(f/c)%u)%u;p.push({resolutionX:c,blockWidth:u,datasetColumnCount:n,worldColumnCountFromOrigin:r,leftMargin:a,rightPadding:h,originColumnOffset:o}),c*=l}return{originX:e,halfWorldWidth:s,pyramidsInfo:p,hasGCSSShiftTransform:h}}function U(t){if(!t||t.isGeographic)return t;const e=String(t.wkid||t.wkt2||t.wkt);let n;return m.has(e)?n=m.get(e):(n=(t.wkid?r.cn.coordsys(t.wkid):r.cn.fromString(r.co.PE_TYPE_PROJCS,t.wkt2||t.wkt)).getGeogcs().getCode(),m.set(e,n)),new r.aY({wkid:n})}function V(t){const e=t.isAdaptive&&null==t.spacing;let n=t.spacing||[l,l],s=L(t),r={cols:s.size[0]+1,rows:s.size[1]+1};const i=s.outofBoundPointCount>0&&s.outofBoundPointCount<s.offsets.length/2;let u=s.outofBoundPointCount===s.offsets.length/2||e&&i?[0,0]:a(s.offsets,r,n,p);const h=(u[0]+u[1])/2,m=t.projectedExtent.spatialReference,f=t.srcBufferExtent.spatialReference;if(e&&(i||h>p)&&(o(m,f,t.datumTransformation)&&(m.isGeographic||C(m)),n=[c,c],s=L({...t,spacing:n}),r={cols:s.size[0]+1,rows:s.size[1]+1},u=a(s.offsets,r,n,p)),s.error=u,n[0]>1&&(s.coefficients=W(s.offsets,r,i)),t.includeGCSGrid&&!m.isGeographic&&!m.isWebMercator)if(f.isGeographic)s.gcsGrid={offsets:s.offsets,coefficients:s.coefficients,spacing:n};else{const e=C(m);if(null!=e&&!e.isEnvelope){const e=U(m),o=_(t.projectedExtent,e),{offsets:a}=L({...t,srcBufferExtent:o,spacing:n}),u=W(a,r,i);s.gcsGrid={offsets:a,coefficients:u,spacing:n}}}return s}function L(t){const{projectedExtent:e,srcBufferExtent:n,pixelSize:s,datumTransformation:o,rasterTransform:a}=t,u=e.spatialReference,p=n.spatialReference,h=i(u,p),{xmin:m,ymin:d,xmax:g,ymax:y}=e,b=O(p),x=null!=b&&(t.hasWrapAround||"gcs-shift"===a?.type),w=t.spacing||[l,l],A=w[0]*s.x,T=w[1]*s.y,R=1===w[0],F=Math.ceil((g-m)/A-.1/w[0])+(R?0:1),N=Math.ceil((y-d)/T-.1/w[1])+(R?0:1),k=P({cols:F,rows:N,xmin:m,ymax:y,xres:A,yres:T,inSR:u,outSR:p,datumTransformation:o,preferPE:w[0]<=c,usePixelCenter:R}),S=[];let I,M=0;const _=R?-1:NaN,{xmin:j,xmax:B,ymax:G,width:E,height:z}=n,D=v(p,f),H=null!=b&&j>0&&B>b/2;let U=!1;if(h){const t=C(u);U=null!=t&&t.poleLocation>0}for(let i=0;i<F;i++){const t=[];for(let e=0;e<N;e++){let n=k[i*N+e];if(x&&n[0]>B&&n[0]>b/2-D?n[0]-=b:x&&0===i&&n[0]<0&&H&&!a&&(n[0]+=b),!n||isNaN(n[0])||isNaN(n[1]))S.push(_),S.push(_),t.push(null),M++;else{if(a){const t=a.inverseTransform(new r.D({x:n[0],y:n[1],spatialReference:p}));n=[t.x,t.y]}t.push(n),i>0&&x&&I[e]&&n[0]<I[e][0]&&(n[0]+=b,U&&n[0]>B&&n[0]>b&&(n[0]-=b)),S.push((n[0]-j)/E),S.push((G-n[1])/z)}}I=t}return{offsets:S,error:null,coefficients:null,outofBoundPointCount:M,spacing:w,size:R?[F,N]:[F-1,N-1]}}function W(t,e,n){const{cols:s,rows:r}=e,o=new Float32Array((s-1)*(r-1)*2*6),i=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),a=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let u=0;u<s-1;u++){for(let e=0;e<r-1;e++){let n=u*r*2+2*e;const l=t[n],c=t[n+1],p=t[n+2],h=t[n+3];n+=2*r;const m=t[n],f=t[n+1],d=t[n+2],g=t[n+3];let y=0,b=12*(e*(s-1)+u);for(let t=0;t<3;t++)o[b++]=i[y++]*l+i[y++]*p+i[y++]*d;y=0;for(let t=0;t<3;t++)o[b++]=i[y++]*c+i[y++]*h+i[y++]*g;y=0;for(let t=0;t<3;t++)o[b++]=a[y++]*l+a[y++]*m+a[y++]*d;y=0;for(let t=0;t<3;t++)o[b++]=a[y++]*c+a[y++]*f+a[y++]*g}if(n)for(let t=0;t<o.length;t++)isNaN(o[t])&&(o[t]=-1)}return o}function q(t,e){const n=t.clone().normalize();return 1===n.length?n[0]:M(n,e)}function J(t){const{spatialReference:e}=t,n=(0,r.b3)(e);if(!n)return t;const[s,o]=n.valid,i=o-s;let a=0;if(t.xmin<s){const e=s-t.xmin;a=Math.ceil(e/i)}else if(t.xmin>o){const e=t.xmin-o;a=-Math.ceil(e/i)}return new r.bn({spatialReference:t.spatialReference,xmin:t.xmin+a*i,ymin:t.ymin,xmax:t.xmax+a*i,ymax:t.ymax})}function $(t,e,n){const{storageInfo:s,pixelSize:o}=e;let i=0,a=!1;const{pyramidResolutions:u}=s,l="mixed"===s.tileInfo.format?.toLowerCase()?Math.max(1,Math.min(3,s.tileInfo.dpi/96)):1,c=(t.x+t.y)/2/l;if(null!=u&&u.length){const t=u[u.length-1],s=(t.x+t.y)/2,l=(o.x+o.y)/2;if(c<=l)i=0;else if(c>=s)i=u.length,a=c/s>8;else{let t,e=l;for(let s=1;s<=u.length;s++){if(t=(u[s-1].x+u[s-1].y)/2,c<=t){c===t?i=s:"down"===n?(i=s-1,a=c/e>8):i="up"===n||c-e>t-c||c/e>2?s:s-1;break}e=t}}const p=0===i?o:u[i-1];return a&&Math.min(p.x,p.y)*(0,r.cm)(e.spatialReference)>19567&&(a=!1),{pyramidLevel:i,pyramidResolution:new r.D({x:p.x,y:p.y,spatialReference:e.spatialReference}),excessiveReading:a}}const p=Math.log(t.x/o.x)/Math.LN2,h=Math.log(t.y/o.y)/Math.LN2,m=e.storageInfo.maximumPyramidLevel||0;i="down"===n?Math.floor(Math.min(p,h)):"up"===n?Math.ceil(Math.max(p,h)):Math.round((p+h)/2),i<0?i=0:i>m&&(a=i>m+3,i=m);const f=2**i;return{pyramidLevel:i,pyramidResolution:new r.D({x:f*e.nativePixelSize.x,y:f*e.nativePixelSize.y,spatialReference:e.spatialReference}),excessiveReading:a}}function Y(t,e){const{pixelSize:n,extent:s}=t,r=y(s,e,!1);return _(q(s,(n.x+n.y)/16),e,r)}function K(t,e,n){const s=n?.tileSize,o=n?.alignGlobalDatasetWithAGOL,{extent:i,spatialReference:a,pixelSize:u}=t,l=w(u,e,i);if(null==l)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const c=(l.x+l.y)/2,p=(0,r.cm)(e),h=c*p*96*39.37,m=e.isGeographic?256/s*295828763.7958547:256/s*591657527.591555;let f="vector-magdir"===t.dataType||"vector-uv"===t.dataType;const d=Y(t,e),g=Math.min(Math.ceil(Math.log(Math.min(t.width,t.height)/32)/Math.LN2),Math.ceil(Math.log(m/2/h)/Math.LN2));if(!f&&o&&(e.isGeographic||e.isWebMercator)){const n=O(e);if(f=D(d)>0||null!=n&&d.width>n/4,!f&&null!=n){let e=-1;if(g<3)e=2**g*c*s;else if(t.storageInfo){const{maximumPyramidLevel:n=0,pyramidScalingFactor:r=2}=t.storageInfo;e=r**n*c*s}const r=Math.ceil(n/e);f=1===r||2===r&&n/2-d.xmax<e}}let y,b=h;const x=1.001,v=Math.min(2,Math.max(1.414,t.storageInfo?.pyramidScalingFactor||2));if(f){b=m;const n=e.isGeographic?1341104507446289e-21:.29858214164761665,s=n*(96*p*39.37),o=e.isGeographic?4326:3857;y=w({x:n,y:n},a,Y(t,new r.aY({wkid:o}))),y.x*=b/s,y.y*=b/s}else{y={x:u.x,y:u.y};let t=0;for(;b<m*(x/2)&&t<g;)t++,b*=v,y.x*=v,y.y*=v;Math.max(b,m)/Math.min(b,m)<=x&&(b=m)}const A=[b],T=[{x:y.x,y:y.y}],P=70.5310735,R=Math.min(P,h)/x;for(;b>=R;)b/=v,y.x/=v,y.y/=v,A.push(b),T.push({x:y.x,y:y.y});return{projectedPixelSize:l,scales:A,srcResolutions:T,isCustomTilingScheme:!f}}}}]);
//# sourceMappingURL=5209.f93764ad.js.map