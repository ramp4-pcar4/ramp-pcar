"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[488],{50488:function(e,t,i){i.r(t),i.d(t,{default:function(){return d}});var r=i(44444);class s{constructor(e,t,i,r){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=i,this.noDataValue=r)}get hasNoDataValues(){if(null==this._hasNoDataValues){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}_ensureBounds(){if(null!=this._minValue)return;const{noDataValue:e,values:t}=this;let i=1/0,r=-1/0,s=!0;for(const a of t)a===e?this._hasNoDataValues=!0:(i=a<i?a:i,r=a>r?a:r,s=!1);s?(this._minValue=0,this._maxValue=0):(this._minValue=i,this._maxValue=r>-3e38?r:0)}}class a{constructor(e,t,i,s,a={}){this._mainMethod=t,this._transferLists=i,this._listeners=[],this._promise=(0,r.f2)(e,{...a,schedule:s}).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,a.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>r.G.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${t}`)))}on(e,t){const i={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(i),this._connectListener(i),(0,r.bh)((()=>{i.removed=!0,(0,r.fs)(this._listeners,i),this._thread&&null!=i.threadHandle&&i.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null,this._listeners.length=0,this._transferLists={}}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,i){if(this._thread){const r=this._transferLists[e],s=r?r(t):[];return this._thread.invoke(e,t,{transferList:s,signal:i})}return this._promise?this._promise.then((()=>((0,r.J)(i),this.invokeMethod(e,t,i)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}class o extends a{constructor(e=null){super("LercWorker","_decode",{_decode:e=>[e.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(l.forEach(((e,t)=>{e===this&&l.delete(t)})),this.destroy())}}const l=new Map;function n(e=null){let t=l.get(e);return t||(null!=e?(t=new o((t=>e.immediate.schedule(t))),l.set(e,t)):(t=new o,l.set(null,t))),++t.ref,t}let h=class extends((0,r.jP)((0,r.eq)((0,r.ec)((0,r.ed)((0,r.ef)(r.ep)))))){constructor(...e){super(...e),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=n()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,r.jQ)(this._lercDecoder)}readCapabilities(e,t){const i=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));return i?{operations:{supportsTileMap:i.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{if(e.typeKeywords)for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new r.s("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(r.B).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,a){const o=null!=(a=a||{signal:null}).signal?a.signal:a.signal=(new AbortController).signal,l={responseType:"array-buffer",signal:o},n={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,a))).then((()=>(0,r.U)(this.getTileUrl(e,t,i),l))).then((e=>this._lercDecoder.decode(e.data,n,o))).then((e=>new s(e)))}getTileUrl(e,t,i){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,a=(0,r.gR)({...this.parsedUrl.query,blankTile:!s&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${i}${a?"?"+a:""}`}async queryElevation(e,t){const{ElevationQuery:s}=await i.e(3822).then(i.bind(i,43822));return(0,r.J)(t),(new s).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:s}=await i.e(3822).then(i.bind(i,43822));return(0,r.J)(t),(new s).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,r):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await(0,r.U)(this.parsedUrl.path,t);i.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[u]}};(0,r.bt)([(0,r.bu)({readOnly:!0})],h.prototype,"capabilities",void 0),(0,r.bt)([(0,r.eg)("service","capabilities",["capabilities"])],h.prototype,"readCapabilities",null),(0,r.bt)([(0,r.bu)({json:{read:{source:"copyrightText"}}})],h.prototype,"copyright",void 0),(0,r.bt)([(0,r.bu)({readOnly:!0,type:r.iZ})],h.prototype,"heightModelInfo",void 0),(0,r.bt)([(0,r.bu)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],h.prototype,"path",void 0),(0,r.bt)([(0,r.bu)({type:["show","hide"]})],h.prototype,"listMode",void 0),(0,r.bt)([(0,r.bu)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],h.prototype,"minScale",void 0),(0,r.bt)([(0,r.bu)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],h.prototype,"maxScale",void 0),(0,r.bt)([(0,r.bu)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],h.prototype,"opacity",void 0),(0,r.bt)([(0,r.bu)({type:["ArcGISTiledElevationServiceLayer"]})],h.prototype,"operationalLayerType",void 0),(0,r.bt)([(0,r.bu)()],h.prototype,"sourceJSON",void 0),(0,r.bt)([(0,r.bu)({json:{read:!1},value:"elevation",readOnly:!0})],h.prototype,"type",void 0),(0,r.bt)([(0,r.bu)(r.ej)],h.prototype,"url",void 0),(0,r.bt)([(0,r.bu)()],h.prototype,"version",void 0),(0,r.bt)([(0,r.eg)("version",["currentVersion"])],h.prototype,"readVersion",null),h=(0,r.bt)([(0,r.bv)("esri.layers.ElevationLayer")],h);const u=Symbol("default-fetch-tile");h.prototype.fetchTile[u]=!0;const d=h}}]);
//# sourceMappingURL=488.a3b9a859.js.map