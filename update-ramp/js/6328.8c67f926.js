"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[6328],{66328:function(e,t,r){r.r(t),r.d(t,{createConnection:function(){return f}});var s=r(44444);let o=class extends s.d4.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new s.s("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};(0,s.bt)([(0,s.bu)({readOnly:!0})],o.prototype,"connectionError",null),o=(0,s.bt)([(0,s.bv)("esri.layers.support.StreamConnection")],o);const n=o;var i;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(i||(i={}));let c=class extends n{constructor(e){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._config=e,this._featureZScaler=(0,s.io)(t,o,r),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),null!=this._websocket&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(null==this._websocket)return"disconnected";switch(this._websocket.readyState){case i.CONNECTING:case i.OPEN:return"connected";case i.CLOSING:case i.CLOSED:return"disconnected"}}sendMessageToSocket(e){null!=this._websocket?this._websocket.send(JSON.stringify(e)):this._outstandingMessages.push(e)}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,null!=this._websocket&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const t=(0,s.cC)(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(o){const n=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(s.G.getLogger(this).error(new s.s("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(s.G.getLogger(this).error(new s.s("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,o)),await(0,s.ft)(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=e=>{try{const t=JSON.parse(e.data);this._onMessage(t)}catch(t){return void s.G.getLogger(this).error(new s.s("websocket-connection","Failed to parse message, invalid JSON",{error:t}))}}}_createWebSocket(e){return new Promise(((t,r)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=e=>this._onClose(e),s.onerror=e=>this._onError(e),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=e=>{s.onopen=s.onclose=null,r(e)}}))}async _handshake(e=1e4){const t=this._websocket;if(null==t)return;const r=(0,s.X)(),o=t.onmessage,{filter:n,outFields:i,spatialReference:c}=this._config;return r.timeout(e),t.onmessage=e=>{let a=null;try{a=JSON.parse(e.data)}catch{}a&&"object"==typeof a||(s.G.getLogger(this).error(new s.s("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),r.reject(),this.destroy()),a.spatialReference?.wkid!==c?.wkid&&(s.G.getLogger(this).error(new s.s("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${c.wkid}`,e.data)),r.reject(),this.destroy()),"json"!==a.format&&(s.G.getLogger(this).error(new s.s("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),r.reject(),this.destroy()),n&&a.filter!==n&&s.G.getLogger(this).error(new s.s("websocket-connection","Tried to set filter, but server doesn't support it")),i&&a.outFields!==i&&s.G.getLogger(this).error(new s.s("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=o;for(const r of this._outstandingMessages)t.send(JSON.stringify(r));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:n,outFields:i,format:"json",spatialReference:{wkid:c.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),s.G.getLogger(this).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&s.G.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};(0,s.bt)([(0,s.bu)()],c.prototype,"connectionStatus",null),(0,s.bt)([(0,s.bu)()],c.prototype,"errorString",void 0),c=(0,s.bt)([(0,s.bv)("esri.layers.graphics.sources.connections.WebSocketConnection")],c);const a=1e4,u={maxQueryDepth:5,maxRecordCountFactor:3};let l=class extends c{constructor(e){super({...u,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||s.G.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){if("attributes"in e){let r;try{r=this._enrich(e),null!=this._featureZScaler&&this._featureZScaler(r.geometry)}catch(t){return void s.G.getLogger(this).error(new s.s("geoevent-connection","Failed to parse message",t))}this.onFeature(r)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=(0,s.U)(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:n}=r,i=this._inferWebSocketBaseUrl(o);return(0,s.cC)(`${i}/subscribe`,{outSR:""+t.wkid,token:n})}_inferWebSocketBaseUrl(e){if(1===e.length)return e[0];for(const t of e)if(t.includes("wss"))return t;return s.G.getLogger(this).error(new s.s("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(null==r||null==e&&null==t)return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let n=!1;const i=(0,s.X)(),c=()=>{n||(this.destroyed||this._websocket!==r||s.G.getLogger(this).error(new s.s("geoevent-connection","Server timed out when setting filter")),i.reject())},u=e=>{const t=JSON.parse(e.data);t.filter&&(t.error&&(s.G.getLogger(this).error(new s.s("geoevent-connection","Failed to set service filter",t.error)),this._set("errorString",`Could not set service filter - ${t.error}`),i.reject(t.error)),this._setWebSocketJSONParseHandler(r),n=!0,i.resolve())};return r.onmessage=u,r.send(o),setTimeout(c,a),i.promise}_serializeFilter(e,t){const r={};if(null==e&&null==t)return r;if(e?.geometry)try{const t=(0,s.f1)(e.geometry);if("extent"!==t.type)throw new s.s(`Expected extent but found type ${t.type}`);r.geometry=JSON.stringify(t.shiftCentralMeridian())}catch(o){s.G.getLogger(this).error(new s.s("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return e?.where&&"1 = 1"!==e.where&&"1=1"!==e.where&&(r.where=e.where),null!=t&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],o=this._relatedFeatures.get(r);if(!o)return s.G.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:n,geometry:i}=o;for(const s in n)e.attributes[s]=n[s];return i&&(e.geometry=i),e.geometry||e.centroid||s.G.getLogger(this).error(new s.s("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const n of o.features)this.onFeature(this._enrich(n))}catch(e){s.G.getLogger(this).error(new s.s("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new((await Promise.resolve().then(r.bind(r,44444)).then((e=>e.vF))).default)({url:e}),{capabilities:o}=await t.load(),n=o.query.supportsMaxRecordCountFactor,i=o.query.supportsPagination,c=o.query.supportsCentroid,a=this._config.maxRecordCountFactor,u=t.capabilities.query.maxRecordCount,l=n?u*a:u,h=new s.fv;if(h.outFields=this._config.outFields??["*"],h.where=this._config.filter?.where??"1=1",h.returnGeometry=!0,h.returnExceededLimitFeatures=!0,h.outSpatialReference=s.aY.fromJSON(this._config.spatialReference),c&&(h.returnCentroid=!0),n&&(h.maxRecordCountFactor=a),i)return h.num=l,t.destroy(),this._queryPages(e,h);const d=await(0,s.kQ)(e,h,this._config.sourceSpatialReference);return t.destroy(),d.data}async _queryPages(e,t,r=[],o=0){t.start=null!=t.num?o*t.num:null;const{data:n}=await(0,s.kQ)(e,t,this._config.sourceSpatialReference);return n.exceededTransferLimit&&o<(this._config.maxQueryDepth??0)?(n.features.forEach((e=>r.push(e))),this._queryPages(e,t,r,o+1)):(r.forEach((e=>n.features.push(e))),n)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const e=o.attributes[s];t.set(e,o)}this._relatedFeatures=t}};l=(0,s.bt)([(0,s.bv)("esri.layers.graphics.sources.connections.GeoEventConnection")],l);const h=l;let d=class extends n{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._featureZScaler=(0,s.io)(t,o,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};function g(e,t){if(null==e&&null==t)return null;const r={};return null!=t&&(r.geometry=t),null!=e&&(r.where=e),r}function f(e,t,r,s,o,n,i,a,u){const l={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:g(o,n),maxReconnectionAttempts:i,maxReconnectionInterval:a,customParameters:u};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new c(l):new h(l):new d(l)}(0,s.bt)([(0,s.bu)()],d.prototype,"connectionStatus",void 0),(0,s.bt)([(0,s.bu)()],d.prototype,"errorString",void 0),d=(0,s.bt)([(0,s.bv)("esri.layers.support.ClientSideConnection")],d)}}]);
//# sourceMappingURL=6328.8c67f926.js.map