{"version":3,"file":"js/1865.fcea47e6.js","mappings":"8LAAsH,SAASA,EAAEC,GAAG,MAAMC,EAAED,EAAEE,SAASC,EAAEH,EAAEI,SAASC,EAAEF,EAAE,IAAIG,EAAEC,EAAEC,EAAE,OAAU,MAAHP,IAAUM,EAAEN,EAAEQ,iBAAiBD,GAAE,QAAED,GAAGF,EAAEK,cAAa,QAAET,GAAGI,EAAEH,SAASS,KAAKC,UAAUX,GAAGI,EAAEQ,KAAKL,GAAGL,EAAEW,OAAOT,EAAES,OAAM,QAAEX,EAAEW,OAAOR,EAAEN,EAAEe,qBAAqBd,IAAII,EAAES,MAAMT,EAAEQ,KAAKP,EAAEC,GAAGF,EAAEW,MAAML,KAAKC,UAAUP,EAAEW,KAAKX,EAAEY,yBAAyBN,KAAKC,UAAUP,EAAEY,wBAAwBZ,EAAEa,gBAAgBP,KAAKC,UAAUP,EAAEa,eAAeb,EAAEc,mBAAmBR,KAAKC,UAAUP,EAAEc,kBAAkBnB,EAAEoB,0BAAyB,QAAEb,EAAED,KAAKD,EAAEgB,UAAUhB,EAAEQ,YAAYR,EAAEQ,YAAYR,EAAES,OAAOT,CAAC,CAACiB,eAAeC,EAAEvB,EAAEC,EAAEE,GAAG,OAAOqB,EAAExB,EAAEC,EAAEE,EAAE,CAACmB,eAAeE,EAAExB,EAAEC,EAAEE,EAAE,CAAC,GAAG,MAAME,EAAY,iBAAHL,GAAY,OAAEA,GAAGA,EAAEM,EAAEL,EAAEC,SAAS,CAACD,EAAEC,UAAU,GAAGK,QAAQ,QAAED,EAAE,KAAK,CAACmB,OAAOtB,EAAEsB,SAASjB,EAAED,IAAI,GAAM,MAAHC,KAAWP,EAAEA,EAAEyB,SAASxB,SAASM,GAAG,MAAMmB,GAAE,QAAE,IAAItB,EAAEuB,MAAMC,EAAE,UAAU9B,EAAEE,KAAK,OAAO,QAAE,QAAEI,EAAEyB,KAAK,aAAa,IAAI3B,EAAEyB,MAAM,IAAID,KAAKxB,EAAEyB,QAAQ,CAACN,eAAeS,EAAE/B,EAAEC,EAAEE,GAAG,MAAM6B,KAAK3B,SAASkB,GAAE,QAAEvB,GAAG,KAAEiC,KAAKhC,GAAGE,GAAG,OAAO,KAAE+B,SAAS7B,EAAE,C","sources":["webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/executeBinsQuery-X2ai-A43.js"],"sourcesContent":["import{I as y,a0 as S,bP as f,U as c,aw as l,bT as o,bS as g,a5 as R,gy as m,bq as p,bx as b}from\"./main-DCIX61zy.js\";function q(n){const t=n.geometry,i=n.toJSON(),e=i;let a,r,s;return t!=null&&(r=t.spatialReference,s=o(r),e.geometryType=g(t),e.geometry=JSON.stringify(t),e.inSR=s),i.outSR?(e.outSR=o(i.outSR),a=n.outSpatialReference):t&&(e.outSR=e.inSR,a=r),e.bin&&=JSON.stringify(e.bin),e.quantizationParameters&&=JSON.stringify(e.quantizationParameters),e.outStatistics&&=JSON.stringify(e.outStatistics),e.outTimeReference&&=JSON.stringify(e.outTimeReference),n.defaultSpatialReference&&R(r,a)&&(e.defaultSR=e.inSR,delete e.inSR,delete e.outSR),e}async function J(n,t,i){return N(n,t,i)}async function N(n,t,i={}){const e=typeof n==\"string\"?y(n):n,a=t.geometry?[t.geometry]:[],r=await S(a,null,{signal:i.signal}),s=r?.[0];s!=null&&((t=t.clone()).geometry=s);const u=f({...e.query,f:\"json\",...q(t)});return c(l(e.path,\"queryBins\"),{...i,query:{...u,...i.query}})}async function O(n,t,i){const{data:e}=await J(p(n),m.from(t),i);return b.fromJSON(e)}export{O as executeBinsQuery};\n"],"names":["q","n","t","geometry","i","toJSON","e","a","r","s","spatialReference","geometryType","JSON","stringify","inSR","outSR","outSpatialReference","bin","quantizationParameters","outStatistics","outTimeReference","defaultSpatialReference","defaultSR","async","J","N","signal","clone","u","query","f","path","O","data","from","fromJSON"],"sourceRoot":""}