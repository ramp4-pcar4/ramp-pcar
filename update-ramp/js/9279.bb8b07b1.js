"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[9279],{59279:function(e,t,r){r.r(t),r.d(t,{default:function(){return R}});var s=r(44444),i=r(37537),o=r(53674),n=r(95724),a=r(71215),l=r(96197),p=r(6340),u=r(79597),d=r(95048),c=r(70632),y=r(49399),h=r(75525);function f({associatedLayer:e,serviceUpdateTimeStamp:t}){const r=e?.editingInfo?.lastEditDate,s=e?.serverGens,i=null!=r,o=null!=t,n=i&&o&&t.lastUpdate!==r.getTime();return i&&(n||!o&&s?.minServerGen!==s?.serverGen)}const m=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const e=this.associatedLayer?.timeInfo;if(null==e)return null;const t=e.clone();return(0,s.hl)(t,this.fieldsIndex),t}set timeInfo(e){(0,s.hl)(e,this.fieldsIndex),this._override("timeInfo",e)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(e){this._override("timeExtent",e)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(e){this._override("timeOffset",e)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(e){this._override("datesInUnknownTimezone",e)}async loadTimeInfoFromService(e){const{serviceTimeInfo:t}=this;if(null==t)return;const{startTimeField:r,endTimeField:i}=t;if(null==r&&null==i||f({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const o=async t=>{let s=null;try{s=(await(this.fetchStatistics?.(t,e)))?.stats}catch{}if(null==s)return null;const{minTimeStr:i,min:o,maxTimeStr:n,max:a}=s,l=t===r?i??o:n??a;return null!=l?new Date(l):null},[n,a]=await Promise.all([o(r),o(i)]);if(null!=r&&null==n||null!=i&&null==a)return;const l=new s.fq({start:n,end:a});this.setAtOrigin("timeInfo",new s.jH({endField:i,startField:r,fullTimeExtent:l}),"service")}};return(0,s.bt)([(0,s.bu)({type:s.jH,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),(0,s.bt)([(0,s.bu)({type:s.fq,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),(0,s.bt)([(0,s.bu)({type:s.mY,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),(0,s.bt)([(0,s.bu)({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),(0,s.bt)([(0,s.bu)({type:g,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=(0,s.bt)([(0,s.bv)("esri.layers.mixins.TemporalSceneLayer")],t),t};let g=class extends s.bw{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};(0,s.bt)([(0,s.bu)({type:String})],g.prototype,"endTimeField",void 0),(0,s.bt)([(0,s.bu)({type:String})],g.prototype,"startTimeField",void 0),g=(0,s.bt)([(0,s.bv)("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],g);let b=class extends s.bw{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};var v;(0,s.bt)([(0,s.bu)({type:String,json:{read:!0,write:!0}})],b.prototype,"name",void 0),(0,s.bt)([(0,s.bu)({type:String,json:{read:!0,write:!0}})],b.prototype,"field",void 0),(0,s.bt)([(0,s.bu)({type:[Number],json:{read:!0,write:!0}})],b.prototype,"currentRangeExtent",void 0),(0,s.bt)([(0,s.bu)({type:[Number],json:{read:!0,write:!0}})],b.prototype,"fullRangeExtent",void 0),(0,s.bt)([(0,s.bu)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],b.prototype,"type",void 0),b=(0,s.bt)([(0,s.bv)("esri.layers.support.RangeInfo")],b);let w=v=class extends((0,s.e7)(s.a8.ofType(s.a$))){constructor(e){super(e)}clone(){return new v(this.items.map((e=>e.clone())))}write(e,t){return this.toJSON(t)}toJSON(e){const t=e?.layer?.spatialReference;return t?this.toArray().map((r=>{if(!t.equals(r.spatialReference)){if(!(0,s.bD)(r.spatialReference,t))return e?.messages?.push(new s.dG("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const i=new s.a$;(0,s.jf)(r,i,t),r=i}const i=r.toJSON(e);return delete i.spatialReference,i})).filter((e=>null!=e)):(e?.messages?.push(new s.dG("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((t=>t.toJSON(e))))}static fromJSON(e,t){const r=new v;return e.forEach((e=>r.add(s.a$.fromJSON(e,t)))),r}};w=v=(0,s.bt)([(0,s.bv)("esri.layers.support.PolygonCollection")],w);const I=w;var S;let F=S=class extends s.bw{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new I,this._geometriesSource=null}initialize(){this.addHandles((0,s.c9)((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),s.eL))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=I.fromJSON(e,r):this._geometriesSource={url:(0,s.p)(e,r),context:r}}async loadGeometries(e,t){if(null==this._geometriesSource)return;const{url:r,context:i}=this._geometriesSource,o=await(0,s.U)(r,{responseType:"json",signal:t?.signal}),n=e.toJSON(),a=o.data.map((e=>({...e,spatialReference:n})));this.geometries=I.fromJSON(a,i),this._geometriesSource=null}clone(){const e=new S({geometries:(0,s.T)(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};(0,s.bt)([(0,s.bu)({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],F.prototype,"spatialRelationship",void 0),(0,s.bt)([(0,s.bu)({type:I,nonNullable:!0,json:{write:!0}}),(0,d.j)({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],F.prototype,"geometries",void 0),(0,s.bt)([(0,s.eg)(["web-scene","portal-item"],"geometries")],F.prototype,"readGeometries",null),F=S=(0,s.bt)([(0,s.bv)("esri.layers.support.SceneFilter")],F);const L=F;async function x({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:i,path:o,customParameters:n,apiKey:a,signal:l}){if(null==t)throw new s.s(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const p=i.get(e);if(null==p)throw new s.s(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const u=t.find((e=>e.name===p.name));if(null==u)throw new s.s(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const d=(0,s.aw)(o,u.href),{data:c}=await(0,s.U)(d,{query:{f:"json",...n,token:a},responseType:"json",signal:l});return c}async function T(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(j(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function j(e){const{BlobReader:t,ZipReader:s,BlobWriter:i}=await r.e(776).then(r.bind(r,30776)),o=[];return(await new s(new t(e)).getEntries()).forEach((e=>{if(e.directory||/^__MACOS/i.test(e.filename))return;const t=new i,r=e.getData?.(t).then((t=>new File([t],e.filename)));r&&o.push(r)})),Promise.all(o)}const A=new Set(["3DObject","Point"]),E=(0,s.hy)();let O=class extends(m((0,s.j8)((0,n.R)((0,s.eq)((0,s.ec)((0,s.ed)((0,s.ee)((0,s.ef)((0,s.er)((0,s.es)((0,s.cQ)(s.ep)))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new s.a8,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=(0,s.ch)(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&"inherited"!==r.type?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get attributeTableTemplate(){return this.associatedLayer?.attributeTableTemplate??null}get fieldsIndex(){return new s.db(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:p.p.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&(0,s.ju)(this.associatedLayer)}get geometryType(){return _[this.profile]||"mesh"}set renderer(e){(0,s.hk)(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=e??l.t;const{query:t,queryRelated:r,editing:{supportsGlobalId:s,supportsRollbackOnFailure:i,supportsUploadWithItemId:o,supportsGeometryUpdate:n,supportsReturnServiceEditsInSourceSpatialReference:a},data:{supportsZ:p,supportsM:u,isVersioned:d,supportsAttachment:c},operations:{supportsEditing:y,supportsAdd:h,supportsUpdate:f,supportsDelete:m,supportsQuery:g,supportsQueryAttachments:b,supportsAsyncConvert3D:v}}=e,w=e.operations.supportsChangeTracking,I=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:r,editing:{supportsGlobalId:s,supportsReturnServiceEditsInSourceSpatialReference:a,supportsRollbackOnFailure:i,supportsGeometryUpdate:I&&n,supportsUploadWithItemId:o},data:{supportsAttachment:c,supportsZ:p,supportsM:u,isVersioned:d},operations:{supportsQuery:g,supportsQueryAttachments:b,supportsEditing:y&&w,supportsAdd:I&&h&&w,supportsDelete:I&&m&&w,supportsUpdate:f&&w,supportsAsyncConvert3D:v}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return null!=r&&P[r]?P[r]:(s.G.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=null!=e?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(s.B),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await(0,s.v)(this,{origin:"service"},t),(0,s.hk)(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){s.G.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new s.fv;return"mesh"===this.geometryType?this.associatedLayer?.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new s.s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new s.s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=(0,s.mZ)(this.fieldsIndex,await(0,h.n)(this,(0,h.p)(this)));return(0,y.V)(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||0===r.length)throw new s.s("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new s.a1;return i.attributes=r[0],i.layer=this,i.sourceLayer=this,i}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(s.G.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,s.hm)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new s.s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new s.s("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(n.V.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(n.V.SAVE,e)}async applyEdits(e,t){const{applyEdits:i}=await r.e(8540).then(r.bind(r,48540));let o=t;await this.load();const n=this.associatedLayer;if(!n)throw new s.s(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:a}=n,l=!!n.infoFor3D,p=o?.globalIdUsed??!0;if(l&&null==a)throw new s.s(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(l&&!p)throw new s.s(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return(0,s.fr)(n.url)&&l&&null!=e.deleteFeatures&&null!=a&&(o={...o,globalIdToObjectId:await(0,s.m_)(n,e.deleteFeatures,a)}),i(this,n.source,e,o)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new s.s(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??={};const r=e=>{throw s.G.getLogger(this).error(".convertMesh()",e.message),e};await this.load(),this.infoFor3D||r(new s.s("invalid:layer","SceneLayer has no capability for mesh conversion"));const n=await this.extractAndFilterFiles(e),a=n.reduce(((e,t)=>(0,s.m$)(this.infoFor3D,t)?e+1:e),0);0===a&&r(new o.i),a>1&&r(new o.m);const l=this.spatialReference,p=t.location??new s.D({x:0,y:0,z:0,spatialReference:l}),u=p.spatialReference.isGeographic?"local":"georeferenced",d=i.$.createWithExternalSource(p,n,{vertexSpace:u,transform:(0,o.t)(p.spatialReference),unitConversionDisabled:!0}),[c]=await this.uploadAssets([d],{...t,useAssetOrigin:!t.location});return c}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await T(e)).filter((e=>(0,s.n0)(t,e))):e}validateLayer(e){if(e.layerType&&!A.has(e.layerType))throw new s.s("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new s.s("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new s.s("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const s=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=s;break;case"vertex-reference-frame":r=!0,i=!s;break;default:r=!1}}if(!r)throw new s.s("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new s.s("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new s.s("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some((t=>t.name===e.name)),r=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),s={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=s}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=(0,s.hF)(this);for(let r=0;r<e.length;r++){const i=e[r],o=this.originIdOf(i),n=this.associatedLayer.originIdOf(i);o<n&&(n===s.eM.SERVICE||n===s.eM.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],n)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");null==this.associatedLayer?.infoFor3D||!e||!(0,s.fr)(this.associatedLayer?.url)||!f(this)||(0,s.hF)(this).setAtOrigin("fullExtent",e.clone(),s.eM.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:s}=await(0,a.s)(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),i=await u.a.FeatureLayer();this.associatedLayer=new i({url:t,customParameters:this.customParameters,layerId:r,portalItem:s}),await this.associatedLayer.load()}catch(t){(0,s.c7)(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await(0,s.hH)((()=>this.popupEnabled&&null!=this.popupTemplate));const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?s.G.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):s.G.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;"mesh-pyramids"===this.profile&&(0,c.$)(s.G.getLogger(this),(0,c.P)("Mesh scene layers","relative-to-scene",e)),(0,c.$)(s.G.getLogger(this),(0,c.w)("Scene layers",e))}async fetchStatistics(e,t){return await x({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};(0,s.bt)([(0,s.bu)({types:{key:"type",base:s.n1,typeMap:{selection:s.n2}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],O.prototype,"featureReduction",void 0),(0,s.bt)([(0,s.bu)({type:[b],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],O.prototype,"rangeInfos",void 0),(0,s.bt)([(0,s.bu)({json:{read:!1}})],O.prototype,"associatedLayer",void 0),(0,s.bt)([(0,s.bu)({type:["show","hide"]})],O.prototype,"listMode",void 0),(0,s.bt)([(0,s.bu)({type:["ArcGISSceneServiceLayer"]})],O.prototype,"operationalLayerType",void 0),(0,s.bt)([(0,s.bu)({json:{read:!1},readOnly:!0})],O.prototype,"type",void 0),(0,s.bt)([(0,s.bu)({...E.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],O.prototype,"fields",void 0),(0,s.bt)([(0,s.bu)()],O.prototype,"types",null),(0,s.bt)([(0,s.bu)()],O.prototype,"typeIdField",null),(0,s.bt)([(0,s.bu)()],O.prototype,"templates",null),(0,s.bt)([(0,s.bu)()],O.prototype,"formTemplate",null),(0,s.bt)([(0,s.bu)()],O.prototype,"attributeTableTemplate",null),(0,s.bt)([(0,s.bu)({readOnly:!0,clonable:!1})],O.prototype,"fieldsIndex",null),(0,s.bt)([(0,s.bu)({type:s.n3,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],O.prototype,"floorInfo",void 0),(0,s.bt)([(0,s.bu)(E.outFields)],O.prototype,"outFields",void 0),(0,s.bt)([(0,s.bu)({type:p.p,readOnly:!0,json:{read:!1}})],O.prototype,"nodePages",void 0),(0,s.bt)([(0,s.eg)("service","nodePages",["nodePages","pointNodePages"])],O.prototype,"readNodePages",null),(0,s.bt)([(0,s.bu)({type:[p.a],readOnly:!0})],O.prototype,"materialDefinitions",void 0),(0,s.bt)([(0,s.bu)({type:[p.y],readOnly:!0})],O.prototype,"textureSetDefinitions",void 0),(0,s.bt)([(0,s.bu)({type:[p.m],readOnly:!0})],O.prototype,"geometryDefinitions",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],O.prototype,"serviceUpdateTimeStamp",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],O.prototype,"attributeStorageInfo",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],O.prototype,"statisticsInfo",void 0),(0,s.bt)([(0,s.bu)({type:s.a8.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],O.prototype,"excludeObjectIds",void 0),(0,s.bt)([(0,s.bu)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],O.prototype,"definitionExpression",void 0),(0,s.bt)([(0,s.bu)({type:L,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],O.prototype,"filter",void 0),(0,s.bt)([(0,s.bu)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],O.prototype,"path",void 0),(0,s.bt)([(0,s.bu)(s.ex)],O.prototype,"elevationInfo",null),(0,s.bt)([(0,s.bu)({readOnly:!0,json:{read:!1}})],O.prototype,"effectiveCapabilities",null),(0,s.bt)([(0,s.bu)({readOnly:!0})],O.prototype,"effectiveEditingEnabled",null),(0,s.bt)([(0,s.bu)({type:String})],O.prototype,"geometryType",null),(0,s.bt)([(0,s.bu)(s.hp)],O.prototype,"labelsVisible",void 0),(0,s.bt)([(0,s.bu)({type:[s.hq],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:s.hr},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:s.hr},write:!0}})],O.prototype,"labelingInfo",void 0),(0,s.bt)([(0,s.bu)(s.ei)],O.prototype,"legendEnabled",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return void 0!==r?(0,s.n4)(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],O.prototype,"opacity",void 0),(0,s.bt)([(0,s.bu)({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],O.prototype,"priority",void 0),(0,s.bt)([(0,s.bu)({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],O.prototype,"semantic",void 0),(0,s.bt)([(0,s.bu)({types:s.hv,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],O.prototype,"renderer",null),(0,s.bt)([(0,s.bu)({json:{read:!1}})],O.prototype,"cachedDrawingInfo",void 0),(0,s.bt)([(0,s.eg)("service","cachedDrawingInfo")],O.prototype,"readCachedDrawingInfo",null),(0,s.bt)([(0,s.bu)({readOnly:!0,json:{read:!1}})],O.prototype,"capabilities",null),(0,s.bt)([(0,s.bu)({type:Boolean,json:{read:!1}})],O.prototype,"editingEnabled",null),(0,s.bt)([(0,s.bu)({readOnly:!0,json:{write:!1,read:!1}})],O.prototype,"infoFor3D",null),(0,s.bt)([(0,s.bu)({readOnly:!0,json:{write:!1,read:!1}})],O.prototype,"relationships",null),(0,s.bt)([(0,s.bu)(s.ht)],O.prototype,"popupEnabled",void 0),(0,s.bt)([(0,s.bu)({type:s.ce,json:{name:"popupInfo",write:!0}})],O.prototype,"popupTemplate",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0,json:{read:!1}})],O.prototype,"defaultPopupTemplate",null),(0,s.bt)([(0,s.bu)({type:String,json:{read:!1}})],O.prototype,"objectIdField",void 0),(0,s.bt)([(0,s.eg)("service","objectIdField",["objectIdField","fields"])],O.prototype,"readObjectIdField",null),(0,s.bt)([(0,s.bu)({type:String,json:{read:!1}})],O.prototype,"globalIdField",void 0),(0,s.bt)([(0,s.eg)("service","globalIdField",["globalIdField","fields"])],O.prototype,"readGlobalIdField",null),(0,s.bt)([(0,s.bu)({readOnly:!0,type:String,json:{read:!1}})],O.prototype,"displayField",null),(0,s.bt)([(0,s.bu)({type:String,json:{read:!1}})],O.prototype,"profile",void 0),(0,s.bt)([(0,s.eg)("service","profile",["store.profile"])],O.prototype,"readProfile",null),(0,s.bt)([(0,s.bu)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],O.prototype,"normalReferenceFrame",void 0),(0,s.bt)([(0,s.bu)(s.hw)],O.prototype,"screenSizePerspectiveEnabled",void 0),(0,s.bt)([(0,s.bu)({json:{read:!1,origins:{service:{read:!0}}}})],O.prototype,"serviceItemId",void 0),(0,s.bt)([(0,s.bu)(s.n5)],O.prototype,"useViewTime",null),O=(0,s.bt)([(0,s.bv)("esri.layers.SceneLayer")],O);const P={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},_={"mesh-pyramids":"mesh",points:"point"},R=O},71215:function(e,t,r){r.d(t,{s:function(){return i}});var s=r(44444);async function i(e,t){const r=(0,s.d)(e);if(!r)throw new s.s("invalid-url","Invalid scene service url");const i={...t,sceneServerUrl:r.url.path,layerId:r.sublayer??void 0};if(i.sceneLayerItem??=await o(i),null==i.sceneLayerItem)return l(i.sceneServerUrl.replace("/SceneServer","/FeatureServer"),i);const n=await p(i);if(!n?.url)throw new s.s("related-service-not-found","Could not find feature service through portal item relationship");i.featureServiceItem=n;const a=await l(n.url,i);return a.portalItem=n,a}async function o(e){const t=(await n(e)).serviceItemId;if(!t)return null;const r=new s.S({id:t,apiKey:e.apiKey}),i=await a(e);null!=i&&(r.portal=new s.e({url:i}));try{return await r.load({signal:e.signal})}catch(o){return(0,s.B)(o),null}}async function n(e){if(e.rootDocument)return e.rootDocument;const t={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const r=await(0,s.U)(e.sceneServerUrl,t);e.rootDocument=r.data}catch{e.rootDocument={}}return e.rootDocument}async function a(e){const t=s.C?.findServerInfo(e.sceneServerUrl);if(t?.owningSystemUrl)return t.owningSystemUrl;const r=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const t=(await(0,s.U)(r,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(t)return t}catch(i){(0,s.B)(i)}return null}async function l(e,t){const r=(0,s.d)(e);if(!r)throw new s.s("invalid-feature-service-url","Invalid feature service url");const i=r.url.path,o=t.layerId;if(null==o)return{serverUrl:i};const a=n(t),l=t.featureServiceItem?await t.featureServiceItem.fetchData("json"):null,p=(l?.layers?.[0]||l?.tables?.[0])?.customParameters,u=e=>{const r={query:{f:"json",...p},responseType:"json",authMode:e,signal:t.signal};return(0,s.U)(i,r)},d=u("anonymous").catch((()=>u("no-prompt"))),[c,y]=await Promise.all([d,a]),h=y?.layers,f=c.data&&c.data.layers;if(!Array.isArray(f))throw new Error("expected layers array");if(Array.isArray(h)){for(let s=0;s<Math.min(h.length,f.length);s++)if(h[s].id===o)return{serverUrl:i,layerId:f[s].id}}else if(null!=o&&o<f.length)return{serverUrl:i,layerId:f[o].id};throw new Error("could not find matching associated sublayer")}async function p({sceneLayerItem:e,signal:t}){if(!e)return null;try{const r=(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:t})).find((e=>"Feature Service"===e.type))||null;if(!r)return null;const i=new s.S({portal:r.portal,id:r.id});return await i.load(),i}catch(r){return(0,s.B)(r),null}}},96197:function(e,t,r){r.d(t,{s:function(){return s},t:function(){return i}});const s={supportsDate:!1,supportsFixedInterval:!1,supportsAutoInterval:!1,supportsFixedBoundaries:!1,supportedStatistics:void 0},i={analytics:{supportsCacheHint:!1},attachment:{supportsContentType:!1,supportsExifInfo:!1,supportsKeywords:!1,supportsName:!1,supportsSize:!1,supportsCacheHint:!1,supportsResize:!1},data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsAsyncApplyEdits:!1,zDefault:void 0},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryBins:s,query:{maxRecordCount:0,maxRecordCountFactor:0,standardMaxRecordCount:0,supportsCacheHint:!1,supportsCentroid:!1,supportsCompactGeometry:!1,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsSqlExpression:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsStatistics:!1,tileMaxRecordCount:0}}},53674:function(e,t,r){r.d(t,{a:function(){return c},b:function(){return l},c:function(){return h},d:function(){return y},i:function(){return m},l:function(){return f},m:function(){return g},n:function(){return p},p:function(){return d},r:function(){return a},t:function(){return b},u:function(){return u}});var s=r(44444),i=r(72329);const o="upload-assets",n=()=>new Error;class a extends s.s{constructor(){super(`${o}:unsupported`,"Layer does not support asset uploads.",n())}}let l=class extends s.s{constructor(){super(`${o}:no-glb-support`,"Layer does not support glb.",n())}};class p extends s.s{constructor(){super(`${o}:no-supported-source`,"No supported external source found",n())}}class u extends s.s{constructor(){super(`${o}:not-base-64`,"Expected gltf data in base64 format after conversion.",n())}}class d extends s.s{constructor(){super(`${o}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",n())}}class c extends s.s{constructor(e,t){super(`${o}:bad-response`,`Bad response. Uploaded ${e} items and received ${t} results.`,n())}}class y extends s.s{constructor(e,t){super(`${o}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${t?.code??"-1"}. Error message: ${t?.messages??"unknown"}`,n())}}class h extends s.s{constructor(e){super(`${o}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,n())}}class f extends s.s{constructor(){super(`${o}:convert3D-failed`,"convert3D failed.")}}class m extends s.s{constructor(){super("invalid-input:no-model","No supported model found")}}class g extends s.s{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}function b(e){const t=1/(0,s.cm)(e,1);return 1!==t?new i.N({scale:[t,t,t]}):void 0}},95048:function(e,t,r){r.d(t,{j:function(){return n}});var s=r(44444),i=r(64835),o=r(51314);function n(e){const t=e?.origins??[void 0];return(r,i)=>{const o=a(e,r,i);for(const e of t){const t=(0,s.ey)(r,e,i);for(const e in o)t[e]=o[e]}}}function a(e,t,r){if("resource"===e?.type)return l(e,t,r);switch(e?.type??"other"){case"other":return{read:!0,write:!0};case"url":{const{read:e,write:t}=s.eK;return{read:e,write:t}}}}function l(e,t,r){const o=(0,s.ez)(t,r);return{type:String,read:(e,t,r)=>{const i=(0,s.eA)(e,t,r);return o.type===String?i:"function"==typeof o.type?new o.type({url:i}):void 0},write:{writer(t,n,a,l){if(!l?.resources)return"string"==typeof t?void(n[a]=(0,s.eB)(t,l)):void(n[a]=t.write({},l));const c=h(t),y=(0,s.eB)(c,{...l,verifyItemRelativeUrls:l?.verifyItemRelativeUrls?{writtenUrls:l.verifyItemRelativeUrls.writtenUrls,rootPath:void 0}:void 0},s.eC.NO),f=o.type!==String&&(!(0,i.i)(this)||l?.origin&&this.originIdOf(r)>(0,s.eD)(l.origin)),m={object:this,propertyName:r,value:t,targetUrl:y,dest:n,targetPropertyName:a,context:l,params:e};l?.portalItem&&y&&!(0,s.eE)(y)?f&&e?.contentAddressed?p(m):f?u(m):d(m):l?.portalItem&&(null==y||null!=(0,s.eF)(y)||(0,s.eG)(y)||f)?p(m):n[a]=y}}}}function p(e){const{targetUrl:t,params:r,value:i,context:n,dest:a,targetPropertyName:l}=e;if(!n.portalItem)return;const p=(0,s.eH)(t),u=y(i,t,n);if(r?.contentAddressed&&"json"!==u.type)return void n.messages?.push(new s.s("persistable:contentAddressingUnsupported",`Property "${l}" is trying to serializing a resource with content of type ${u.type} with content addressing. Content addressing is only supported for json resources.`,{content:u}));const d=r?.contentAddressed&&"json"===u.type?(0,s.eI)(u.jsonString):p?.filename??(0,s.e4)(),h=(0,s.aw)(r?.prefix??p?.prefix,d),f=`${h}.${(0,o.p)(u)}`;if(r?.contentAddressed&&n.resources&&"json"===u.type){const e=n.resources.toKeep.find((({resource:e})=>e.path===f))??n.resources.toAdd.find((({resource:e})=>e.path===f));if(e)return void(a[l]=e.resource.itemRelativeUrl)}const m=n.portalItem.resourceFromPath(f);(0,s.eG)(t)&&n.resources&&n.resources.pendingOperations.push((0,s.eJ)(t).then((e=>{m.path=`${h}.${(0,o.p)({type:"blob",blob:e})}`,a[l]=m.itemRelativeUrl})).catch((()=>{})));const g=r?.compress??!1;n.resources&&c({...e,resource:m,content:u,compress:g,updates:n.resources.toAdd}),a[l]=m.itemRelativeUrl}function u(e){const{context:t,targetUrl:r,params:i,value:n,dest:a,targetPropertyName:l}=e;if(!t.portalItem)return;const u=t.portalItem.resourceFromPath(r),d=y(n,r,t),h=(0,o.p)(d),f=(0,s.ax)(u.path),m=i?.compress??!1;h===f?(t.resources&&c({...e,resource:u,content:d,compress:m,updates:t.resources.toUpdate}),a[l]=r):p(e)}function d({context:e,targetUrl:t,dest:r,targetPropertyName:s}){e.portalItem&&e.resources&&(e.resources.toKeep.push({resource:e.portalItem.resourceFromPath(t),compress:!1}),r[s]=t)}function c({object:e,propertyName:t,updates:r,resource:s,content:i,compress:o}){const n=r=>{f(e,t,r)};r.push({resource:s,content:i,compress:o,finish:n})}function y(e,t,r){return"string"==typeof e?{type:"url",url:t}:{type:"json",jsonString:JSON.stringify(e.toJSON(r))}}function h(e){return null==e?null:"string"==typeof e?e:e.url}function f(e,t,r){"string"==typeof e[t]?e[t]=r.url:e[t].url=r.url}},75525:function(e,t,r){r.d(t,{n:function(){return i},p:function(){return o}});var s=r(44444);async function i(e,t=e.popupTemplate){if(null==t)return[];const r=await t.getRequiredFields(e.fieldsIndex),{lastEditInfoEnabled:i}=t,{objectIdField:o,typeIdField:n,globalIdField:a,relationships:l}=e;if(r.includes("*"))return["*"];const p=i?(0,s.ca)(e):[],u=(0,s.cb)(e.fieldsIndex,[...r,...p]);return n&&u.push(n),u&&o&&e.fieldsIndex?.has(o)&&!u.includes(o)&&u.push(o),u&&a&&e.fieldsIndex?.has(a)&&!u.includes(a)&&u.push(a),l&&l.forEach((t=>{const{keyField:r}=t;u&&r&&e.fieldsIndex?.has(r)&&!u.includes(r)&&u.push(r)})),u}function o(e,t){return e.popupTemplate?e.popupTemplate:null!=t&&t.defaultPopupTemplateEnabled&&null!=e.defaultPopupTemplate?e.defaultPopupTemplate:null}},51314:function(e,t,r){r.d(t,{p:function(){return i}});var s=r(44444);function i(e){return a[o(e)]||p}function o(e){return"json"===e.type?"application/json":"blob"===e.type?e.blob.type:n(e.url)}function n(e){const t=(0,s.ax)(e);return u[t]||l}const a={},l="text/plain",p=a[l],u={png:"image/png",jpeg:"image/jpeg",jpg:"image/jpg",bmp:"image/bmp",gif:"image/gif",json:"application/json",txt:"text/plain",xml:"application/xml",svg:"image/svg+xml",zip:"application/zip",pbf:"application/vnd.mapbox-vector-tile",gz:"application/gzip","bin.gz":"application/octet-stream"};for(const d in u)a[u[d]]=d}}]);
//# sourceMappingURL=9279.bb8b07b1.js.map