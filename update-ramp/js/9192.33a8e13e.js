"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[9192],{19192:function(e,t,i){i.r(t),i.d(t,{default:function(){return p}});var r,s=i(44444);let n=r=class extends s.bw{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new r({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],n.prototype,"age",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],n.prototype,"ageReceived",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],n.prototype,"displayCount",void 0),(0,s.bt)([(0,s.bu)({type:Number,json:{write:!0}})],n.prototype,"maxObservations",void 0),n=r=(0,s.bt)([(0,s.bv)("esri.layers.support.PurgeOptions")],n);const o=n,a=(0,s.hy)();function l(e,t){return new s.s("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}let d=class extends((0,s.hh)((0,s.hi)((0,s.ea)((0,s.hj)((0,s.ee)((0,s.eb)((0,s.eq)((0,s.ec)((0,s.ed)((0,s.ef)((0,s.er)((0,s.cQ)(s.ep))))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new o,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=s.aY.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=(0,s.f8)((async(e,t,r)=>{const{save:n,saveAs:o}=await i.e(1091).then(i.bind(i,51091));switch(e){case s.hE.SAVE:return n(this,t);case s.hE.SAVE_AS:return o(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new s.s("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(s.B).then((()=>this._fetchService(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const t=this._normalizeFeatureReduction(e);this._set("featureReduction",t)}set renderer(e){(0,s.hk)(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,i){t=t.layerDefinition||t;const r=t.drawingInfo?.renderer;if(r){const e=(0,s.hL)(r,t,i)||void 0;return e||s.G.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:i}),e}return(0,s.hM)(t,i)}async connect(e){const[{createConnection:t}]=await Promise.all([i.e(6328).then(i.bind(i,66328)),this.load()]),r=this.geometryType?s.dN.toJSON(this.geometryType):null,{customParameters:n=null,definitionExpression:o=null,geometryDefinition:a=null,maxReconnectionAttempts:l=0,maxReconnectionInterval:d=20,spatialReference:p=this.spatialReference}=e||this.createConnectionParameters(),u=t(this.parsedUrl,this.spatialReference,p,r,o,a,l,d,n??void 0),h=(0,s.gK)([this.on("send-message-to-socket",(e=>u.sendMessageToSocket(e))),this.on("send-message-to-client",(e=>u.sendMessageToClient(e)))]);return u.once("destroy",h.remove),u}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return(0,s.hm)(this,e)}createQuery(){const e=new s.fv;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,t){if(!this.fields)return null;let i=null;return this.fields.some((t=>(t.name===e&&(i=t.domain),!!i))),i}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(s.hE.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(s.hE.SAVE_AS,t,e)}write(e,t){const i=t?.messages;return this.webSocketUrl?(i?.push(l(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,t):(i?.push(l(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:t}=await(0,s.U)(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=t}}else{if(!this.timeInfo?.trackIdField)throw new s.s("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const e=this.fields.find((e=>"oid"===e.type))?.name;if(!e)throw new s.s("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=e}if(!this.fields)throw new s.s("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some((e=>e.name===this.objectIdField))||this.fields.push(new s.bl({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new s.s("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}),(0,s.hk)(this.renderer,this.fieldsIndex),(0,s.hl)(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),(0,s.v)(this,{origin:"service"})}};(0,s.bt)([(0,s.bu)({type:String})],d.prototype,"copyright",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],d.prototype,"defaultPopupTemplate",null),(0,s.bt)([(0,s.bu)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],d.prototype,"definitionExpression",void 0),(0,s.bt)([(0,s.bu)({type:String})],d.prototype,"displayField",void 0),(0,s.bt)([(0,s.bu)({type:s.hN})],d.prototype,"elevationInfo",void 0),(0,s.bt)([(0,s.bu)({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],d.prototype,"featureReduction",null),(0,s.bt)([(0,s.bu)(a.fields)],d.prototype,"fields",void 0),(0,s.bt)([(0,s.bu)(a.fieldsIndex)],d.prototype,"fieldsIndex",void 0),(0,s.bt)([(0,s.bu)({type:s.bn,json:{name:"layerDefinition.definitionGeometry",write:!0}})],d.prototype,"geometryDefinition",void 0),(0,s.bt)([(0,s.bu)({type:s.dN.apiValues,json:{read:{reader:s.dN.read}}})],d.prototype,"geometryType",void 0),(0,s.bt)([(0,s.bu)(s.hp)],d.prototype,"labelsVisible",void 0),(0,s.bt)([(0,s.bu)({type:[s.hq],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:s.hr},write:!0}})],d.prototype,"labelingInfo",void 0),(0,s.bt)([(0,s.bu)(s.ei)],d.prototype,"legendEnabled",void 0),(0,s.bt)([(0,s.bu)({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],d.prototype,"listMode",void 0),(0,s.bt)([(0,s.bu)({type:s.hO})],d.prototype,"maxReconnectionAttempts",void 0),(0,s.bt)([(0,s.bu)({type:s.hO})],d.prototype,"maxReconnectionInterval",void 0),(0,s.bt)([(0,s.bu)(s.hP)],d.prototype,"maxScale",void 0),(0,s.bt)([(0,s.bu)(s.hQ)],d.prototype,"minScale",void 0),(0,s.bt)([(0,s.bu)({type:String})],d.prototype,"objectIdField",void 0),(0,s.bt)([(0,s.bu)({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],d.prototype,"operationalLayerType",void 0),(0,s.bt)([(0,s.bu)({readOnly:!0})],d.prototype,"outFields",void 0),(0,s.bt)([(0,s.bu)(s.ht)],d.prototype,"popupEnabled",void 0),(0,s.bt)([(0,s.bu)({type:s.ce,json:{name:"popupInfo",write:!0}})],d.prototype,"popupTemplate",void 0),(0,s.bt)([(0,s.bu)({type:o})],d.prototype,"purgeOptions",void 0),(0,s.bt)([(0,s.bu)({json:{read:!1,write:!1}})],d.prototype,"refreshInterval",void 0),(0,s.bt)([(0,s.bu)({types:s.hu,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:s.hv,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],d.prototype,"renderer",null),(0,s.bt)([(0,s.eg)("service","renderer",["drawingInfo.renderer","defaultSymbol"]),(0,s.eg)("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],d.prototype,"readRenderer",null),(0,s.bt)([(0,s.bu)((()=>{const e=(0,s.T)(s.hw);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],d.prototype,"screenSizePerspectiveEnabled",void 0),(0,s.bt)([(0,s.bu)()],d.prototype,"sourceJSON",void 0),(0,s.bt)([(0,s.bu)({type:s.aY,json:{origins:{service:{read:{source:"spatialReference"}}}}})],d.prototype,"spatialReference",void 0),(0,s.bt)([(0,s.bu)({json:{read:!1}})],d.prototype,"type",void 0),(0,s.bt)([(0,s.bu)(s.ej)],d.prototype,"url",void 0),(0,s.bt)([(0,s.bu)({type:Number})],d.prototype,"updateInterval",void 0),(0,s.bt)([(0,s.bu)({json:{read:!1,write:!1}})],d.prototype,"useViewTime",void 0),(0,s.bt)([(0,s.bu)({type:String})],d.prototype,"webSocketUrl",void 0),d=(0,s.bt)([(0,s.bv)("esri.layers.StreamLayer")],d);const p=d}}]);
//# sourceMappingURL=9192.33a8e13e.js.map